{"version":3,"sources":["Components/Buttons/JellyButton.js","redux/selectors/subscribtionSelectors.js","Components/SteamList/SteamForm.js","services/subsApi.js","Components/SteamList/SteamItem.js","redux/operations/subscribtionsOperations.js","Components/SteamList/SteamList.js","helpers/constants.js","Components/SteamList/SubsInfo.js","Pages/Subscribers.js"],"names":["JellyButton","_ref","text","onClick","type","loading","react_default","a","createElement","className","defaultProps","subsSelector","state","subscribtions","subs","subsLoadSelector","getSubs","addSubLoadSelector","addSub","isSameDaySelector","date","sameDayAdded","isSameWeekSelector","sameWeekAdded","isSameMonthSelector","sameMonthAdded","toastError","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","toastSuccess","length","success","concat","SteamForm","name","userID","focused","warn","handleInputChange","_ref$target","target","value","_this","setState","Object","defineProperty","handleFormSubmit","e","preventDefault","_this$state","trim","includes","props","handleSubmit","_this2","this","_this$state2","_this$props","handleFilterSubs","query","showFavorites","onChangeText","onSubmit","autoComplete","onChange","placeholder","onFocus","clearTimeout","filterClearTimeout","onBlur","setTimeout","onReset","autoFocus","react_toastify","newestOnTop","rtl","pauseOnVisibilityChange","Component","connect","URL","process","getSubsApi","id","axios","get","then","response","data","postSubApi","sub","post","newSub","updateSubApi","_id","objectWithoutProperties","patch","updatedSub","SteamItem","visitedAt","favorite","updateSub","_useState","useState","_useState2","slicedToArray","setLoading","_useState3","_useState4","loadingVisitedAt","setLoadingVisitedAt","handleUpdateFavSub","_ref2","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","apply","arguments","handleUpdateVisitedAt","_ref3","_callee2","_context2","Date","toLocaleDateString","toLocaleTimeString","Fragment","timeAgo","IconButton","disabled","Refresh_default","style","color","react_spinners","src","alt","mDTP","_callee3","dispatch","getState","token","_context3","tokenSelector","abrupt","setAuthToken","subsActions","sent","t0","console","_x5","_x6","LoaderWrapper","styled","div","_templateObject","StyledTable","table","_templateObject2","TableContent","_templateObject3","addSubLoading","subscribers","useEffect","log","CircularProgress","map","SteamList_SteamItem","assign","key","START_PAGE","PER_PAGE_SUCBSCRIPTIONS_LIST","SubsInfo","showTotalAmmountOfSubs","Content","SubsInfo_templateObject","lastYearAdded","selectors","filterSubs","arr","undefined","filter","el","toLowerCase","Subscribers","perPage","currentPage","resetFilter","handleChangePageOnFilter","maxPage","Math","ceil","renderSubsList","isAuth","ownerId","find","toLocaleLowerCase","objectSpread","res","filterFavorites","filteredSubs","handleChangePage","renderPaginationList","_this$state3","indexOfLastSub","indexOfFirstSub","toConsumableArray","reverse","slice","prevProps","prevState","_this$props2","_this$state4","subsLoad","Subscribers_Content","Form","SteamList_SteamForm","SteamList_SubsInfo","List","Components_SteamList_SteamList","PaginationBlock","pagination","showQuickJumper","defaultCurrent","Number","defaultPageSize","total","Subscribers_templateObject","Subscribers_templateObject2","Subscribers_templateObject3","_templateObject4","_x","_x2","_x3","_x4","authSelector","addSubLoad","idSelector"],"mappings":"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","file":"static/js/9.3777bf7c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst JellyButton = ({ text, onClick, type, loading }) => (\n  <button type={type} className=\"jelly-button\" onClick={onClick}>\n    {loading ? (\n      <p className=\"super-slide\">Loading...</p>\n    ) : (\n      <p className=\"super-slide\">{text}</p>\n    )}\n  </button>\n);\n\nJellyButton.defaultProps = {\n  onClick: null,\n  loading: false,\n};\n\nJellyButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n  loading: PropTypes.bool,\n};\n\nexport default JellyButton;\n","export const subsSelector = state => state.subscribtions.subs;\nexport const subsLoadSelector = state => state.subscribtions.loading.getSubs;\nexport const addSubLoadSelector = state => state.subscribtions.loading.addSub;\nexport const updateFavSubLoadSelector = state =>\n  state.subscribtions.loading.updateFavSub;\n\nexport const isSameDaySelector = state => state.subscribtions.date.sameDayAdded;\nexport const isSameWeekSelector = state =>\n  state.subscribtions.date.sameWeekAdded;\nexport const isSameMonthSelector = state =>\n  state.subscribtions.date.sameMonthAdded;\nexport const lastYearSelector = state => state.subscribtions.date.lastYearAdded;\n","/* eslint-disable */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport JellyButton from '../Buttons/JellyButton';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport IconButton from '@material-ui/core/IconButton';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { addSubLoadSelector } from '../../redux/selectors/subscribtionSelectors';\n\nexport const toastError = () =>\n  toast.error('🤪 Sub already exists', {\n    position: 'top-center',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n  });\n\nexport const toastSuccess = length =>\n  toast.success(`🤟 Sub added! Total ammout:  ${length}`, {\n    position: 'top-right',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n  });\n\nclass SteamForm extends Component {\n  static propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n    handleFilterSubs: PropTypes.func.isRequired,\n    query: PropTypes.string.isRequired,\n    showFavorites: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    userID: '',\n    focused: false,\n  };\n\n  warn = text =>\n    toast.warn(`😤😤😤 ${text ? text : 'Fill the field!!!'} `, {\n      position: 'top-left',\n      autoClose: 2000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n    });\n\n  filterClearTimeout;\n\n  handleInputChange = ({ target: { name, value } }) =>\n    this.setState({ [name]: value });\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n    const { name, userID } = this.state;\n    if (name.trim() === '' || userID.trim() === '') return this.warn();\n    if (userID.includes('/')) return this.warn('Forgot to remove \"/\" ');\n    this.props.handleSubmit(this.state);\n    return this.setState({ name: '', userID: '' });\n  };\n\n  render() {\n    const { name, userID } = this.state;\n    const {\n      handleFilterSubs,\n      query,\n      showFavorites,\n      onChangeText,\n      loading,\n    } = this.props;\n    return (\n      <form onSubmit={this.handleFormSubmit} className=\"sub-form\">\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={name}\n          name=\"name\"\n          onChange={this.handleInputChange}\n          className=\"sub-form__input\"\n          placeholder=\"Add sub here\"\n        />\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={userID}\n          name=\"userID\"\n          onChange={this.handleInputChange}\n          className=\"sub-form__input\"\n          placeholder=\"User id\"\n        />\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={query}\n          onFocus={() => clearTimeout(this.filterClearTimeout)}\n          onBlur={() => {\n            this.filterClearTimeout = setTimeout(() => {\n              this.props.onReset();\n            }, 5000);\n          }}\n          autoFocus\n          placeholder={'filter sub here'}\n          name=\"query\"\n          onChange={handleFilterSubs}\n          className=\"sub-form__input\"\n        />\n        <div className=\"multi-button\">\n          <button type=\"submit\">{loading ? 'Loading...' : 'Add'}</button>\n          <button\n            text={onChangeText}\n            type=\"button\"\n            onClick={() => showFavorites()}\n          >\n            {onChangeText}\n          </button>\n        </div>\n        {/* <ButtonWrapper>\n          <JellyButton text=\"Add new sub\" loading={loading} type=\"submit\" />\n          <JellyButton\n            text={onChangeText}\n            type=\"button\"\n            onClick={() => showFavorites()}\n          />\n        </ButtonWrapper> */}\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={4000}\n          hideProgressBar={false}\n          newestOnTop\n          closeOnClick\n          rtl={false}\n          pauseOnVisibilityChange\n          draggable\n          pauseOnHover\n        />\n      </form>\n    );\n  }\n}\n\nSteamForm.propTypes = {\n  loading: PropTypes.bool.isRequired,\n};\n\nconst mSTP = state => ({\n  loading: addSubLoadSelector(state),\n});\n\nexport default connect(mSTP)(SteamForm);\n","import axios from 'axios';\n\nconst URL = process.env.REACT_APP_URL;\n// const URL = 'http://localhost:5678';\n\nexport const getSubsApi = id =>\n  axios.get(`${URL}/subscribers/${id}`).then(response => response.data.subs);\n\nexport const postSubApi = sub =>\n  axios.post(`${URL}/subscribers`, sub).then(response => response.data.newSub);\n\nexport const updateSubApi = ({ _id, ...sub }) =>\n  axios\n    .patch(`${URL}/subscribers/updateSub/${_id}`, sub)\n    .then(response => response.data.updatedSub);\n","import React, { useState } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { ClipLoader } from 'react-spinners';\n\nimport { updateSub } from '../../redux/operations/subscribtionsOperations';\nimport { timeAgo } from '../../helpers/dateDiff';\n\nconst SteamItem = ({ _id, name, date, visitedAt, favorite, updateSub }) => {\n  const [loading, setLoading] = useState(false);\n  const [loadingVisitedAt, setLoadingVisitedAt] = useState(false);\n\n  const handleUpdateFavSub = async () => {\n    setLoading(true);\n\n    await updateSub({ _id, favorite: !favorite });\n\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  };\n\n  const handleUpdateVisitedAt = async () => {\n    setLoadingVisitedAt(true);\n\n    await updateSub({\n      _id,\n      visitedAt: `${new Date().toLocaleDateString()} ${new Date().toLocaleTimeString()}`,\n    });\n\n    setLoadingVisitedAt(false);\n  };\n\n  return (\n    <tr className=\"subs-row\">\n      <td className=\"subs-row__item item_name\">{name}</td>\n      <td className=\"subs-row__item item_date_visited\">\n        {visitedAt ? (\n          <>\n            {timeAgo(visitedAt)}\n            <IconButton\n              disabled={loadingVisitedAt}\n              onClick={handleUpdateVisitedAt}\n            >\n              <RefreshIcon style={{ color: 'white' }} />\n            </IconButton>\n          </>\n        ) : (\n          <>\n            - ,\n            <IconButton\n              disabled={loadingVisitedAt}\n              onClick={handleUpdateVisitedAt}\n            >\n              <RefreshIcon style={{ color: 'white' }} />\n            </IconButton>\n          </>\n        )}\n      </td>\n      <td className=\"subs-row__item item_date_added\">\n        {`${timeAgo(date)}, ${date}`}\n      </td>\n      <td className=\"subs-row__item item_favorite\">\n        <button\n          type=\"button\"\n          className=\"image-wrapper\"\n          onClick={() => handleUpdateFavSub()}\n        >\n          {loading ? (\n            <ClipLoader color=\"#fff\" loading={loading} />\n          ) : (\n            <img\n              className=\"item-image\"\n              src={\n                favorite\n                  ? 'https://image.flaticon.com/icons/svg/148/148838.svg'\n                  : 'https://image.flaticon.com/icons/svg/149/149219.svg'\n              }\n              alt=\"fav\"\n            />\n          )}\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nSteamItem.defaultProps = {\n  favorite: false,\n};\n\nSteamItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  _id: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  favorite: PropTypes.bool,\n  updateSub: PropTypes.func.isRequired,\n};\n\nconst mDTP = {\n  updateSub,\n};\n\nexport default connect(\n  null,\n  mDTP,\n)(SteamItem);\n","import setAuthToken from '../../helpers/setAuthToken';\nimport * as subsActions from '../actions/subscribtionActions';\nimport { getSubsApi, postSubApi, updateSubApi } from '../../services/subsApi';\nimport { tokenSelector } from '../selectors/authSelectors';\n\n/* eslint-disable */\nexport const getSubs = id => async (dispatch, getState) => {\n  const token = tokenSelector(getState());\n  if (!token) return;\n  setAuthToken(token);\n  dispatch(subsActions.subsRequestStart());\n  try {\n    const subs = await getSubsApi(id);\n    dispatch(subsActions.subsRequestSuccess(subs));\n  } catch (err) {\n    console.error(`error while getting subs: ${err}`);\n    dispatch(subsActions.subsRequestError(err));\n  }\n};\n\nexport const addSub = sub => async (dispatch, getState) => {\n  const token = tokenSelector(getState());\n  if (!token) return;\n  setAuthToken(token);\n  dispatch(subsActions.addSubRequest());\n\n  try {\n    const newSub = await postSubApi(sub);\n    return dispatch(subsActions.addSubSuccess(newSub));\n  } catch (err) {\n    console.error(`error while adding sub: ${err}`);\n    dispatch(subsActions.addSubError(err));\n  }\n};\n\nexport const updateSub = sub => async (dispatch, getState) => {\n  const token = tokenSelector(getState());\n  if (!token) return;\n  setAuthToken(token);\n  dispatch(subsActions.updateSubStart());\n  try {\n    const updatedSub = await updateSubApi(sub);\n    return await dispatch(subsActions.updateSubSuccess(updatedSub));\n  } catch (err) {\n    dispatch(subsActions.updateSubError(err));\n    console.error(`error while updating sub: ${err}`);\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PropTypes from 'prop-types';\nimport SteamItem from './SteamItem';\nimport { addSubLoadSelector } from '../../redux/selectors/subscribtionSelectors';\n\nconst SteamList = ({ subscribers, addSubLoading }) => {\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (addSubLoading) {\n      return setLoading(true);\n    }\n\n    return setLoading(false);\n  }, [addSubLoading]);\n  console.log('subscribers', subscribers);\n  return (\n    subscribers.length > 0 && (\n      <div>\n        {loading && (\n          <LoaderWrapper>\n            <CircularProgress />\n          </LoaderWrapper>\n        )}\n        <StyledTable>\n          <tbody>\n            <tr className=\"subs-head\">\n              <th className=\"subs-head__item item_name\">Name</th>\n              <th className=\"subs-head__item item_date_visited\">\n                Last Visited\n              </th>\n              <th className=\"subs-head__item item_date_added\">Date Added</th>\n              <th className=\"subs-head__item item_favorite\">Favorite</th>\n            </tr>\n          </tbody>\n        </StyledTable>\n        <TableContent>\n          <StyledTable>\n            <tbody className=\"subs-body\">\n              {subscribers.map(sub => (\n                <SteamItem key={sub._id} {...sub} />\n              ))}\n            </tbody>\n          </StyledTable>\n        </TableContent>\n      </div>\n    )\n  );\n};\n\nconst LoaderWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst StyledTable = styled.table`\n  width: 100%;\n  font-size: 20px;\n  padding: 2rem;\n  color: #fff;\n  margin: 10px auto;\n`;\n\nconst TableContent = styled.div`\n  width: 100%;\n  height: calc(100vh - 200px);\n  overflow-y: auto;\n  overflow-x: hidden;\n  margin-bottom: 10px;\n\n  /* width */\n  ::-webkit-scrollbar {\n    width: 2px;\n  }\n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    background: transparent;\n  }\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: #888;\n  }\n\n  /* Handle on hover */\n  ::-webkit-scrollbar-thumb:hover {\n    background: #555;\n  }\n`;\n\nSteamList.propTypes = {\n  subscribers: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  addSubLoading: PropTypes.bool.isRequired,\n};\n\nconst mSTP = state => ({\n  addSubLoading: addSubLoadSelector(state),\n});\n\nexport default connect(mSTP)(SteamList);\n","export const START_PAGE = 1;\nexport const PER_PAGE_SUCBSCRIPTIONS_LIST = 20;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport * as selectors from '../../redux/selectors/subscribtionSelectors';\n\nfunction SubsInfo({\n  showTotalAmmountOfSubs,\n  sameDayAdded,\n  sameWeekAdded,\n  sameMonthAdded,\n}) {\n  return (\n    <div className=\"subs-length-wrap\">\n      <Content>\n        <p className=\"subs-length-text\">Today added:</p>\n        <span className=\"subs-length-text__num\">{sameDayAdded}</span>\n      </Content>\n      <Content>\n        <p className=\"subs-length-text\">Added this week:</p>\n        <span className=\"subs-length-text__num\">{sameWeekAdded}</span>\n      </Content>\n      <Content>\n        <p className=\"subs-length-text\">Added this month:</p>\n        <span className=\"subs-length-text__num\">{sameMonthAdded}</span>\n      </Content>\n      <Content>\n        <p className=\"subs-length-text\">Total:</p>\n        <span className=\"subs-length-text__num\">{showTotalAmmountOfSubs}</span>\n      </Content>\n    </div>\n  );\n}\n\nconst Content = styled.div`\n  display: flex;\n  padding: 14px;\n  border-radius: 10px;\n  transition: all 0.4s;\n  align-items: center;\n  margin-bottom: 10px;\n  font-size: 24px;\n  justify-content: space-between;\n  width: 100%;\n  color: rgba(156, 146, 146, 0.616);\n  &:hover {\n    color: white;\n    transform: translateX(-10px) scale(1.1) rotateX(10deg);\n    box-shadow: 6px 6px 11px -2px rgba(107, 107, 107, 1);\n  }\n`;\n\nSubsInfo.defaultProps = {\n  lastYearAdded: 0,\n};\n\nSubsInfo.propTypes = {\n  showTotalAmmountOfSubs: PropTypes.number.isRequired,\n  sameDayAdded: PropTypes.number.isRequired,\n  sameWeekAdded: PropTypes.number.isRequired,\n  sameMonthAdded: PropTypes.number.isRequired,\n};\n\nconst mSTP = state => ({\n  sameDayAdded: selectors.isSameDaySelector(state),\n  sameWeekAdded: selectors.isSameWeekSelector(state),\n  sameMonthAdded: selectors.isSameMonthSelector(state),\n});\n\nexport default connect(mSTP)(SubsInfo);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport styled from 'styled-components';\nimport { Pagination } from 'antd';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport SteamForm, {\n  toastError,\n  toastSuccess,\n} from '../Components/SteamList/SteamForm';\nimport SteamList from '../Components/SteamList/SteamList';\nimport { getSubs, addSub } from '../redux/operations/subscribtionsOperations';\nimport { authSelector, idSelector } from '../redux/selectors/authSelectors';\nimport {\n  subsSelector,\n  subsLoadSelector,\n  addSubLoadSelector,\n} from '../redux/selectors/subscribtionSelectors';\nimport { START_PAGE, PER_PAGE_SUCBSCRIPTIONS_LIST } from '../helpers/constants';\nimport SubsInfo from '../Components/SteamList/SubsInfo';\n\nconst filterSubs = (arr, query = '') =>\n  arr.filter(\n    el =>\n      el.name.toLowerCase().includes(query.toLowerCase()) ||\n      el.userID === query,\n  );\n\nclass Subscribers extends Component {\n  state = {\n    query: '',\n    showFavorites: false,\n    onChangeText: 'Show favourites',\n    perPage: PER_PAGE_SUCBSCRIPTIONS_LIST,\n    currentPage: START_PAGE,\n  };\n  /* eslint-disable */\n\n  componentDidUpdate(prevProps, prevState) {\n    const { query } = this.state;\n    const { ownerId, getSubs } = this.props;\n\n    if (prevProps.ownerId !== ownerId) {\n      getSubs(ownerId);\n    }\n\n    if (prevState.query !== query) {\n      this.handleChangePageOnFilter();\n    }\n  }\n\n  resetFilter = () => this.setState({ query: '' });\n\n  handleChangePageOnFilter = () => {\n    const { currentPage } = this.state;\n    if (currentPage > this.maxPage()) {\n      this.setState({ currentPage: this.maxPage() });\n    }\n    if (currentPage < 1) {\n      this.setState({ currentPage: 1 });\n    }\n  };\n\n  maxPage = () => {\n    return Math.ceil(\n      this.renderSubsList().length / PER_PAGE_SUCBSCRIPTIONS_LIST,\n    );\n  };\n\n  handleSubmit = sub => {\n    const { isAuth, addSub, subs, ownerId } = this.props;\n    if (!isAuth) return;\n    const subAlreadyExists = subs.find(\n      el =>\n        el.name.toLowerCase().trim() === sub.name.toLocaleLowerCase().trim() ||\n        el.userID === sub.userID.trim(),\n    );\n\n    if (subAlreadyExists) {\n      toastError();\n    } else {\n      const subToAdd = {\n        favorite: false,\n        date: `${new Date().toLocaleDateString()} ${new Date().toLocaleTimeString()}`,\n        visitedAt: `${new Date().toLocaleDateString()} ${new Date().toLocaleTimeString()}`,\n        ...sub,\n        ownerId,\n      };\n\n      addSub(subToAdd).then(res => {\n        if (!res) return toastError();\n\n        return toastSuccess(subs.length + 1);\n      });\n    }\n  };\n\n  handleFilterSubs = e => this.setState({ query: e.target.value });\n\n  filterFavorites = () => this.props.subs.filter(el => el.favorite);\n\n  showFavorites = () =>\n    this.setState(state => ({\n      showFavorites: !state.showFavorites,\n      onChangeText: state.showFavorites ? 'Favorites' : 'All',\n    }));\n\n  filteredSubs = (subs, query) => filterSubs(subs, query);\n\n  showTotalAmmountOfSubs = () => {\n    const { subs } = this.props;\n    const { showFavorites, query } = this.state;\n\n    return showFavorites\n      ? this.filteredSubs(this.filterFavorites(), query).length\n      : this.filteredSubs(subs, query).length;\n  };\n\n  renderSubsList = () => {\n    const { subs } = this.props;\n    const { showFavorites, query } = this.state;\n\n    return showFavorites\n      ? this.filteredSubs(this.filterFavorites(), query)\n      : this.filteredSubs(subs, query);\n  };\n\n  handleChangePage = name => {\n    this.setState({\n      currentPage: name,\n    });\n  };\n\n  renderPaginationList = () => {\n    const { currentPage, perPage } = this.state;\n    const list = [...this.renderSubsList().reverse()];\n\n    const indexOfLastSub = currentPage * perPage;\n    const indexOfFirstSub = indexOfLastSub - perPage;\n    return list.slice(indexOfFirstSub, indexOfLastSub);\n  };\n\n  render() {\n    const { query, onChangeText, perPage, currentPage } = this.state;\n    const { subsLoad } = this.props;\n    return (\n      <Content>\n        {subsLoad && <div className=\"rainbow-marker-loader\" />}\n\n        <Form>\n          <SteamForm\n            handleSubmit={this.handleSubmit}\n            query={query}\n            handleFilterSubs={this.handleFilterSubs}\n            showFavorites={this.showFavorites}\n            onChangeText={onChangeText}\n            onReset={this.resetFilter}\n          />\n\n          <SubsInfo showTotalAmmountOfSubs={this.showTotalAmmountOfSubs()} />\n        </Form>\n        <List>\n          <SteamList subscribers={this.renderPaginationList()} />\n\n          {this.renderSubsList().length > 0 && (\n            <PaginationBlock>\n              <Pagination\n                showQuickJumper\n                defaultCurrent={Number(currentPage)}\n                defaultPageSize={Number(perPage)}\n                total={this.renderSubsList().length}\n                onChange={this.handleChangePage}\n              />\n            </PaginationBlock>\n          )}\n          <ToastContainer />\n        </List>\n      </Content>\n    );\n  }\n}\n\nconst PaginationBlock = styled.div`\n  text-align: center;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 90%;\n  margin: 0 auto;\n  justify-content: space-between;\n`;\n\nconst Form = styled.div`\n  width: 30%;\n  /* margin: 0 auto; */\n  display: flex;\n  flex-direction: column;\n`;\n\nconst List = styled.div`\n  position: relative;\n  width: 66%;\n`;\n\nSubscribers.defaultProps = {\n  ownerId: null,\n};\n\nSubscribers.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  getSubs: PropTypes.func.isRequired,\n  addSub: PropTypes.func.isRequired,\n  subs: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  subsLoad: PropTypes.bool.isRequired,\n  ownerId: PropTypes.string,\n};\n\nconst mapSTP = state => ({\n  isAuth: authSelector(state),\n  subs: subsSelector(state),\n  subsLoad: subsLoadSelector(state),\n  addSubLoad: addSubLoadSelector(state),\n  ownerId: idSelector(state),\n});\n\nconst mDTP = {\n  getSubs,\n  addSub,\n};\n\nexport default connect(\n  mapSTP,\n  mDTP,\n)(Subscribers);\n"],"sourceRoot":""}