{"version":3,"sources":["Pages/Auth/Register.js","helpers/ValidationHelper.js","Components/Copyright/Copyright.js","Components/AuthForm/AuthForm.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","_redux_operations_authOperations__WEBPACK_IMPORTED_MODULE_2__","_Components_AuthForm_AuthForm__WEBPACK_IMPORTED_MODULE_3__","mDTP","signUp","connect","_ref","a","createElement","submitFunc","redirectToText","redirectToPath","typeOfAuth","ValidationHelper","value","type","this","REQUIRED_INPUT_ERR_MSG","length","SHORT_PASS_ERR_MSG","LONG_PASS_ERR_MSG","emailRegex","test","INVALID_EMAIL_ERR_MSG","Copyright","react_default","Typography","variant","color","align","Date","getFullYear","validate","check","toString","trim","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","AuthForm","errorMsg","loading","clearAuthErrorMsg","useEffect","classes","_useState","useState","_useState2","Object","slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","rememberMe","setRememberMe","_useState7","_useState8","errors","setErrors","_useState9","_useState10","showPassword","setShowPassword","handleInputChange","_ref2","_ref2$target","target","name","checked","handleBlur","_ref3","_ref3$target","objectSpread","defineProperty","Container","component","maxWidth","CssBaseline","className","Avatar","LockOutlined_default","onSubmit","e","preventDefault","validation","keys","find","el","TextField","error","Boolean","helperText","fullWidth","onBlur","onChange","label","autoComplete","autoFocus","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","Visibility_default","VisibilityOff_default","FormControlLabel","control","Checkbox","Button","disabled","Grid","container","item","xs","react_router_dom","to","Box","mt","mb","defaultProps","state","authErrorSelector","authLoadingSelector"],"mappings":"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","file":"static/js/7.e0962e0c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { signUp } from '../../redux/operations/authOperations';\nimport AuthForm from '../../Components/AuthForm/AuthForm';\n\nfunction Register({ signUp }) {\n  return (\n    <AuthForm\n      submitFunc={signUp}\n      redirectToText=\"Already have an account? Sign in\"\n      redirectToPath=\"/auth/login\"\n      typeOfAuth=\"Sign Up\"\n    />\n  );\n}\n\nRegister.propTypes = {\n  signUp: PropTypes.func.isRequired,\n};\n\nconst mDTP = {\n  signUp,\n};\n\nexport default connect(\n  null,\n  mDTP,\n)(Register);\n","export default class ValidationHelper {\n  /* eslint-disable no-useless-escape */\n  static emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  static REQUIRED_INPUT_ERR_MSG = 'This field is required';\n\n  static SHORT_PASS_ERR_MSG = 'Password is too short!';\n\n  static LONG_PASS_ERR_MSG = 'Password is too long!';\n\n  static INVALID_EMAIL_ERR_MSG = \"Email your've entered is invalid\";\n\n  static check(value, type) {\n    switch (type) {\n      case 'username': {\n        if (!value) {\n          return this.REQUIRED_INPUT_ERR_MSG;\n        }\n        return '';\n      }\n      case 'password': {\n        if (!value) return this.REQUIRED_INPUT_ERR_MSG;\n        if (value.length < 6) return this.SHORT_PASS_ERR_MSG;\n        if (value.length > 16) return this.LONG_PASS_ERR_MSG;\n\n        return '';\n      }\n\n      case 'email': {\n        if (!value) return this.REQUIRED_INPUT_ERR_MSG;\n        if (!this.emailRegex.test(value)) return this.INVALID_EMAIL_ERR_MSG;\n\n        return '';\n      }\n\n      default:\n        return '';\n    }\n  }\n\n  static validate = (type, value) => {\n    return this.check(value.toString().trim(), type);\n  };\n}\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nexport default function Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      Copyright Â© Nykolyn Andrii 2019-{new Date().getFullYear()}.\n    </Typography>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  FormControlLabel,\n  Checkbox,\n  Grid,\n  Box,\n  Typography,\n  Container,\n  InputAdornment,\n  IconButton,\n} from '@material-ui/core';\nimport { Link as RouteLink } from 'react-router-dom';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport ValidationHelper from '../../helpers/ValidationHelper';\nimport Copyright from '../Copyright/Copyright';\nimport { clearAuthErrorMsg } from '../../redux/actions/authActions';\nimport {\n  authErrorSelector,\n  authLoadingSelector,\n} from '../../redux/selectors/authSelectors';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst AuthForm = ({\n  errorMsg,\n  loading,\n  clearAuthErrorMsg,\n  submitFunc,\n  redirectToPath,\n  redirectToText,\n  typeOfAuth,\n}) => {\n  useEffect(() => {\n    if (errorMsg) {\n      clearAuthErrorMsg();\n    }\n  }, [clearAuthErrorMsg]);\n  const classes = useStyles();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [rememberMe, setRememberMe] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleInputChange = ({ target: { name, value, checked } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      case 'rememberMe':\n        return setRememberMe(checked);\n\n      default:\n        return '';\n    }\n  };\n\n  const handleBlur = ({ target: { name, value } }) => {\n    if (!value) return;\n    setErrors({ ...errors, [name]: ValidationHelper.validate(name, value) });\n  };\n\n  const validate = () => {\n    const validation = {\n      email: ValidationHelper.validate('email', email),\n      password: ValidationHelper.validate('password', password),\n    };\n\n    setErrors(validation);\n\n    return Object.keys(validation).find(el => validation[el]);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) return;\n\n    submitFunc({ password, email, rememberMe });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          {typeOfAuth}\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Typography component=\"h1\" variant=\"h5\" color=\"error\" align=\"center\">\n            {errorMsg}\n          </Typography>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            error={Boolean(errors.email)}\n            helperText={errors.email}\n            fullWidth\n            value={email}\n            onBlur={handleBlur}\n            onChange={handleInputChange}\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            onBlur={handleBlur}\n            helperText={errors.password}\n            error={Boolean(errors.password)}\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type={showPassword ? 'text' : 'password'}\n            value={password}\n            onChange={handleInputChange}\n            autoComplete=\"current-password\"\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton onClick={() => handleClickShowPassword()}>\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                value={rememberMe}\n                name=\"rememberMe\"\n                onChange={handleInputChange}\n                color=\"primary\"\n              />\n            }\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            disabled={loading}\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            {loading ? 'Loading...' : 'Sign In'}\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              {/* <Link href=\"#\" variant=\"body2\">\n              Forgot password?\n            </Link> */}\n            </Grid>\n            <Grid item>\n              <RouteLink to={redirectToPath} className=\"auth-switch\">\n                {/* eslint-disable-next-line */}\n                {redirectToText}\n              </RouteLink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8} mb={4}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n};\n\nAuthForm.defaultProps = {\n  errorMsg: '',\n};\n\nAuthForm.propTypes = {\n  errorMsg: PropTypes.string,\n  clearAuthErrorMsg: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  submitFunc: PropTypes.func.isRequired,\n  redirectToPath: PropTypes.string.isRequired,\n  typeOfAuth: PropTypes.string.isRequired,\n  redirectToText: PropTypes.string.isRequired,\n};\n\nconst mSTP = state => ({\n  errorMsg: authErrorSelector(state),\n  loading: authLoadingSelector(state),\n});\n\nconst mDTP = {\n  clearAuthErrorMsg,\n};\n\nexport default connect(\n  mSTP,\n  mDTP,\n)(AuthForm);\n"],"sourceRoot":""}