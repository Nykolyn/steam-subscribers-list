{"version":3,"sources":["Components/Buttons/JellyButton.js","redux/selectors/subscribtionSelectors.js","Components/SteamList/SteamForm.js","Components/SteamList/SteamItem.js","Components/SteamList/SteamList.js","services/subsApi.js","helpers/constants.js","Components/SteamList/Pagination.js","Pages/Subscribers.js","redux/operations/subscribtionsOperations.js"],"names":["JellyButton","_ref","text","onClick","type","loading","react_default","a","createElement","className","defaultProps","subsSelector","state","subscribtions","subs","subsLoadSelector","getSubs","addSubLoadSelector","addSub","updateFavSubLoadSelector","updateFavSub","toastError","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","toastSuccess","length","success","concat","SteamForm","name","userID","warn","handleInputChange","_ref$target","target","value","_this","setState","Object","defineProperty","handleFormSubmit","e","preventDefault","_this$state","includes","props","handleSubmit","_this$state2","this","_this$props","handleFilterSubs","query","showFavorites","onChangeText","onSubmit","autoComplete","onChange","placeholder","Buttons_JellyButton","autoFocus","react_toastify","newestOnTop","rtl","pauseOnVisibilityChange","Component","connect","moment","defaultFormat","SteamItem","id","_id","date","favorite","handleFavChange","_useState","useState","_useState2","slicedToArray","setLoading","handleLoading","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","wrap","_context2","prev","next","setTimeout","_callee","_context","stop","apply","arguments","timeAgo","fromNow","Fragment","react_spinners","color","src","alt","SteamList","subscribers","TransitionGroup","map","sub","CSSTransition","key","timeout","classNames","SteamList_SteamItem","assign","URL","process","getSubsApi","axios","get","then","response","data","postSubApi","post","addedSub","updateFavApi","patch","updatedSub","START_PAGE","PER_PAGE_SUCBSCRIPTIONS_LIST","Pagination","maxPage","handleChangePage","currentPage","IconButton","disabled","ArrowBackIos_default","ArrowForwardIos_default","filterSubs","arr","undefined","filter","el","toLowerCase","Subscribers","perPage","handleChangePageOnFilter","Math","ceil","renderSubsList","isAuth","ownerId","find","trim","toLocaleLowerCase","objectSpread","Date","toLocaleDateString","toLocaleTimeString","res","filterFavorites","handleFavoriteChange","filteredSubs","showTotalAmmountOfSubs","renderPaginationList","_this$state3","indexOfLastSub","indexOfFirstSub","toConsumableArray","reverse","slice","_this$props2","prevProps","prevState","_this$props3","_this$state4","subsLoad","SteamList_SteamForm","Components_SteamList_SteamList","SteamList_Pagination","mDTP","dispatch","getState","token","tokenSelector","abrupt","setAuthToken","subsRequestStart","sent","subsRequestSuccess","t0","console","subsRequestError","_x","_x2","newSub","addSubRequest","addSubSuccess","addSubError","_x3","_x4","_ref3","_callee3","_context3","updateFavSubStart","updateFavSubSuccess","updateFavSubError","_x5","_x6","authSelector","addSubLoad","updFavSubLoad","idSelector"],"mappings":"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","file":"static/js/11.92366407.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst JellyButton = ({ text, onClick, type, loading }) => (\n  <button type={type} className=\"jelly-button\" onClick={onClick}>\n    {loading ? (\n      <p className=\"super-slide\">Loading...</p>\n    ) : (\n      <p className=\"super-slide\">{text}</p>\n    )}\n  </button>\n);\n\nJellyButton.defaultProps = {\n  onClick: null,\n  loading: false,\n};\n\nJellyButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n  loading: PropTypes.bool,\n};\n\nexport default JellyButton;\n","export const subsSelector = state => state.subscribtions.subs;\nexport const subsLoadSelector = state => state.subscribtions.loading.getSubs;\nexport const addSubLoadSelector = state => state.subscribtions.loading.addSub;\nexport const updateFavSubLoadSelector = state =>\n  state.subscribtions.loading.updateFavSub;\n","/* eslint-disable */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport JellyButton from '../Buttons/JellyButton';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { addSubLoadSelector } from '../../redux/selectors/subscribtionSelectors';\n\nexport const toastError = () =>\n  toast.error('🤪 Sub already exists', {\n    position: 'top-center',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n  });\n\nexport const toastSuccess = length =>\n  toast.success(`🤟 Sub added! Total ammout:  ${length}`, {\n    position: 'top-right',\n    autoClose: 4000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n  });\n\nclass SteamForm extends Component {\n  static propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n    handleFilterSubs: PropTypes.func.isRequired,\n    query: PropTypes.string.isRequired,\n    showFavorites: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    userID: '',\n  };\n\n  warn = () =>\n    toast.warn('😤😤😤 Fill the field!!!', {\n      position: 'top-left',\n      autoClose: 2000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n    });\n\n  handleInputChange = ({ target: { name, value } }) =>\n    this.setState({ [name]: value });\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n    const { name, userID } = this.state;\n    if (name === '') return this.warn();\n    if (userID.includes('/')) return this.warn();\n    this.props.handleSubmit(this.state);\n    return this.setState({ name: '', userID: '' });\n  };\n\n  render() {\n    const { name, userID } = this.state;\n    const {\n      handleFilterSubs,\n      query,\n      showFavorites,\n      onChangeText,\n      loading,\n    } = this.props;\n    return (\n      <form onSubmit={this.handleFormSubmit} className=\"sub-form\">\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={name}\n          name=\"name\"\n          onChange={this.handleInputChange}\n          className=\"sub-form__input\"\n          placeholder=\"Add sub here\"\n        />\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={userID}\n          name=\"userID\"\n          onChange={this.handleInputChange}\n          className=\"sub-form__input\"\n          placeholder=\"User id (optional)\"\n        />\n        <JellyButton text=\"Add new sub\" loading={loading} type=\"submit\" />\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={query}\n          autoFocus\n          placeholder={'filter sub here'}\n          name=\"query\"\n          onChange={handleFilterSubs}\n          className=\"sub-form__input\"\n        />\n        <JellyButton\n          text={onChangeText}\n          type=\"button\"\n          onClick={() => showFavorites()}\n        />\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={4000}\n          hideProgressBar={false}\n          newestOnTop\n          closeOnClick\n          rtl={false}\n          pauseOnVisibilityChange\n          draggable\n          pauseOnHover\n        />\n      </form>\n    );\n  }\n}\nSteamForm.propTypes = {\n  loading: PropTypes.bool.isRequired,\n};\n\nconst mSTP = state => ({\n  loading: addSubLoadSelector(state),\n});\n\nexport default connect(mSTP)(SteamForm);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { ClipLoader } from 'react-spinners';\n\nmoment.defaultFormat = 'DD.MM.YYYY HH:mm';\n\n/* eslint-disable */\nconst SteamItem = ({ _id: id, name, date, favorite, handleFavChange }) => {\n  const [loading, setLoading] = useState(false);\n\n  const handleLoading = async () => {\n    setLoading(true);\n    await handleFavChange(id, favorite);\n    setTimeout(async () => {\n      setLoading(false);\n    }, 1000);\n  };\n  const timeAgo = moment(date, moment.defaultFormat).fromNow();\n  return (\n    <>\n      <div>\n        <h2>{name}</h2>\n        <p className=\"item-date\">Added: {`${timeAgo}, ${date}`}</p>\n      </div>\n      <button\n        className=\"image-wrapper\"\n        type=\"button\"\n        onClick={() => {\n          handleLoading();\n        }}\n      >\n        {loading ? (\n          <ClipLoader color=\"#fff\" loading={loading} />\n        ) : (\n          <img\n            className=\"item-image\"\n            src={\n              favorite\n                ? 'https://image.flaticon.com/icons/svg/148/148838.svg'\n                : 'https://image.flaticon.com/icons/svg/149/149219.svg'\n            }\n            alt=\"fav\"\n          />\n        )}\n      </button>\n    </>\n  );\n};\n\nSteamItem.defaultProps = {\n  favorite: false,\n};\n\nSteamItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  favorite: PropTypes.bool,\n  handleFavChange: PropTypes.func.isRequired,\n};\n\nexport default SteamItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport SteamItem from './SteamItem';\n/* eslint-disable */\n\nconst SteamList = ({ subscribers, handleFavChange }) => (\n  <ul className=\"subs-list container\">\n    <TransitionGroup className=\"subs-list container\">\n      {subscribers.map(sub => (\n        <CSSTransition key={sub._id} timeout={500} classNames=\"bounce\">\n          <li className=\"subs-list__item\">\n            <SteamItem {...sub} handleFavChange={handleFavChange} />\n          </li>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  </ul>\n);\n\nSteamList.propTypes = {\n  subscribers: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  handleFavChange: PropTypes.func.isRequired,\n};\n\nexport default SteamList;\n","import axios from 'axios';\n\nconst URL = process.env.REACT_APP_URL;\n\nexport const getSubsApi = id =>\n  axios.get(`${URL}/subscribers/${id}`).then(response => response.data.subs);\n\nexport const postSubApi = sub =>\n  axios\n    .post(`${URL}/subscribers`, sub)\n    .then(response => response.data.addedSub);\n\nexport const updateFavApi = (id, sub) =>\n  axios\n    .patch(`${URL}/subscribers/updateSub/${id}`, sub)\n    .then(response => response.data.updatedSub);\n","export const START_PAGE = 1;\nexport const PER_PAGE_SUCBSCRIPTIONS_LIST = 20;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport { START_PAGE } from '../../helpers/constants';\n\nconst Pagination = ({ maxPage, handleChangePage, currentPage }) => (\n  <div className=\"pagination-wrapper\">\n    <IconButton\n      className=\"pagination-button\"\n      color=\"primary\"\n      name=\"prev\"\n      disabled={currentPage === START_PAGE}\n      onClick={() => handleChangePage('prev')}\n    >\n      <ArrowBackIosIcon\n        className=\"pagination-button\"\n        disabled={currentPage === START_PAGE}\n      />\n    </IconButton>\n    <h1>\n      Page {currentPage} of {maxPage()}\n    </h1>\n    <IconButton\n      className=\"pagination-button\"\n      name=\"next\"\n      disabled={currentPage === maxPage()}\n      onClick={() => handleChangePage('next')}\n    >\n      <ArrowForwardIosIcon\n        className=\"pagination-button\"\n        disabled={currentPage === START_PAGE}\n      />\n    </IconButton>\n  </div>\n);\n\nPagination.propTypes = {\n  maxPage: PropTypes.func.isRequired,\n  handleChangePage: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired,\n};\n\nexport default Pagination;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport SteamForm, {\n  toastError,\n  toastSuccess,\n} from '../Components/SteamList/SteamForm';\nimport SteamList from '../Components/SteamList/SteamList';\nimport {\n  getSubs,\n  addSub,\n  updateFavSub,\n} from '../redux/operations/subscribtionsOperations';\nimport { authSelector, idSelector } from '../redux/selectors/authSelectors';\nimport {\n  subsSelector,\n  subsLoadSelector,\n  addSubLoadSelector,\n  updateFavSubLoadSelector,\n} from '../redux/selectors/subscribtionSelectors';\nimport { START_PAGE, PER_PAGE_SUCBSCRIPTIONS_LIST } from '../helpers/constants';\nimport Pagination from '../Components/SteamList/Pagination';\n\nconst filterSubs = (arr, query = '') =>\n  arr.filter(\n    el =>\n      el.name.toLowerCase().includes(query.toLowerCase()) ||\n      el.userID === query,\n  );\n\nclass Subscribers extends Component {\n  state = {\n    query: '',\n    showFavorites: false,\n    onChangeText: 'Show favourites',\n    perPage: PER_PAGE_SUCBSCRIPTIONS_LIST,\n    currentPage: START_PAGE,\n  };\n\n  componentDidMount() {\n    const { isAuth, getSubs, ownerId } = this.props;\n    if (!isAuth) return;\n    getSubs(ownerId);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { isAuth, getSubs, ownerId } = this.props;\n    const { query } = this.state;\n\n    if (prevProps.isAuth !== isAuth && isAuth) {\n      getSubs(ownerId);\n    }\n\n    if (prevState.query !== query) {\n      this.handleChangePageOnFilter();\n    }\n  }\n\n  handleChangePageOnFilter = () => {\n    const { currentPage } = this.state;\n    if (currentPage > this.maxPage()) {\n      this.setState({ currentPage: this.maxPage() });\n    }\n    if (currentPage < 1) {\n      this.setState({ currentPage: 1 });\n    }\n  };\n\n  maxPage = () => {\n    return Math.ceil(\n      this.renderSubsList().length / PER_PAGE_SUCBSCRIPTIONS_LIST,\n    );\n  };\n\n  handleSubmit = sub => {\n    const { isAuth, addSub, subs, ownerId } = this.props;\n    if (!isAuth) return;\n    const subAlreadyExists = subs.find(\n      el =>\n        el.name.toLowerCase().trim() === sub.name.toLocaleLowerCase().trim() ||\n        el.userID === sub.userID.trim(),\n    );\n\n    if (subAlreadyExists) {\n      toastError();\n    } else {\n      const subToAdd = {\n        favorite: false,\n        date: `${new Date().toLocaleDateString()} ${new Date().toLocaleTimeString()}`,\n        ...sub,\n        ownerId,\n      };\n\n      addSub(subToAdd).then(res => {\n        if (!res) return;\n\n        toastSuccess(subs.length + 1);\n      });\n    }\n  };\n\n  handleFilterSubs = e => this.setState({ query: e.target.value });\n\n  filterFavorites = () => this.props.subs.filter(el => el.favorite);\n\n  showFavorites = () =>\n    this.setState(state => ({\n      showFavorites: !state.showFavorites,\n      onChangeText: state.showFavorites ? 'Show favourites' : 'Show all',\n    }));\n\n  handleFavoriteChange = (id, favorite) => {\n    const { updateFavSub } = this.props;\n    updateFavSub(id, { favorite: !favorite });\n  };\n\n  filteredSubs = (subs, query) => filterSubs(subs, query);\n\n  showTotalAmmountOfSubs = () => {\n    const { subs } = this.props;\n    const { showFavorites, query } = this.state;\n\n    return showFavorites\n      ? this.filteredSubs(this.filterFavorites(), query).length\n      : this.filteredSubs(subs, query).length;\n  };\n\n  renderSubsList = () => {\n    const { subs } = this.props;\n    const { showFavorites, query } = this.state;\n\n    return showFavorites\n      ? this.filteredSubs(this.filterFavorites(), query)\n      : this.filteredSubs(subs, query);\n  };\n\n  handleChangePage = name => {\n    this.setState(state => ({\n      currentPage:\n        name === 'next' ? state.currentPage + 1 : state.currentPage - 1,\n    }));\n  };\n\n  renderPaginationList = () => {\n    const { currentPage, perPage } = this.state;\n    const list = [...this.renderSubsList().reverse()];\n\n    const indexOfLastSub = currentPage * perPage;\n    const indexOfFirstSub = indexOfLastSub - perPage;\n    return list.slice(indexOfFirstSub, indexOfLastSub);\n  };\n\n  render() {\n    const { query, onChangeText, currentPage } = this.state;\n    const { subsLoad } = this.props;\n\n    return (\n      <div>\n        {subsLoad && <div className=\"rainbow-marker-loader\" />}\n\n        <SteamForm\n          handleSubmit={this.handleSubmit}\n          query={query}\n          handleFilterSubs={this.handleFilterSubs}\n          showFavorites={this.showFavorites}\n          onChangeText={onChangeText}\n        />\n\n        <div className=\"subs-length-wrap\">\n          <p className=\"subs-length-text\">\n            Total length: {this.showTotalAmmountOfSubs()}\n          </p>\n        </div>\n        <SteamList\n          subscribers={this.renderPaginationList()}\n          handleFavChange={this.handleFavoriteChange}\n        />\n\n        {this.renderSubsList().length > 20 && (\n          <Pagination\n            currentPage={currentPage}\n            maxPage={this.maxPage}\n            handleChangePage={this.handleChangePage}\n          />\n        )}\n\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n\nSubscribers.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  getSubs: PropTypes.func.isRequired,\n  addSub: PropTypes.func.isRequired,\n  subs: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  updateFavSub: PropTypes.func.isRequired,\n  subsLoad: PropTypes.bool.isRequired,\n  ownerId: PropTypes.string.isRequired,\n};\n\nconst mapSTP = state => ({\n  isAuth: authSelector(state),\n  subs: subsSelector(state),\n  subsLoad: subsLoadSelector(state),\n  addSubLoad: addSubLoadSelector(state),\n  updFavSubLoad: updateFavSubLoadSelector(state),\n  ownerId: idSelector(state),\n});\n\nconst mDTP = {\n  getSubs,\n  addSub,\n  updateFavSub,\n};\n\nexport default connect(\n  mapSTP,\n  mDTP,\n)(Subscribers);\n","import setAuthToken from '../../helpers/setAuthToken';\nimport {\n  subsRequestStart,\n  subsRequestSuccess,\n  subsRequestError,\n  addSubRequest,\n  addSubSuccess,\n  addSubError,\n  updateFavSubStart,\n  updateFavSubSuccess,\n  updateFavSubError,\n} from '../actions/subscribtionActions';\nimport { getSubsApi, postSubApi, updateFavApi } from '../../services/subsApi';\nimport { tokenSelector } from '../selectors/authSelectors';\n\n/* eslint-disable */\nexport const getSubs = id => async (dispatch, getState) => {\n  const token = tokenSelector(getState());\n  if (!token) return;\n  setAuthToken(token);\n  dispatch(subsRequestStart());\n  try {\n    const subs = await getSubsApi(id);\n    dispatch(subsRequestSuccess(subs));\n  } catch (err) {\n    console.error(`error while getting subs: ${err}`);\n    dispatch(subsRequestError(err));\n  }\n};\n\nexport const addSub = sub => async (dispatch, getState) => {\n  const token = tokenSelector(getState());\n  if (!token) return;\n  setAuthToken(token);\n  dispatch(addSubRequest());\n  try {\n    const newSub = await postSubApi(sub);\n    return dispatch(addSubSuccess(newSub));\n  } catch (err) {\n    console.error(`error while adding sub: ${err}`);\n    dispatch(addSubError(err));\n  }\n};\n\nexport const updateFavSub = (id, favorite) => async (dispatch, getState) => {\n  const token = tokenSelector(getState());\n  if (!token) return;\n  setAuthToken(token);\n  dispatch(updateFavSubStart());\n  try {\n    const sub = await updateFavApi(id, favorite);\n    return dispatch(updateFavSubSuccess(sub));\n  } catch (err) {\n    dispatch(updateFavSubError(err));\n    console.error(`error while updating favorite sub: ${err}`);\n  }\n};\n"],"sourceRoot":""}