{"version":3,"sources":["redux/selectors/subscribtionSelectors.js","Components/SteamList/SteamForm.js","services/subsApi.js","Components/SteamList/SteamItem.js","redux/operations/subscribtionsOperations.js","Components/SteamList/SteamList.js","helpers/constants.js","Components/SteamList/SubsInfo.js","Pages/Subscribers.js"],"names":["subsSelector","state","subscribtions","subs","subsLoadSelector","loading","getSubs","addSubLoadSelector","addSub","isSameDaySelector","date","sameDayAdded","isSameWeekSelector","sameWeekAdded","isSameMonthSelector","sameMonthAdded","toastError","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","toastSuccess","length","success","concat","SteamForm","name","userID","focused","progress","warn","text","handleInputChange","_ref","_ref$target","target","value","_this","setState","Object","defineProperty","handleFormSubmit","e","preventDefault","_this$state","trimmedName","trim","trimmedUserId","includes","props","handleSubmit","_this2","this","_this$state2","_this$props","handleFilterSubs","query","showFavorites","onChangeText","react_default","a","createElement","onSubmit","className","type","autoComplete","onChange","placeholder","onFocus","clearTimeout","filterClearTimeout","onBlur","setInterval","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","onReset","abrupt","stop","autoFocus","Box","width","mb","LinearProgress","variant","onClick","react_toastify","newestOnTop","rtl","pauseOnVisibilityChange","Component","connect","URL","process","getSubsApi","id","axios","get","then","response","data","postSubApi","sub","post","newSub","updateSubApi","_id","objectWithoutProperties","patch","updatedSub","CustomTextField","withStyles","root","& input.MuiInput-input","color","& label.Mui-focused","& .MuiInput-underline:after","borderBottomColor","TextField","SteamItem","visitedAt","favorite","updateSub","_useState","useState","_useState2","slicedToArray","setLoading","_useState3","_useState4","changeName","setChangeName","_useState5","_useState6","newName","setNewName","_useState7","_useState8","loadingVisitedAt","setLoadingVisitedAt","_useState9","_useState10","loadingChangeName","setLoadingChangeName","handleUpdateFavSub","_ref2","setTimeout","apply","arguments","handleUpdateVisitedAt","_ref3","_callee2","_context2","Date","toLocaleDateString","toLocaleTimeString","handleUpdateName","_ref4","_callee3","_context3","tooltip","title","display","alignItems","justifyContent","Fragment","_ref5","IconButton","disabled","Check_default","style","fontSize","Close_default","Typography","Create_default","timeAgo","split","Refresh_default","react_spinners","src","alt","defaultProps","mDTP","dispatch","getState","token","tokenSelector","setAuthToken","subsActions","sent","t0","console","_x5","_x6","LoaderWrapper","styled","div","_templateObject","StyledTable","table","_templateObject2","TableContent","_templateObject3","addSubLoading","subscribers","useEffect","log","CircularProgress","map","SteamList_SteamItem","assign","key","START_PAGE","PER_PAGE_SUCBSCRIPTIONS_LIST","SubsInfo","showTotalAmmountOfSubs","Content","SubsInfo_templateObject","lastYearAdded","selectors","filterSubs","arr","undefined","filter","el","toLowerCase","Subscribers","perPage","currentPage","preventSave","resetFilter","handleChangePageOnFilter","maxPage","Math","ceil","renderSubsList","isAuth","find","sendUserData","_this$props2","ownerId","objectSpread","res","filterFavorites","filteredSubs","handleChangePage","renderPaginationList","_this$state3","indexOfLastSub","indexOfFirstSub","toConsumableArray","reverse","slice","prevProps","prevState","_this$props3","_this$state4","subsLoad","Subscribers_Content","Form","SteamList_SteamForm","SteamList_SubsInfo","List","Components_SteamList_SteamList","PaginationBlock","pagination","showQuickJumper","defaultCurrent","Number","defaultPageSize","total","modal","bodyStyle","padding","visible","Boolean","onOk","onCancel","Subscribers_templateObject","Subscribers_templateObject2","Subscribers_templateObject3","_templateObject4","_x","_x2","_x3","_x4","authSelector","addSubLoad","idSelector"],"mappings":"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","file":"static/js/10.880577fa.chunk.js","sourcesContent":["export const subsSelector = state => state.subscribtions.subs;\nexport const subsLoadSelector = state => state.subscribtions.loading.getSubs;\nexport const addSubLoadSelector = state => state.subscribtions.loading.addSub;\nexport const updateFavSubLoadSelector = state =>\n  state.subscribtions.loading.updateFavSub;\n\nexport const isSameDaySelector = state => state.subscribtions.date.sameDayAdded;\nexport const isSameWeekSelector = state =>\n  state.subscribtions.date.sameWeekAdded;\nexport const isSameMonthSelector = state =>\n  state.subscribtions.date.sameMonthAdded;\nexport const lastYearSelector = state => state.subscribtions.date.lastYearAdded;\n","/* eslint-disable */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Box, LinearProgress } from '@material-ui/core';\n\nimport { addSubLoadSelector } from '../../redux/selectors/subscribtionSelectors';\n\nexport const toastError = () =>\n  toast.error('🤪 Sub already exists', {\n    position: 'top-center',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n  });\n\nexport const toastSuccess = length =>\n  toast.success(`🤟 Sub added! Total ammout:  ${length}`, {\n    position: 'top-right',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n  });\n\nclass SteamForm extends Component {\n  filterClearTimeout;\n\n  static propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n    handleFilterSubs: PropTypes.func.isRequired,\n    query: PropTypes.string.isRequired,\n    showFavorites: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    userID: '',\n    focused: false,\n    progress: 10,\n  };\n\n  warn = text =>\n    toast.warn(`😤😤😤 ${text ? text : 'Fill the field!!!'} `, {\n      position: 'top-left',\n      autoClose: 2000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n    });\n\n  handleInputChange = ({ target: { name, value } }) =>\n    this.setState({ [name]: value });\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n    const { name, userID } = this.state;\n    const trimmedName = name.trim();\n    const trimmedUserId = userID.trim();\n\n    if (trimmedName === '' || trimmedUserId === '') {\n      this.warn();\n      return;\n    }\n\n    if (userID.includes('/')) return this.warn('Forgot to remove \"/\" ');\n    this.props.handleSubmit({ name: trimmedName, userID: trimmedUserId });\n    return this.setState({ name: '', userID: '' });\n  };\n\n  render() {\n    const { name, userID } = this.state;\n    const {\n      handleFilterSubs,\n      query,\n      showFavorites,\n      onChangeText,\n      loading,\n    } = this.props;\n    return (\n      <form onSubmit={this.handleFormSubmit} className=\"sub-form\">\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={name}\n          name=\"name\"\n          onChange={this.handleInputChange}\n          className=\"sub-form__input\"\n          placeholder=\"Add sub here\"\n        />\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={userID}\n          name=\"userID\"\n          onChange={this.handleInputChange}\n          className=\"sub-form__input\"\n          placeholder=\"User id\"\n        />\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={query}\n          onFocus={() => {\n            this.setState({ progress: 10 });\n            clearTimeout(this.filterClearTimeout);\n          }}\n          onBlur={() => {\n            this.filterClearTimeout = setInterval(async () => {\n              if (!this.state.progress) {\n                this.props.onReset();\n                this.setState({ progress: 10 });\n                clearTimeout(this.filterClearTimeout);\n                return;\n              }\n\n              await this.setState(state => ({ progress: state.progress - 1 }));\n            }, 1000);\n          }}\n          autoFocus\n          placeholder={'filter sub here'}\n          name=\"query\"\n          onChange={handleFilterSubs}\n          className=\"sub-form__input sub-form__filter-input\"\n        />\n        <Box width=\"100%\" mb=\"10px\">\n          <LinearProgress\n            variant=\"determinate\"\n            value={this.state.progress * 10}\n          />\n        </Box>\n        <div className=\"multi-button\">\n          <button type=\"submit\">{loading ? 'Loading...' : 'Add'}</button>\n          <button\n            text={onChangeText}\n            type=\"button\"\n            onClick={() => showFavorites()}\n          >\n            {onChangeText}\n          </button>\n        </div>\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={4000}\n          hideProgressBar={false}\n          newestOnTop\n          closeOnClick\n          rtl={false}\n          pauseOnVisibilityChange\n          draggable\n          pauseOnHover\n        />\n      </form>\n    );\n  }\n}\n\nSteamForm.propTypes = {\n  loading: PropTypes.bool.isRequired,\n};\n\nconst mSTP = state => ({\n  loading: addSubLoadSelector(state),\n});\n\nexport default connect(mSTP)(SteamForm);\n","import axios from 'axios';\n\nconst URL = process.env.REACT_APP_URL;\n// const URL = 'http://localhost:5678';\n\nexport const getSubsApi = id =>\n  axios.get(`${URL}/subscribers/${id}`).then(response => response.data.subs);\n\nexport const postSubApi = sub =>\n  axios.post(`${URL}/subscribers`, sub).then(response => response.data.newSub);\n\nexport const updateSubApi = ({ _id, ...sub }) =>\n  axios\n    .patch(`${URL}/subscribers/updateSub/${_id}`, sub)\n    .then(response => response.data.updatedSub);\n","import React, { useState } from 'react';\nimport { Box, IconButton, TextField, Typography } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport CreateIcon from '@material-ui/icons/Create';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { ClipLoader } from 'react-spinners';\nimport { Tooltip } from 'antd';\n\nimport { updateSub } from '../../redux/operations/subscribtionsOperations';\nimport { timeAgo } from '../../helpers/dateDiff';\n\nconst CustomTextField = withStyles({\n  root: {\n    '& input.MuiInput-input': {\n      color: 'white',\n    },\n    '& label.Mui-focused': {\n      color: 'white',\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'white',\n    },\n  },\n})(TextField);\n\nconst SteamItem = ({\n  _id,\n  name,\n  date,\n  visitedAt,\n  favorite,\n  updateSub,\n  userID,\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [changeName, setChangeName] = useState(false);\n  const [newName, setNewName] = useState('');\n  const [loadingVisitedAt, setLoadingVisitedAt] = useState(false);\n  const [loadingChangeName, setLoadingChangeName] = useState(false);\n\n  const handleUpdateFavSub = async () => {\n    setLoading(true);\n\n    await updateSub({ _id, favorite: !favorite });\n\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  };\n\n  const handleUpdateVisitedAt = async () => {\n    setLoadingVisitedAt(true);\n\n    await updateSub({\n      _id,\n      visitedAt: `${new Date().toLocaleDateString()} ${new Date().toLocaleTimeString()}`,\n    });\n\n    setLoadingVisitedAt(false);\n  };\n\n  const handleUpdateName = async () => {\n    if (!newName.trim().length) return;\n    setLoadingChangeName(true);\n\n    await updateSub({\n      _id,\n      name: newName.trim(),\n    });\n\n    setLoadingChangeName(false);\n    setChangeName(false);\n  };\n\n  return (\n    <tr className={`subs-row ${!userID ? 'no-id-row' : null}`}>\n      <Tooltip title={userID} color=\"#fff\">\n        <td className=\"subs-row__item item_name\">\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            {changeName ? (\n              <>\n                <CustomTextField\n                  onChange={({ target: { value } }) => setNewName(value)}\n                />\n                <IconButton\n                  disabled={loadingChangeName}\n                  onClick={handleUpdateName}\n                >\n                  <CheckIcon style={{ color: 'white', fontSize: '16px' }} />\n                </IconButton>\n                <IconButton\n                  onClick={() => {\n                    setNewName('');\n                    setChangeName(false);\n                  }}\n                >\n                  <CloseIcon style={{ color: 'white', fontSize: '16px' }} />\n                </IconButton>\n              </>\n            ) : (\n              <>\n                <Typography>{name}</Typography>\n                <IconButton onClick={() => setChangeName(true)}>\n                  <CreateIcon style={{ color: 'white', fontSize: '16px' }} />\n                </IconButton>\n              </>\n            )}\n          </Box>\n        </td>\n      </Tooltip>\n      <td className=\"subs-row__item item_date_visited\">\n        {visitedAt ? (\n          <>\n            {`${timeAgo(visitedAt)}, ${visitedAt.split(' ')[0]}`}\n            <IconButton\n              disabled={loadingVisitedAt}\n              onClick={handleUpdateVisitedAt}\n            >\n              <RefreshIcon style={{ color: 'white' }} />\n            </IconButton>\n          </>\n        ) : (\n          <>\n            - ,\n            <IconButton\n              disabled={loadingVisitedAt}\n              onClick={handleUpdateVisitedAt}\n            >\n              <RefreshIcon style={{ color: 'white' }} />\n            </IconButton>\n          </>\n        )}\n      </td>\n      <td className=\"subs-row__item item_date_added\">\n        {`${timeAgo(date)}, ${date}`}\n      </td>\n      <td className=\"subs-row__item item_favorite\">\n        <button\n          type=\"button\"\n          className=\"image-wrapper\"\n          onClick={() => handleUpdateFavSub()}\n        >\n          {loading ? (\n            <ClipLoader color=\"#fff\" loading={loading} />\n          ) : (\n            <img\n              className=\"item-image\"\n              src={\n                favorite\n                  ? 'https://image.flaticon.com/icons/svg/148/148838.svg'\n                  : 'https://image.flaticon.com/icons/svg/149/149219.svg'\n              }\n              alt=\"fav\"\n            />\n          )}\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nSteamItem.defaultProps = {\n  favorite: false,\n};\n\nSteamItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  _id: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  favorite: PropTypes.bool,\n  updateSub: PropTypes.func.isRequired,\n};\n\nconst mDTP = {\n  updateSub,\n};\n\nexport default connect(\n  null,\n  mDTP,\n)(SteamItem);\n","import setAuthToken from '../../helpers/setAuthToken';\nimport * as subsActions from '../actions/subscribtionActions';\nimport { getSubsApi, postSubApi, updateSubApi } from '../../services/subsApi';\nimport { tokenSelector } from '../selectors/authSelectors';\n\n/* eslint-disable */\nexport const getSubs = id => async (dispatch, getState) => {\n  const token = tokenSelector(getState());\n  if (!token) return;\n  setAuthToken(token);\n  dispatch(subsActions.subsRequestStart());\n  try {\n    const subs = await getSubsApi(id);\n    dispatch(subsActions.subsRequestSuccess(subs));\n  } catch (err) {\n    console.error(`error while getting subs: ${err}`);\n    dispatch(subsActions.subsRequestError(err));\n  }\n};\n\nexport const addSub = sub => async (dispatch, getState) => {\n  const token = tokenSelector(getState());\n  if (!token) return;\n  setAuthToken(token);\n  dispatch(subsActions.addSubRequest());\n\n  try {\n    const newSub = await postSubApi(sub);\n    return dispatch(subsActions.addSubSuccess(newSub));\n  } catch (err) {\n    console.error(`error while adding sub: ${err}`);\n    dispatch(subsActions.addSubError(err));\n  }\n};\n\nexport const updateSub = sub => async (dispatch, getState) => {\n  const token = tokenSelector(getState());\n  if (!token) return;\n  setAuthToken(token);\n  dispatch(subsActions.updateSubStart());\n  try {\n    const updatedSub = await updateSubApi(sub);\n    return await dispatch(subsActions.updateSubSuccess(updatedSub));\n  } catch (err) {\n    dispatch(subsActions.updateSubError(err));\n    console.error(`error while updating sub: ${err}`);\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PropTypes from 'prop-types';\nimport SteamItem from './SteamItem';\nimport { addSubLoadSelector } from '../../redux/selectors/subscribtionSelectors';\n\nconst SteamList = ({ subscribers, addSubLoading }) => {\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (addSubLoading) {\n      return setLoading(true);\n    }\n\n    return setLoading(false);\n  }, [addSubLoading]);\n  console.log('subscribers', subscribers);\n  return (\n    subscribers.length > 0 && (\n      <div>\n        {loading && (\n          <LoaderWrapper>\n            <CircularProgress />\n          </LoaderWrapper>\n        )}\n        <StyledTable>\n          <tbody>\n            <tr className=\"subs-head\">\n              <th className=\"subs-head__item item_name\">Name</th>\n              <th className=\"subs-head__item item_date_visited\">\n                Last Visited\n              </th>\n              <th className=\"subs-head__item item_date_added\">Date Added</th>\n              <th className=\"subs-head__item item_favorite\">Favorite</th>\n            </tr>\n          </tbody>\n        </StyledTable>\n        <TableContent>\n          <StyledTable>\n            <tbody className=\"subs-body\">\n              {subscribers.map(sub => (\n                <SteamItem key={sub._id} {...sub} />\n              ))}\n            </tbody>\n          </StyledTable>\n        </TableContent>\n      </div>\n    )\n  );\n};\n\nconst LoaderWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst StyledTable = styled.table`\n  width: 100%;\n  font-size: 20px;\n  padding: 2rem;\n  color: #fff;\n  margin: 10px auto;\n`;\n\nconst TableContent = styled.div`\n  width: 100%;\n  height: calc(100vh - 200px);\n  overflow-y: auto;\n  overflow-x: hidden;\n  margin-bottom: 10px;\n\n  /* width */\n  ::-webkit-scrollbar {\n    width: 2px;\n  }\n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    background: transparent;\n  }\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: #888;\n  }\n\n  /* Handle on hover */\n  ::-webkit-scrollbar-thumb:hover {\n    background: #555;\n  }\n`;\n\nSteamList.propTypes = {\n  subscribers: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  addSubLoading: PropTypes.bool.isRequired,\n};\n\nconst mSTP = state => ({\n  addSubLoading: addSubLoadSelector(state),\n});\n\nexport default connect(mSTP)(SteamList);\n","export const START_PAGE = 1;\nexport const PER_PAGE_SUCBSCRIPTIONS_LIST = 20;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport * as selectors from '../../redux/selectors/subscribtionSelectors';\n\nfunction SubsInfo({\n  showTotalAmmountOfSubs,\n  sameDayAdded,\n  sameWeekAdded,\n  sameMonthAdded,\n}) {\n  return (\n    <div className=\"subs-length-wrap\">\n      <Content>\n        <p className=\"subs-length-text\">Today added:</p>\n        <span className=\"subs-length-text__num\">{sameDayAdded}</span>\n      </Content>\n      <Content>\n        <p className=\"subs-length-text\">Added this week:</p>\n        <span className=\"subs-length-text__num\">{sameWeekAdded}</span>\n      </Content>\n      <Content>\n        <p className=\"subs-length-text\">Added this month:</p>\n        <span className=\"subs-length-text__num\">{sameMonthAdded}</span>\n      </Content>\n      <Content>\n        <p className=\"subs-length-text\">Total:</p>\n        <span className=\"subs-length-text__num\">{showTotalAmmountOfSubs}</span>\n      </Content>\n    </div>\n  );\n}\n\nconst Content = styled.div`\n  display: flex;\n  padding: 14px;\n  border-radius: 10px;\n  transition: all 0.4s;\n  align-items: center;\n  margin-bottom: 10px;\n  font-size: 24px;\n  justify-content: space-between;\n  width: 100%;\n  color: rgba(156, 146, 146, 0.616);\n  &:hover {\n    color: white;\n    transform: translateX(-10px) scale(1.1) rotateX(10deg);\n    box-shadow: 6px 6px 11px -2px rgba(107, 107, 107, 1);\n  }\n`;\n\nSubsInfo.defaultProps = {\n  lastYearAdded: 0,\n};\n\nSubsInfo.propTypes = {\n  showTotalAmmountOfSubs: PropTypes.number.isRequired,\n  sameDayAdded: PropTypes.number.isRequired,\n  sameWeekAdded: PropTypes.number.isRequired,\n  sameMonthAdded: PropTypes.number.isRequired,\n};\n\nconst mSTP = state => ({\n  sameDayAdded: selectors.isSameDaySelector(state),\n  sameWeekAdded: selectors.isSameWeekSelector(state),\n  sameMonthAdded: selectors.isSameMonthSelector(state),\n});\n\nexport default connect(mSTP)(SubsInfo);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport styled from 'styled-components';\nimport { Modal, Pagination } from 'antd';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport SteamForm, {\n  toastError,\n  toastSuccess,\n} from '../Components/SteamList/SteamForm';\nimport SteamList from '../Components/SteamList/SteamList';\nimport { getSubs, addSub } from '../redux/operations/subscribtionsOperations';\nimport { authSelector, idSelector } from '../redux/selectors/authSelectors';\nimport {\n  subsSelector,\n  subsLoadSelector,\n  addSubLoadSelector,\n} from '../redux/selectors/subscribtionSelectors';\nimport { START_PAGE, PER_PAGE_SUCBSCRIPTIONS_LIST } from '../helpers/constants';\nimport SubsInfo from '../Components/SteamList/SubsInfo';\n\nconst filterSubs = (arr, query = '') =>\n  arr.filter(\n    el =>\n      el.name.toLowerCase().includes(query.toLowerCase()) ||\n      el.userID === query,\n  );\n\nclass Subscribers extends Component {\n  state = {\n    query: '',\n    showFavorites: false,\n    onChangeText: 'Show favourites',\n    perPage: PER_PAGE_SUCBSCRIPTIONS_LIST,\n    currentPage: START_PAGE,\n    preventSave: null,\n  };\n  /* eslint-disable */\n\n  componentDidUpdate(prevProps, prevState) {\n    const { query } = this.state;\n    const { ownerId, getSubs } = this.props;\n\n    if (prevProps.ownerId !== ownerId) {\n      getSubs(ownerId);\n    }\n\n    if (prevState.query !== query) {\n      this.handleChangePageOnFilter();\n    }\n  }\n\n  resetFilter = () => this.setState({ query: '' });\n\n  handleChangePageOnFilter = () => {\n    const { currentPage } = this.state;\n    if (currentPage > this.maxPage()) {\n      this.setState({ currentPage: this.maxPage() });\n    }\n    if (currentPage < 1) {\n      this.setState({ currentPage: 1 });\n    }\n  };\n\n  maxPage = () => {\n    return Math.ceil(\n      this.renderSubsList().length / PER_PAGE_SUCBSCRIPTIONS_LIST,\n    );\n  };\n\n  handleSubmit = sub => {\n    const { isAuth, subs } = this.props;\n    if (!isAuth) return;\n    const subAlreadyExists = subs.find(\n      el =>\n        el.name.toLowerCase().trim() === sub.name || el.userID === sub.userID,\n    );\n\n    if (subAlreadyExists) {\n      toastError();\n      this.setState({ preventSave: sub });\n      return;\n    }\n\n    this.sendUserData(sub);\n  };\n\n  sendUserData = sub => {\n    const { addSub, subs, ownerId } = this.props;\n    const date = `${new Date().toLocaleDateString()} ${new Date().toLocaleTimeString()}`;\n\n    const subToAdd = {\n      favorite: false,\n      date,\n      visitedAt: date,\n      ...sub,\n      ownerId,\n    };\n\n    return addSub(subToAdd).then(res => {\n      if (!res) return toastError();\n\n      return toastSuccess(subs.length + 1);\n    });\n  };\n\n  handleFilterSubs = e => this.setState({ query: e.target.value.trim() });\n\n  filterFavorites = () => this.props.subs.filter(el => el.favorite);\n\n  showFavorites = () =>\n    this.setState(state => ({\n      showFavorites: !state.showFavorites,\n      onChangeText: state.showFavorites ? 'Favorites' : 'All',\n    }));\n\n  filteredSubs = (subs, query) => filterSubs(subs, query);\n\n  showTotalAmmountOfSubs = () => {\n    const { subs } = this.props;\n    const { showFavorites, query } = this.state;\n\n    return showFavorites\n      ? this.filteredSubs(this.filterFavorites(), query).length\n      : this.filteredSubs(subs, query).length;\n  };\n\n  renderSubsList = () => {\n    const { subs } = this.props;\n    const { showFavorites, query } = this.state;\n\n    return showFavorites\n      ? this.filteredSubs(this.filterFavorites(), query)\n      : this.filteredSubs(subs, query);\n  };\n\n  handleChangePage = name => {\n    this.setState({\n      currentPage: name,\n    });\n  };\n\n  renderPaginationList = () => {\n    const { currentPage, perPage } = this.state;\n    const list = [...this.renderSubsList().reverse()];\n\n    const indexOfLastSub = currentPage * perPage;\n    const indexOfFirstSub = indexOfLastSub - perPage;\n    return list.slice(indexOfFirstSub, indexOfLastSub);\n  };\n\n  render() {\n    const { query, onChangeText, perPage, currentPage } = this.state;\n    const { subsLoad } = this.props;\n    return (\n      <Content>\n        {subsLoad && <div className=\"rainbow-marker-loader\" />}\n\n        <Form>\n          <SteamForm\n            handleSubmit={this.handleSubmit}\n            query={query}\n            handleFilterSubs={this.handleFilterSubs}\n            showFavorites={this.showFavorites}\n            onChangeText={onChangeText}\n            onReset={this.resetFilter}\n          />\n\n          <SubsInfo showTotalAmmountOfSubs={this.showTotalAmmountOfSubs()} />\n        </Form>\n        <List>\n          <SteamList subscribers={this.renderPaginationList()} />\n\n          {this.renderSubsList().length > 0 && (\n            <PaginationBlock>\n              <Pagination\n                showQuickJumper\n                defaultCurrent={Number(currentPage)}\n                defaultPageSize={Number(perPage)}\n                total={this.renderSubsList().length}\n                onChange={this.handleChangePage}\n              />\n            </PaginationBlock>\n          )}\n          <ToastContainer />\n        </List>\n        <Modal\n          title=\"Save Anyway?\"\n          bodyStyle={{ padding: 0 }}\n          visible={Boolean(this.state.preventSave)}\n          onOk={() =>\n            this.sendUserData(this.state.preventSave).then(() =>\n              this.setState({ preventSave: null }),\n            )\n          }\n          onCancel={() => this.setState({ preventSave: null })}\n        />\n      </Content>\n    );\n  }\n}\n\nconst PaginationBlock = styled.div`\n  text-align: center;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 90%;\n  margin: 0 auto;\n  justify-content: space-between;\n`;\n\nconst Form = styled.div`\n  width: 30%;\n  /* margin: 0 auto; */\n  display: flex;\n  flex-direction: column;\n`;\n\nconst List = styled.div`\n  position: relative;\n  width: 66%;\n`;\n\nSubscribers.defaultProps = {\n  ownerId: null,\n};\n\nSubscribers.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  getSubs: PropTypes.func.isRequired,\n  addSub: PropTypes.func.isRequired,\n  subs: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  subsLoad: PropTypes.bool.isRequired,\n  ownerId: PropTypes.string,\n};\n\nconst mapSTP = state => ({\n  isAuth: authSelector(state),\n  subs: subsSelector(state),\n  subsLoad: subsLoadSelector(state),\n  addSubLoad: addSubLoadSelector(state),\n  ownerId: idSelector(state),\n});\n\nconst mDTP = {\n  getSubs,\n  addSub,\n};\n\nexport default connect(\n  mapSTP,\n  mDTP,\n)(Subscribers);\n"],"sourceRoot":""}