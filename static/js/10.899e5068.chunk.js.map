{"version":3,"sources":["redux/selectors/subscribtionSelectors.js","Components/SteamList/SteamForm.js","services/subsApi.js","Components/SteamList/SteamItem.js","redux/operations/subscribtionsOperations.js","Components/SteamList/SteamList.js","helpers/constants.js","Components/SteamList/SubsInfo.js","Pages/Subscribers.js"],"names":["subsSelector","state","subscribtions","subs","subsLoadSelector","loading","getSubs","addSubLoadSelector","addSub","isSameDaySelector","date","sameDayAdded","isSameWeekSelector","sameWeekAdded","isSameMonthSelector","sameMonthAdded","toastError","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","toastSuccess","length","success","concat","SteamForm","name","userID","focused","warn","text","handleInputChange","_ref","_ref$target","target","value","_this","setState","Object","defineProperty","handleFormSubmit","e","preventDefault","_this$state","trimmedName","trim","trimmedUserId","includes","props","handleSubmit","_this2","this","_this$state2","_this$props","handleFilterSubs","query","showFavorites","onChangeText","react_default","a","createElement","onSubmit","className","type","autoComplete","onChange","placeholder","onFocus","clearTimeout","filterClearTimeout","onBlur","setTimeout","onReset","autoFocus","onClick","react_toastify","newestOnTop","rtl","pauseOnVisibilityChange","Component","connect","URL","process","getSubsApi","id","axios","get","then","response","data","postSubApi","sub","post","newSub","updateSubApi","_id","objectWithoutProperties","patch","updatedSub","CustomTextField","withStyles","root","& input.MuiInput-input","color","& label.Mui-focused","& .MuiInput-underline:after","borderBottomColor","TextField","SteamItem","visitedAt","favorite","updateSub","_useState","useState","_useState2","slicedToArray","setLoading","_useState3","_useState4","changeName","setChangeName","_useState5","_useState6","newName","setNewName","_useState7","_useState8","loadingVisitedAt","setLoadingVisitedAt","_useState9","_useState10","loadingChangeName","setLoadingChangeName","handleUpdateFavSub","_ref2","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","apply","arguments","handleUpdateVisitedAt","_ref3","_callee2","_context2","Date","toLocaleDateString","toLocaleTimeString","handleUpdateName","_ref4","_callee3","_context3","abrupt","tooltip","title","Box","display","alignItems","justifyContent","Fragment","_ref5","IconButton","disabled","Check_default","style","fontSize","Close_default","Typography","Create_default","timeAgo","Refresh_default","react_spinners","src","alt","defaultProps","mDTP","dispatch","getState","token","tokenSelector","setAuthToken","subsActions","sent","t0","console","_x5","_x6","LoaderWrapper","styled","div","_templateObject","StyledTable","table","_templateObject2","TableContent","_templateObject3","addSubLoading","subscribers","useEffect","log","CircularProgress","map","SteamList_SteamItem","assign","key","START_PAGE","PER_PAGE_SUCBSCRIPTIONS_LIST","SubsInfo","showTotalAmmountOfSubs","Content","SubsInfo_templateObject","lastYearAdded","selectors","filterSubs","arr","undefined","filter","el","toLowerCase","Subscribers","perPage","currentPage","preventSave","resetFilter","handleChangePageOnFilter","maxPage","Math","ceil","renderSubsList","isAuth","find","sendUserData","_this$props2","ownerId","objectSpread","res","filterFavorites","filteredSubs","handleChangePage","renderPaginationList","_this$state3","indexOfLastSub","indexOfFirstSub","toConsumableArray","reverse","slice","prevProps","prevState","_this$props3","_this$state4","subsLoad","Subscribers_Content","Form","SteamList_SteamForm","SteamList_SubsInfo","List","Components_SteamList_SteamList","PaginationBlock","pagination","showQuickJumper","defaultCurrent","Number","defaultPageSize","total","modal","bodyStyle","padding","visible","Boolean","onOk","onCancel","Subscribers_templateObject","Subscribers_templateObject2","Subscribers_templateObject3","_templateObject4","_x","_x2","_x3","_x4","authSelector","addSubLoad","idSelector"],"mappings":"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","file":"static/js/10.899e5068.chunk.js","sourcesContent":["export const subsSelector = state => state.subscribtions.subs;\nexport const subsLoadSelector = state => state.subscribtions.loading.getSubs;\nexport const addSubLoadSelector = state => state.subscribtions.loading.addSub;\nexport const updateFavSubLoadSelector = state =>\n  state.subscribtions.loading.updateFavSub;\n\nexport const isSameDaySelector = state => state.subscribtions.date.sameDayAdded;\nexport const isSameWeekSelector = state =>\n  state.subscribtions.date.sameWeekAdded;\nexport const isSameMonthSelector = state =>\n  state.subscribtions.date.sameMonthAdded;\nexport const lastYearSelector = state => state.subscribtions.date.lastYearAdded;\n","/* eslint-disable */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { addSubLoadSelector } from '../../redux/selectors/subscribtionSelectors';\n\nexport const toastError = () =>\n  toast.error('🤪 Sub already exists', {\n    position: 'top-center',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n  });\n\nexport const toastSuccess = length =>\n  toast.success(`🤟 Sub added! Total ammout:  ${length}`, {\n    position: 'top-right',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n  });\n\nclass SteamForm extends Component {\n  static propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n    handleFilterSubs: PropTypes.func.isRequired,\n    query: PropTypes.string.isRequired,\n    showFavorites: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    userID: '',\n    focused: false,\n  };\n\n  warn = text =>\n    toast.warn(`😤😤😤 ${text ? text : 'Fill the field!!!'} `, {\n      position: 'top-left',\n      autoClose: 2000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n    });\n\n  filterClearTimeout;\n\n  handleInputChange = ({ target: { name, value } }) =>\n    this.setState({ [name]: value });\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n    const { name, userID } = this.state;\n    const trimmedName = name.trim();\n    const trimmedUserId = userID.trim();\n\n    if (trimmedName === '' || trimmedUserId === '') {\n      this.warn();\n      return;\n    }\n\n    if (userID.includes('/')) return this.warn('Forgot to remove \"/\" ');\n    this.props.handleSubmit({ name: trimmedName, userID: trimmedUserId });\n    return this.setState({ name: '', userID: '' });\n  };\n\n  render() {\n    const { name, userID } = this.state;\n    const {\n      handleFilterSubs,\n      query,\n      showFavorites,\n      onChangeText,\n      loading,\n    } = this.props;\n    return (\n      <form onSubmit={this.handleFormSubmit} className=\"sub-form\">\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={name}\n          name=\"name\"\n          onChange={this.handleInputChange}\n          className=\"sub-form__input\"\n          placeholder=\"Add sub here\"\n        />\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={userID}\n          name=\"userID\"\n          onChange={this.handleInputChange}\n          className=\"sub-form__input\"\n          placeholder=\"User id\"\n        />\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={query}\n          onFocus={() => clearTimeout(this.filterClearTimeout)}\n          onBlur={() => {\n            this.filterClearTimeout = setTimeout(() => {\n              this.props.onReset();\n            }, 10000);\n          }}\n          autoFocus\n          placeholder={'filter sub here'}\n          name=\"query\"\n          onChange={handleFilterSubs}\n          className=\"sub-form__input\"\n        />\n        <div className=\"multi-button\">\n          <button type=\"submit\">{loading ? 'Loading...' : 'Add'}</button>\n          <button\n            text={onChangeText}\n            type=\"button\"\n            onClick={() => showFavorites()}\n          >\n            {onChangeText}\n          </button>\n        </div>\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={4000}\n          hideProgressBar={false}\n          newestOnTop\n          closeOnClick\n          rtl={false}\n          pauseOnVisibilityChange\n          draggable\n          pauseOnHover\n        />\n      </form>\n    );\n  }\n}\n\nSteamForm.propTypes = {\n  loading: PropTypes.bool.isRequired,\n};\n\nconst mSTP = state => ({\n  loading: addSubLoadSelector(state),\n});\n\nexport default connect(mSTP)(SteamForm);\n","import axios from 'axios';\n\nconst URL = process.env.REACT_APP_URL;\n// const URL = 'http://localhost:5678';\n\nexport const getSubsApi = id =>\n  axios.get(`${URL}/subscribers/${id}`).then(response => response.data.subs);\n\nexport const postSubApi = sub =>\n  axios.post(`${URL}/subscribers`, sub).then(response => response.data.newSub);\n\nexport const updateSubApi = ({ _id, ...sub }) =>\n  axios\n    .patch(`${URL}/subscribers/updateSub/${_id}`, sub)\n    .then(response => response.data.updatedSub);\n","import React, { useState } from 'react';\nimport { Box, IconButton, TextField, Typography } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport CreateIcon from '@material-ui/icons/Create';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { ClipLoader } from 'react-spinners';\nimport { Tooltip } from 'antd';\n\nimport { updateSub } from '../../redux/operations/subscribtionsOperations';\nimport { timeAgo } from '../../helpers/dateDiff';\n\nconst CustomTextField = withStyles({\n  root: {\n    '& input.MuiInput-input': {\n      color: 'white',\n    },\n    '& label.Mui-focused': {\n      color: 'white',\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'white',\n    },\n  },\n})(TextField);\n\nconst SteamItem = ({\n  _id,\n  name,\n  date,\n  visitedAt,\n  favorite,\n  updateSub,\n  userID,\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [changeName, setChangeName] = useState(false);\n  const [newName, setNewName] = useState('');\n  const [loadingVisitedAt, setLoadingVisitedAt] = useState(false);\n  const [loadingChangeName, setLoadingChangeName] = useState(false);\n\n  const handleUpdateFavSub = async () => {\n    setLoading(true);\n\n    await updateSub({ _id, favorite: !favorite });\n\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  };\n\n  const handleUpdateVisitedAt = async () => {\n    setLoadingVisitedAt(true);\n\n    await updateSub({\n      _id,\n      visitedAt: `${new Date().toLocaleDateString()} ${new Date().toLocaleTimeString()}`,\n    });\n\n    setLoadingVisitedAt(false);\n  };\n\n  const handleUpdateName = async () => {\n    if (!newName.trim().length) return;\n    setLoadingChangeName(true);\n\n    await updateSub({\n      _id,\n      name: newName.trim(),\n    });\n\n    setLoadingChangeName(false);\n    setChangeName(false);\n  };\n\n  return (\n    <tr className=\"subs-row\">\n      <Tooltip title={userID} color=\"#fff\">\n        <td className=\"subs-row__item item_name\">\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            {changeName ? (\n              <>\n                <CustomTextField\n                  onChange={({ target: { value } }) => setNewName(value)}\n                />\n                <IconButton\n                  disabled={loadingChangeName}\n                  onClick={handleUpdateName}\n                >\n                  <CheckIcon style={{ color: 'white', fontSize: '16px' }} />\n                </IconButton>\n                <IconButton\n                  onClick={() => {\n                    setNewName('');\n                    setChangeName(false);\n                  }}\n                >\n                  <CloseIcon style={{ color: 'white', fontSize: '16px' }} />\n                </IconButton>\n              </>\n            ) : (\n              <>\n                <Typography>{name}</Typography>\n                <IconButton onClick={() => setChangeName(true)}>\n                  <CreateIcon style={{ color: 'white', fontSize: '16px' }} />\n                </IconButton>\n              </>\n            )}\n          </Box>\n        </td>\n      </Tooltip>\n      <td className=\"subs-row__item item_date_visited\">\n        {visitedAt ? (\n          <>\n            {timeAgo(visitedAt)}\n            <IconButton\n              disabled={loadingVisitedAt}\n              onClick={handleUpdateVisitedAt}\n            >\n              <RefreshIcon style={{ color: 'white' }} />\n            </IconButton>\n          </>\n        ) : (\n          <>\n            - ,\n            <IconButton\n              disabled={loadingVisitedAt}\n              onClick={handleUpdateVisitedAt}\n            >\n              <RefreshIcon style={{ color: 'white' }} />\n            </IconButton>\n          </>\n        )}\n      </td>\n      <td className=\"subs-row__item item_date_added\">\n        {`${timeAgo(date)}, ${date}`}\n      </td>\n      <td className=\"subs-row__item item_favorite\">\n        <button\n          type=\"button\"\n          className=\"image-wrapper\"\n          onClick={() => handleUpdateFavSub()}\n        >\n          {loading ? (\n            <ClipLoader color=\"#fff\" loading={loading} />\n          ) : (\n            <img\n              className=\"item-image\"\n              src={\n                favorite\n                  ? 'https://image.flaticon.com/icons/svg/148/148838.svg'\n                  : 'https://image.flaticon.com/icons/svg/149/149219.svg'\n              }\n              alt=\"fav\"\n            />\n          )}\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nSteamItem.defaultProps = {\n  favorite: false,\n};\n\nSteamItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  _id: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  favorite: PropTypes.bool,\n  updateSub: PropTypes.func.isRequired,\n};\n\nconst mDTP = {\n  updateSub,\n};\n\nexport default connect(\n  null,\n  mDTP,\n)(SteamItem);\n","import setAuthToken from '../../helpers/setAuthToken';\nimport * as subsActions from '../actions/subscribtionActions';\nimport { getSubsApi, postSubApi, updateSubApi } from '../../services/subsApi';\nimport { tokenSelector } from '../selectors/authSelectors';\n\n/* eslint-disable */\nexport const getSubs = id => async (dispatch, getState) => {\n  const token = tokenSelector(getState());\n  if (!token) return;\n  setAuthToken(token);\n  dispatch(subsActions.subsRequestStart());\n  try {\n    const subs = await getSubsApi(id);\n    dispatch(subsActions.subsRequestSuccess(subs));\n  } catch (err) {\n    console.error(`error while getting subs: ${err}`);\n    dispatch(subsActions.subsRequestError(err));\n  }\n};\n\nexport const addSub = sub => async (dispatch, getState) => {\n  const token = tokenSelector(getState());\n  if (!token) return;\n  setAuthToken(token);\n  dispatch(subsActions.addSubRequest());\n\n  try {\n    const newSub = await postSubApi(sub);\n    return dispatch(subsActions.addSubSuccess(newSub));\n  } catch (err) {\n    console.error(`error while adding sub: ${err}`);\n    dispatch(subsActions.addSubError(err));\n  }\n};\n\nexport const updateSub = sub => async (dispatch, getState) => {\n  const token = tokenSelector(getState());\n  if (!token) return;\n  setAuthToken(token);\n  dispatch(subsActions.updateSubStart());\n  try {\n    const updatedSub = await updateSubApi(sub);\n    return await dispatch(subsActions.updateSubSuccess(updatedSub));\n  } catch (err) {\n    dispatch(subsActions.updateSubError(err));\n    console.error(`error while updating sub: ${err}`);\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PropTypes from 'prop-types';\nimport SteamItem from './SteamItem';\nimport { addSubLoadSelector } from '../../redux/selectors/subscribtionSelectors';\n\nconst SteamList = ({ subscribers, addSubLoading }) => {\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (addSubLoading) {\n      return setLoading(true);\n    }\n\n    return setLoading(false);\n  }, [addSubLoading]);\n  console.log('subscribers', subscribers);\n  return (\n    subscribers.length > 0 && (\n      <div>\n        {loading && (\n          <LoaderWrapper>\n            <CircularProgress />\n          </LoaderWrapper>\n        )}\n        <StyledTable>\n          <tbody>\n            <tr className=\"subs-head\">\n              <th className=\"subs-head__item item_name\">Name</th>\n              <th className=\"subs-head__item item_date_visited\">\n                Last Visited\n              </th>\n              <th className=\"subs-head__item item_date_added\">Date Added</th>\n              <th className=\"subs-head__item item_favorite\">Favorite</th>\n            </tr>\n          </tbody>\n        </StyledTable>\n        <TableContent>\n          <StyledTable>\n            <tbody className=\"subs-body\">\n              {subscribers.map(sub => (\n                <SteamItem key={sub._id} {...sub} />\n              ))}\n            </tbody>\n          </StyledTable>\n        </TableContent>\n      </div>\n    )\n  );\n};\n\nconst LoaderWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst StyledTable = styled.table`\n  width: 100%;\n  font-size: 20px;\n  padding: 2rem;\n  color: #fff;\n  margin: 10px auto;\n`;\n\nconst TableContent = styled.div`\n  width: 100%;\n  height: calc(100vh - 200px);\n  overflow-y: auto;\n  overflow-x: hidden;\n  margin-bottom: 10px;\n\n  /* width */\n  ::-webkit-scrollbar {\n    width: 2px;\n  }\n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    background: transparent;\n  }\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: #888;\n  }\n\n  /* Handle on hover */\n  ::-webkit-scrollbar-thumb:hover {\n    background: #555;\n  }\n`;\n\nSteamList.propTypes = {\n  subscribers: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  addSubLoading: PropTypes.bool.isRequired,\n};\n\nconst mSTP = state => ({\n  addSubLoading: addSubLoadSelector(state),\n});\n\nexport default connect(mSTP)(SteamList);\n","export const START_PAGE = 1;\nexport const PER_PAGE_SUCBSCRIPTIONS_LIST = 20;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport * as selectors from '../../redux/selectors/subscribtionSelectors';\n\nfunction SubsInfo({\n  showTotalAmmountOfSubs,\n  sameDayAdded,\n  sameWeekAdded,\n  sameMonthAdded,\n}) {\n  return (\n    <div className=\"subs-length-wrap\">\n      <Content>\n        <p className=\"subs-length-text\">Today added:</p>\n        <span className=\"subs-length-text__num\">{sameDayAdded}</span>\n      </Content>\n      <Content>\n        <p className=\"subs-length-text\">Added this week:</p>\n        <span className=\"subs-length-text__num\">{sameWeekAdded}</span>\n      </Content>\n      <Content>\n        <p className=\"subs-length-text\">Added this month:</p>\n        <span className=\"subs-length-text__num\">{sameMonthAdded}</span>\n      </Content>\n      <Content>\n        <p className=\"subs-length-text\">Total:</p>\n        <span className=\"subs-length-text__num\">{showTotalAmmountOfSubs}</span>\n      </Content>\n    </div>\n  );\n}\n\nconst Content = styled.div`\n  display: flex;\n  padding: 14px;\n  border-radius: 10px;\n  transition: all 0.4s;\n  align-items: center;\n  margin-bottom: 10px;\n  font-size: 24px;\n  justify-content: space-between;\n  width: 100%;\n  color: rgba(156, 146, 146, 0.616);\n  &:hover {\n    color: white;\n    transform: translateX(-10px) scale(1.1) rotateX(10deg);\n    box-shadow: 6px 6px 11px -2px rgba(107, 107, 107, 1);\n  }\n`;\n\nSubsInfo.defaultProps = {\n  lastYearAdded: 0,\n};\n\nSubsInfo.propTypes = {\n  showTotalAmmountOfSubs: PropTypes.number.isRequired,\n  sameDayAdded: PropTypes.number.isRequired,\n  sameWeekAdded: PropTypes.number.isRequired,\n  sameMonthAdded: PropTypes.number.isRequired,\n};\n\nconst mSTP = state => ({\n  sameDayAdded: selectors.isSameDaySelector(state),\n  sameWeekAdded: selectors.isSameWeekSelector(state),\n  sameMonthAdded: selectors.isSameMonthSelector(state),\n});\n\nexport default connect(mSTP)(SubsInfo);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport styled from 'styled-components';\nimport { Modal, Pagination } from 'antd';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport SteamForm, {\n  toastError,\n  toastSuccess,\n} from '../Components/SteamList/SteamForm';\nimport SteamList from '../Components/SteamList/SteamList';\nimport { getSubs, addSub } from '../redux/operations/subscribtionsOperations';\nimport { authSelector, idSelector } from '../redux/selectors/authSelectors';\nimport {\n  subsSelector,\n  subsLoadSelector,\n  addSubLoadSelector,\n} from '../redux/selectors/subscribtionSelectors';\nimport { START_PAGE, PER_PAGE_SUCBSCRIPTIONS_LIST } from '../helpers/constants';\nimport SubsInfo from '../Components/SteamList/SubsInfo';\n\nconst filterSubs = (arr, query = '') =>\n  arr.filter(\n    el =>\n      el.name.toLowerCase().includes(query.toLowerCase()) ||\n      el.userID === query,\n  );\n\nclass Subscribers extends Component {\n  state = {\n    query: '',\n    showFavorites: false,\n    onChangeText: 'Show favourites',\n    perPage: PER_PAGE_SUCBSCRIPTIONS_LIST,\n    currentPage: START_PAGE,\n    preventSave: null,\n  };\n  /* eslint-disable */\n\n  componentDidUpdate(prevProps, prevState) {\n    const { query } = this.state;\n    const { ownerId, getSubs } = this.props;\n\n    if (prevProps.ownerId !== ownerId) {\n      getSubs(ownerId);\n    }\n\n    if (prevState.query !== query) {\n      this.handleChangePageOnFilter();\n    }\n  }\n\n  resetFilter = () => this.setState({ query: '' });\n\n  handleChangePageOnFilter = () => {\n    const { currentPage } = this.state;\n    if (currentPage > this.maxPage()) {\n      this.setState({ currentPage: this.maxPage() });\n    }\n    if (currentPage < 1) {\n      this.setState({ currentPage: 1 });\n    }\n  };\n\n  maxPage = () => {\n    return Math.ceil(\n      this.renderSubsList().length / PER_PAGE_SUCBSCRIPTIONS_LIST,\n    );\n  };\n\n  handleSubmit = sub => {\n    const { isAuth, subs } = this.props;\n    if (!isAuth) return;\n    const subAlreadyExists = subs.find(\n      el =>\n        el.name.toLowerCase().trim() === sub.name || el.userID === sub.userID,\n    );\n\n    if (subAlreadyExists) {\n      toastError();\n      this.setState({ preventSave: sub });\n      return;\n    }\n\n    this.sendUserData(sub);\n  };\n\n  sendUserData = sub => {\n    const { addSub, subs, ownerId } = this.props;\n    const date = `${new Date().toLocaleDateString()} ${new Date().toLocaleTimeString()}`;\n\n    const subToAdd = {\n      favorite: false,\n      date,\n      visitedAt: date,\n      ...sub,\n      ownerId,\n    };\n\n    return addSub(subToAdd).then(res => {\n      if (!res) return toastError();\n\n      return toastSuccess(subs.length + 1);\n    });\n  };\n\n  handleFilterSubs = e => this.setState({ query: e.target.value.trim() });\n\n  filterFavorites = () => this.props.subs.filter(el => el.favorite);\n\n  showFavorites = () =>\n    this.setState(state => ({\n      showFavorites: !state.showFavorites,\n      onChangeText: state.showFavorites ? 'Favorites' : 'All',\n    }));\n\n  filteredSubs = (subs, query) => filterSubs(subs, query);\n\n  showTotalAmmountOfSubs = () => {\n    const { subs } = this.props;\n    const { showFavorites, query } = this.state;\n\n    return showFavorites\n      ? this.filteredSubs(this.filterFavorites(), query).length\n      : this.filteredSubs(subs, query).length;\n  };\n\n  renderSubsList = () => {\n    const { subs } = this.props;\n    const { showFavorites, query } = this.state;\n\n    return showFavorites\n      ? this.filteredSubs(this.filterFavorites(), query)\n      : this.filteredSubs(subs, query);\n  };\n\n  handleChangePage = name => {\n    this.setState({\n      currentPage: name,\n    });\n  };\n\n  renderPaginationList = () => {\n    const { currentPage, perPage } = this.state;\n    const list = [...this.renderSubsList().reverse()];\n\n    const indexOfLastSub = currentPage * perPage;\n    const indexOfFirstSub = indexOfLastSub - perPage;\n    return list.slice(indexOfFirstSub, indexOfLastSub);\n  };\n\n  render() {\n    const { query, onChangeText, perPage, currentPage } = this.state;\n    const { subsLoad } = this.props;\n    return (\n      <Content>\n        {subsLoad && <div className=\"rainbow-marker-loader\" />}\n\n        <Form>\n          <SteamForm\n            handleSubmit={this.handleSubmit}\n            query={query}\n            handleFilterSubs={this.handleFilterSubs}\n            showFavorites={this.showFavorites}\n            onChangeText={onChangeText}\n            onReset={this.resetFilter}\n          />\n\n          <SubsInfo showTotalAmmountOfSubs={this.showTotalAmmountOfSubs()} />\n        </Form>\n        <List>\n          <SteamList subscribers={this.renderPaginationList()} />\n\n          {this.renderSubsList().length > 0 && (\n            <PaginationBlock>\n              <Pagination\n                showQuickJumper\n                defaultCurrent={Number(currentPage)}\n                defaultPageSize={Number(perPage)}\n                total={this.renderSubsList().length}\n                onChange={this.handleChangePage}\n              />\n            </PaginationBlock>\n          )}\n          <ToastContainer />\n        </List>\n        <Modal\n          title=\"Save Anyway?\"\n          bodyStyle={{ padding: 0 }}\n          visible={Boolean(this.state.preventSave)}\n          onOk={() =>\n            this.sendUserData(this.state.preventSave).then(() =>\n              this.setState({ preventSave: null }),\n            )\n          }\n          onCancel={() => this.setState({ preventSave: null })}\n        />\n      </Content>\n    );\n  }\n}\n\nconst PaginationBlock = styled.div`\n  text-align: center;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 90%;\n  margin: 0 auto;\n  justify-content: space-between;\n`;\n\nconst Form = styled.div`\n  width: 30%;\n  /* margin: 0 auto; */\n  display: flex;\n  flex-direction: column;\n`;\n\nconst List = styled.div`\n  position: relative;\n  width: 66%;\n`;\n\nSubscribers.defaultProps = {\n  ownerId: null,\n};\n\nSubscribers.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  getSubs: PropTypes.func.isRequired,\n  addSub: PropTypes.func.isRequired,\n  subs: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  subsLoad: PropTypes.bool.isRequired,\n  ownerId: PropTypes.string,\n};\n\nconst mapSTP = state => ({\n  isAuth: authSelector(state),\n  subs: subsSelector(state),\n  subsLoad: subsLoadSelector(state),\n  addSubLoad: addSubLoadSelector(state),\n  ownerId: idSelector(state),\n});\n\nconst mDTP = {\n  getSubs,\n  addSub,\n};\n\nexport default connect(\n  mapSTP,\n  mDTP,\n)(Subscribers);\n"],"sourceRoot":""}