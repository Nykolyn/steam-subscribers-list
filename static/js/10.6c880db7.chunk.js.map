{"version":3,"sources":["Components/JellyButton.js","redux/selectors/subscribtionSelectors.js","Components/SteamList/SteamForm.js","Components/SteamList/SteamItem.js","Components/SteamList/SteamList.js","services/subsApi.js","helpers/constants.js","Components/SteamList/Pagination.js","Pages/Subscribers.js","redux/operations/subscribtionsOperations.js"],"names":["JellyButton","_ref","text","onClick","type","loading","react_default","a","createElement","className","defaultProps","subsSelector","state","subscribtions","subs","subsLoadSelector","getSubs","addSubLoadSelector","addSub","updateFavSubLoadSelector","updateFavSub","toastError","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","toastSuccess","length","success","concat","SteamForm","name","userID","warn","handleInputChange","_ref$target","target","value","_this","setState","Object","defineProperty","handleFormSubmit","e","preventDefault","_this$state","props","handleSubmit","_this$state2","this","_this$props","handleFilterSubs","query","showFavorites","onChangeText","onSubmit","autoComplete","onChange","placeholder","Components_JellyButton","react_toastify","newestOnTop","rtl","pauseOnVisibilityChange","Component","connect","SteamItem","id","_id","date","favorite","handleFavChange","_useState","useState","_useState2","slicedToArray","setLoading","handleLoading","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","wrap","_context2","prev","next","setTimeout","_callee","_context","stop","apply","arguments","Fragment","react_spinners","color","src","alt","SteamList","subscribers","TransitionGroup","map","sub","CSSTransition","key","timeout","classNames","SteamList_SteamItem","assign","URL","process","getSubsApi","axios","get","then","response","data","postSubApi","post","addedSub","updateFavApi","patch","updatedSub","START_PAGE","PER_PAGE_SUCBSCRIPTIONS_LIST","Pagination","maxPage","handleChangePage","currentPage","IconButton","disabled","ArrowBackIos_default","ArrowForwardIos_default","filterSubs","arr","undefined","filter","el","toLowerCase","includes","Subscribers","perPage","handleChangePageOnFilter","Math","ceil","renderSubsList","isAuth","ownerId","console","log","find","trim","toLocaleLowerCase","objectSpread","Date","toLocaleDateString","toLocaleTimeString","res","filterFavorites","handleFavoriteChange","filteredSubs","showTotalAmmountOfSubs","renderPaginationList","_this$state3","indexOfLastSub","indexOfFirstSub","toConsumableArray","reverse","slice","_this$props2","prevProps","prevState","_this$props3","_this$state4","subsLoad","CircularProgress","SteamList_SteamForm","Components_SteamList_SteamList","SteamList_Pagination","mDTP","dispatch","getState","token","tokenSelector","abrupt","setAuthToken","subsRequestStart","sent","subsRequestSuccess","t0","subsRequestError","_x","_x2","newSub","addSubRequest","addSubSuccess","addSubError","_x3","_x4","_ref3","_callee3","_context3","updateFavSubStart","updateFavSubSuccess","updateFavSubError","_x5","_x6","authSelector","addSubLoad","updFavSubLoad","idSelector"],"mappings":"yNAGMA,EAAc,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAMC,EAATF,EAASE,QAASC,EAAlBH,EAAkBG,KAAMC,EAAxBJ,EAAwBI,QAAxB,OAClBC,EAAAC,EAAAC,cAAA,UAAQJ,KAAMA,EAAMK,UAAU,eAAeN,QAASA,GACnDE,EACCC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,cAEAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeP,KAKlCF,EAAYU,aAAe,CACzBP,QAAS,KACTE,SAAS,GAUIL,QCzBFW,EAAe,SAAAC,GAAK,OAAIA,EAAMC,cAAcC,MAC5CC,EAAmB,SAAAH,GAAK,OAAIA,EAAMC,cAAcR,QAAQW,SACxDC,EAAqB,SAAAL,GAAK,OAAIA,EAAMC,cAAcR,QAAQa,QAC1DC,EAA2B,SAAAP,GAAK,OAC3CA,EAAMC,cAAcR,QAAQe,cCMjBC,EAAa,kBACxBC,IAAMC,MAAM,kCAAyB,CACnCC,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,KAGFC,EAAe,SAAAC,GAAM,OAChCT,IAAMU,QAAN,0CAAAC,OAA8CF,GAAU,CACtDP,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,KAGTK,6MAQJtB,MAAQ,CACNuB,KAAM,GACNC,OAAQ,MAGVC,KAAO,kBACLf,IAAMe,KAAK,yDAA4B,CACrCb,SAAU,WACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,OAGfS,kBAAoB,SAAArC,GAAA,IAAAsC,EAAAtC,EAAGuC,OAAUL,EAAbI,EAAaJ,KAAMM,EAAnBF,EAAmBE,MAAnB,OAClBC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAiBT,EAAOM,OAE1BK,iBAAmB,SAAAC,GACjBA,EAAEC,iBADoB,IAAAC,EAEGP,EAAK9B,MAAtBuB,EAFcc,EAEdd,KAFcc,EAERb,OACd,MAAa,KAATD,EAAoBO,EAAKL,QAE7BK,EAAKQ,MAAMC,aAAaT,EAAK9B,OACtB8B,EAAKC,SAAS,CAAER,KAAM,GAAIC,OAAQ,+EAGlC,IAAAgB,EACkBC,KAAKzC,MAAtBuB,EADDiB,EACCjB,KAAMC,EADPgB,EACOhB,OADPkB,EAQHD,KAAKH,MALPK,EAHKD,EAGLC,iBACAC,EAJKF,EAILE,MACAC,EALKH,EAKLG,cACAC,EANKJ,EAMLI,aACArD,EAPKiD,EAOLjD,QAEF,OACEC,EAAAC,EAAAC,cAAA,QAAMmD,SAAUN,KAAKP,iBAAkBrC,UAAU,YAC/CH,EAAAC,EAAAC,cAAA,SACEJ,KAAK,OACLwD,aAAa,MACbnB,MAAON,EACPA,KAAK,OACL0B,SAAUR,KAAKf,kBACf7B,UAAU,kBACVqD,YAAY,iBAEdxD,EAAAC,EAAAC,cAAA,SACEJ,KAAK,OACLwD,aAAa,MACbnB,MAAOL,EACPD,KAAK,SACL0B,SAAUR,KAAKf,kBACf7B,UAAU,kBACVqD,YAAY,uBAEdxD,EAAAC,EAAAC,cAACuD,EAAD,CAAa7D,KAAK,cAAcG,QAASA,EAASD,KAAK,WACvDE,EAAAC,EAAAC,cAAA,SACEJ,KAAK,OACLwD,aAAa,MACbnB,MAAOe,EACPM,YAAa,kBACb3B,KAAK,QACL0B,SAAUN,EACV9C,UAAU,oBAEZH,EAAAC,EAAAC,cAACuD,EAAD,CACE7D,KAAMwD,EACNtD,KAAK,SACLD,QAAS,kBAAMsD,OAEjBnD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CACExC,SAAS,YACTC,UAAW,IACXC,iBAAiB,EACjBuC,aAAW,EACXtC,cAAY,EACZuC,KAAK,EACLC,yBAAuB,EACvBtC,WAAS,EACTD,cAAY,YAxFEwC,aAsGTC,cAJF,SAAAzD,GAAK,MAAK,CACrBP,QAASY,EAAmBL,KAGfyD,CAAcnC,+DC/HvBoC,EAAY,SAAArE,GAAwD,IAAhDsE,EAAgDtE,EAArDuE,IAASrC,EAA4ClC,EAA5CkC,KAAMsC,EAAsCxE,EAAtCwE,KAAMC,EAAgCzE,EAAhCyE,SAAUC,EAAsB1E,EAAtB0E,gBAAsBC,EAC1CC,oBAAS,GADiCC,EAAAlC,OAAAmC,EAAA,EAAAnC,CAAAgC,EAAA,GACjEvE,EADiEyE,EAAA,GACxDE,EADwDF,EAAA,GAGlEG,EAAa,eAAAC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAwC,EAAA7E,EAAA8E,KAAG,SAAAC,IAAA,OAAAF,EAAA7E,EAAAgF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACpBV,GAAW,GADSQ,EAAAE,KAAA,EAEdf,EAAgBJ,EAAIG,GAFN,OAGpBiB,WAAU/C,OAAAuC,EAAA,EAAAvC,CAAAwC,EAAA7E,EAAA8E,KAAC,SAAAO,IAAA,OAAAR,EAAA7E,EAAAgF,KAAA,SAAAM,GAAA,cAAAA,EAAAJ,KAAAI,EAAAH,MAAA,OACTV,GAAW,GADF,wBAAAa,EAAAC,SAAAF,MAER,KALiB,wBAAAJ,EAAAM,SAAAR,MAAH,yBAAAJ,EAAAa,MAAA1C,KAAA2C,YAAA,GAQnB,OACE1F,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0F,SAAA,KACE3F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAK2B,GACL7B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,aAAoCgE,IAEtCnE,EAAAC,EAAAC,cAAA,UACEC,UAAU,gBACVL,KAAK,SACLD,QAAS,WACP8E,MAGD5E,EACCC,EAAAC,EAAAC,cAAC0F,EAAA,WAAD,CAAYC,MAAM,OAAO9F,QAASA,IAElCC,EAAAC,EAAAC,cAAA,OACEC,UAAU,aACV2F,IACE1B,EACI,sDACA,sDAEN2B,IAAI,WAQhB/B,EAAU5D,aAAe,CACvBgE,UAAU,GAUGJ,QCjCAgC,EAnBG,SAAArG,GAAA,IAAGsG,EAAHtG,EAAGsG,YAAa5B,EAAhB1E,EAAgB0E,gBAAhB,OAChBrE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBACZH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAiB/F,UAAU,uBACxB8F,EAAYE,IAAI,SAAAC,GAAG,OAClBpG,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAeC,IAAKF,EAAIlC,IAAKqC,QAAS,IAAKC,WAAW,UACpDxG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACZH,EAAAC,EAAAC,cAACuG,EAADnE,OAAAoE,OAAA,GAAeN,EAAf,CAAoB/B,gBAAiBA,6CCV3CsC,EAAMC,4CAECC,EAAa,SAAA5C,GAAE,OAC1B6C,IAAMC,IAAN,GAAApF,OAAagF,EAAb,iBAAAhF,OAAgCsC,IAAM+C,KAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAK1G,QAE1D2G,EAAa,SAAAf,GAAG,OAC3BU,IACGM,KADH,GAAAzF,OACWgF,EADX,gBAC8BP,GAC3BY,KAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKG,YAEvBC,EAAe,SAACrD,EAAImC,GAAL,OAC1BU,IACGS,MADH,GAAA5F,OACYgF,EADZ,2BAAAhF,OACyCsC,GAAMmC,GAC5CY,KAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKM,sBCfvBC,EAAa,EACbC,EAA+B,gDC4C7BC,EArCI,SAAAhI,GAAA,IAAGiI,EAAHjI,EAAGiI,QAASC,EAAZlI,EAAYkI,iBAAkBC,EAA9BnI,EAA8BmI,YAA9B,OACjB9H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CACE5H,UAAU,oBACV0F,MAAM,UACNhE,KAAK,OACLmG,SAAUF,IAAgBL,EAC1B5H,QAAS,kBAAMgI,EAAiB,UAEhC7H,EAAAC,EAAAC,cAAC+H,EAAAhI,EAAD,CACEE,UAAU,oBACV6H,SAAUF,IAAgBL,KAG9BzH,EAAAC,EAAAC,cAAA,kBACQ4H,EADR,OACyBF,KAEzB5H,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CACE5H,UAAU,oBACV0B,KAAK,OACLmG,SAAUF,IAAgBF,IAC1B/H,QAAS,kBAAMgI,EAAiB,UAEhC7H,EAAAC,EAAAC,cAACgI,EAAAjI,EAAD,CACEE,UAAU,oBACV6H,SAAUF,IAAgBL,OCN5BU,EAAa,SAACC,GAAD,IAAMlF,EAANwC,UAAAjE,OAAA,QAAA4G,IAAA3C,UAAA,GAAAA,UAAA,GAAc,GAAd,OACjB0C,EAAIE,OACF,SAAAC,GAAE,OACAA,EAAG1G,KAAK2G,cAAcC,SAASvF,EAAMsF,gBACrCD,EAAGzG,SAAWoB,KAGdwF,8MACJpI,MAAQ,CACN4C,MAAO,GACPC,eAAe,EACfC,aAAc,kBACduF,QAASjB,EACTI,YAAaL,KAsBfmB,yBAA2B,WAAM,IACvBd,EAAgB1F,EAAK9B,MAArBwH,YACJA,EAAc1F,EAAKwF,WACrBxF,EAAKC,SAAS,CAAEyF,YAAa1F,EAAKwF,YAEhCE,EAAc,GAChB1F,EAAKC,SAAS,CAAEyF,YAAa,OAIjCF,QAAU,WACR,OAAOiB,KAAKC,KACV1G,EAAK2G,iBAAiBtH,OAASiG,MAInC7E,aAAe,SAAAuD,GAAO,IAAApD,EACsBZ,EAAKQ,MAAvCoG,EADYhG,EACZgG,OAAQpI,EADIoC,EACJpC,OAAQJ,EADJwC,EACIxC,KAAMyI,EADVjG,EACUiG,QACzBD,IACLE,QAAQC,IAAIF,GACazI,EAAK4I,KAC5B,SAAAb,GAAE,OACAA,EAAG1G,KAAK2G,cAAca,SAAWjD,EAAIvE,KAAKyH,oBAAoBD,QAC9Dd,EAAGzG,SAAWsE,EAAItE,OAAOuH,SAI3BtI,IASAH,EAPc0B,OAAAiH,EAAA,EAAAjH,CAAA,CACZ8B,UAAU,EACVD,KAAI,GAAAxC,QAAK,IAAI6H,MAAOC,qBAAhB,KAAA9H,QAAwC,IAAI6H,MAAOE,uBACpDtD,EAHS,CAIZ6C,aAGejC,KAAK,SAAA2C,GACfA,GAELnI,EAAahB,EAAKiB,OAAS,SAKjCwB,iBAAmB,SAAAR,GAAC,OAAIL,EAAKC,SAAS,CAAEa,MAAOT,EAAEP,OAAOC,WAExDyH,gBAAkB,kBAAMxH,EAAKQ,MAAMpC,KAAK8H,OAAO,SAAAC,GAAE,OAAIA,EAAGnE,cAExDjB,cAAgB,kBACdf,EAAKC,SAAS,SAAA/B,GAAK,MAAK,CACtB6C,eAAgB7C,EAAM6C,cACtBC,aAAc9C,EAAM6C,cAAgB,kBAAoB,iBAG5D0G,qBAAuB,SAAC5F,EAAIG,IAE1BtD,EADyBsB,EAAKQ,MAAtB9B,cACKmD,EAAI,CAAEG,UAAWA,OAGhC0F,aAAe,SAACtJ,EAAM0C,GAAP,OAAiBiF,EAAW3H,EAAM0C,MAEjD6G,uBAAyB,WAAM,IACrBvJ,EAAS4B,EAAKQ,MAAdpC,KADqBmC,EAEIP,EAAK9B,MAA9B6C,EAFqBR,EAErBQ,cAAeD,EAFMP,EAENO,MAEvB,OAAOC,EACHf,EAAK0H,aAAa1H,EAAKwH,kBAAmB1G,GAAOzB,OACjDW,EAAK0H,aAAatJ,EAAM0C,GAAOzB,UAGrCsH,eAAiB,WAAM,IACbvI,EAAS4B,EAAKQ,MAAdpC,KADasC,EAEYV,EAAK9B,MAA9B6C,EAFaL,EAEbK,cAAeD,EAFFJ,EAEEI,MAEvB,OAAOC,EACHf,EAAK0H,aAAa1H,EAAKwH,kBAAmB1G,GAC1Cd,EAAK0H,aAAatJ,EAAM0C,MAG9B2E,iBAAmB,SAAAhG,GACjBO,EAAKC,SAAS,SAAA/B,GAAK,MAAK,CACtBwH,YACW,SAATjG,EAAkBvB,EAAMwH,YAAc,EAAIxH,EAAMwH,YAAc,QAIpEkC,qBAAuB,WAAM,IAAAC,EACM7H,EAAK9B,MAA9BwH,EADmBmC,EACnBnC,YAAaa,EADMsB,EACNtB,QAGfuB,EAAiBpC,EAAca,EAC/BwB,EAAkBD,EAAiBvB,EACzC,OAJUrG,OAAA8H,EAAA,EAAA9H,CAAOF,EAAK2G,iBAAiBsB,WAI3BC,MAAMH,EAAiBD,uFA/GjB,IAAAK,EACmBxH,KAAKH,MAAlCoG,EADUuB,EACVvB,OAAQtI,EADE6J,EACF7J,QAASuI,EADPsB,EACOtB,QACpBD,GACLtI,EAAQuI,8CAGSuB,EAAWC,GAAW,IAAAC,EACF3H,KAAKH,MAAlCoG,EAD+B0B,EAC/B1B,OAAQtI,EADuBgK,EACvBhK,QAASuI,EADcyB,EACdzB,QACjB/F,EAAUH,KAAKzC,MAAf4C,MAEJsH,EAAUxB,SAAWA,GAAUA,GACjCtI,EAAQuI,GAGNwB,EAAUvH,QAAUA,GACtBH,KAAK6F,4DAmGA,IAAA+B,EACsC5H,KAAKzC,MAA1C4C,EADDyH,EACCzH,MAAOE,EADRuH,EACQvH,aAAc0E,EADtB6C,EACsB7C,YACrB8C,EAAa7H,KAAKH,MAAlBgI,SAER,OACE5K,EAAAC,EAAAC,cAAA,WACG0K,GACC5K,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACE1K,UAAU,uBACV0F,MAAM,cAIV7F,EAAAC,EAAAC,cAAC4K,EAAD,CACEjI,aAAcE,KAAKF,aACnBK,MAAOA,EACPD,iBAAkBF,KAAKE,iBACvBE,cAAeJ,KAAKI,cACpBC,aAAcA,IAGhBpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAb,iBACiB4C,KAAKgH,2BAGxB/J,EAAAC,EAAAC,cAAC6K,EAAD,CACE9E,YAAalD,KAAKiH,uBAClB3F,gBAAiBtB,KAAK8G,uBAGvB9G,KAAKgG,iBAAiBtH,OAAS,IAC9BzB,EAAAC,EAAAC,cAAC8K,EAAD,CACElD,YAAaA,EACbF,QAAS7E,KAAK6E,QACdC,iBAAkB9E,KAAK8E,mBAI3B7H,EAAAC,EAAAC,cAACwD,EAAA,EAAD,cAlKkBI,aA2LpBmH,GAAO,CACXvK,QC/MqB,SAAAuD,GAAE,sBAAAtE,EAAA2C,OAAAuC,EAAA,EAAAvC,CAAAwC,EAAA7E,EAAA8E,KAAI,SAAAO,EAAO4F,EAAUC,GAAjB,IAAAC,EAAA5K,EAAA,OAAAsE,EAAA7E,EAAAgF,KAAA,SAAAM,GAAA,cAAAA,EAAAJ,KAAAI,EAAAH,MAAA,UACrBgG,EAAQC,YAAcF,KADD,CAAA5F,EAAAH,KAAA,eAAAG,EAAA+F,OAAA,wBAG3BC,YAAaH,GACbF,EAASM,eAJkBjG,EAAAJ,KAAA,EAAAI,EAAAH,KAAA,EAMNyB,EAAW5C,GANL,OAMnBzD,EANmB+E,EAAAkG,KAOzBP,EAASQ,YAAmBlL,IAPH+E,EAAAH,KAAA,iBAAAG,EAAAJ,KAAA,GAAAI,EAAAoG,GAAApG,EAAA,SASzB2D,QAAQjI,MAAR,6BAAAU,OAAA4D,EAAAoG,KACAT,EAASU,YAAgBrG,EAAAoG,KAVA,yBAAApG,EAAAC,SAAAF,EAAA,kBAAJ,gBAAAuG,EAAAC,GAAA,OAAAnM,EAAA8F,MAAA1C,KAAA2C,YAAA,IDgNvB9E,OClMoB,SAAAwF,GAAG,sBAAAxB,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAwC,EAAA7E,EAAA8E,KAAI,SAAAC,EAAOkG,EAAUC,GAAjB,IAAAC,EAAAW,EAAA,OAAAjH,EAAA7E,EAAAgF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACrBgG,EAAQC,YAAcF,KADD,CAAAjG,EAAAE,KAAA,eAAAF,EAAAoG,OAAA,wBAG3BC,YAAaH,GACbF,EAASc,eAJkB9G,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAMJ+B,EAAWf,GANP,cAMnB2F,EANmB7G,EAAAuG,KAAAvG,EAAAoG,OAAA,SAQlBJ,EAASe,YAAcF,KARL,QAAA7G,EAAAC,KAAA,GAAAD,EAAAyG,GAAAzG,EAAA,SAUzBgE,QAAQjI,MAAR,2BAAAU,OAAAuD,EAAAyG,KACAT,EAASgB,YAAWhH,EAAAyG,KAXK,yBAAAzG,EAAAM,SAAAR,EAAA,kBAAJ,gBAAAmH,EAAAC,GAAA,OAAAxH,EAAAa,MAAA1C,KAAA2C,YAAA,IDmMvB5E,aCpL0B,SAACmD,EAAIG,GAAL,sBAAAiI,EAAA/J,OAAAuC,EAAA,EAAAvC,CAAAwC,EAAA7E,EAAA8E,KAAkB,SAAAuH,EAAOpB,EAAUC,GAAjB,IAAAC,EAAAhF,EAAA,OAAAtB,EAAA7E,EAAAgF,KAAA,SAAAsH,GAAA,cAAAA,EAAApH,KAAAoH,EAAAnH,MAAA,UACtCgG,EAAQC,YAAcF,KADgB,CAAAoB,EAAAnH,KAAA,eAAAmH,EAAAjB,OAAA,wBAG5CC,YAAaH,GACbF,EAASsB,eAJmCD,EAAApH,KAAA,EAAAoH,EAAAnH,KAAA,EAMxBkC,EAAarD,EAAIG,GANO,OAMpCgC,EANoCmG,EAAAd,KAO1CP,EAASuB,YAAoBrG,IAPamG,EAAAnH,KAAA,iBAAAmH,EAAApH,KAAA,GAAAoH,EAAAZ,GAAAY,EAAA,SAS1CrB,EAASwB,YAAiBH,EAAAZ,KAC1BzC,QAAQjI,MAAR,sCAAAU,OAAA4K,EAAAZ,KAV0C,yBAAAY,EAAA/G,SAAA8G,EAAA,kBAAlB,gBAAAK,EAAAC,GAAA,OAAAP,EAAA5G,MAAA1C,KAAA2C,YAAA,KDuLb3B,sBAfA,SAAAzD,GAAK,MAAK,CACvB0I,OAAQ6D,YAAavM,GACrBE,KAAMH,EAAaC,GACnBsK,SAAUnK,EAAiBH,GAC3BwM,WAAYnM,EAAmBL,GAC/ByM,cAAelM,EAAyBP,GACxC2I,QAAS+D,YAAW1M,KAWpB2K,GAFalH,CAGb2E","file":"static/js/10.6c880db7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst JellyButton = ({ text, onClick, type, loading }) => (\n  <button type={type} className=\"jelly-button\" onClick={onClick}>\n    {loading ? (\n      <p className=\"super-slide\">Loading...</p>\n    ) : (\n      <p className=\"super-slide\">{text}</p>\n    )}\n  </button>\n);\n\nJellyButton.defaultProps = {\n  onClick: null,\n  loading: false,\n};\n\nJellyButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n  loading: PropTypes.bool,\n};\n\nexport default JellyButton;\n","export const subsSelector = state => state.subscribtions.subs;\nexport const subsLoadSelector = state => state.subscribtions.loading.getSubs;\nexport const addSubLoadSelector = state => state.subscribtions.loading.addSub;\nexport const updateFavSubLoadSelector = state =>\n  state.subscribtions.loading.updateFavSub;\n","/* eslint-disable */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport JellyButton from '../JellyButton';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { addSubLoadSelector } from '../../redux/selectors/subscribtionSelectors';\n\nexport const toastError = () =>\n  toast.error('🤪 Sub already exists', {\n    position: 'top-center',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n  });\n\nexport const toastSuccess = length =>\n  toast.success(`🤟 Sub added! Total ammout:  ${length}`, {\n    position: 'top-right',\n    autoClose: 4000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n  });\n\nclass SteamForm extends Component {\n  static propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n    handleFilterSubs: PropTypes.func.isRequired,\n    query: PropTypes.string.isRequired,\n    showFavorites: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    userID: '',\n  };\n\n  warn = () =>\n    toast.warn('😤😤😤 Fill the field!!!', {\n      position: 'top-left',\n      autoClose: 2000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n    });\n\n  handleInputChange = ({ target: { name, value } }) =>\n    this.setState({ [name]: value });\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n    const { name, userID } = this.state;\n    if (name === '') return this.warn();\n\n    this.props.handleSubmit(this.state);\n    return this.setState({ name: '', userID: '' });\n  };\n\n  render() {\n    const { name, userID } = this.state;\n    const {\n      handleFilterSubs,\n      query,\n      showFavorites,\n      onChangeText,\n      loading,\n    } = this.props;\n    return (\n      <form onSubmit={this.handleFormSubmit} className=\"sub-form\">\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={name}\n          name=\"name\"\n          onChange={this.handleInputChange}\n          className=\"sub-form__input\"\n          placeholder=\"Add sub here\"\n        />\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={userID}\n          name=\"userID\"\n          onChange={this.handleInputChange}\n          className=\"sub-form__input\"\n          placeholder=\"User id (optional)\"\n        />\n        <JellyButton text=\"Add new sub\" loading={loading} type=\"submit\" />\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={query}\n          placeholder={'filter sub here'}\n          name=\"query\"\n          onChange={handleFilterSubs}\n          className=\"sub-form__input\"\n        />\n        <JellyButton\n          text={onChangeText}\n          type=\"button\"\n          onClick={() => showFavorites()}\n        />\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={4000}\n          hideProgressBar={false}\n          newestOnTop\n          closeOnClick\n          rtl={false}\n          pauseOnVisibilityChange\n          draggable\n          pauseOnHover\n        />\n      </form>\n    );\n  }\n}\nSteamForm.propTypes = {\n  loading: PropTypes.bool.isRequired,\n};\n\nconst mSTP = state => ({\n  loading: addSubLoadSelector(state),\n});\n\nexport default connect(mSTP)(SteamForm);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ClipLoader } from 'react-spinners';\n\n/* eslint-disable */\nconst SteamItem = ({ _id: id, name, date, favorite, handleFavChange }) => {\n  const [loading, setLoading] = useState(false);\n\n  const handleLoading = async () => {\n    setLoading(true);\n    await handleFavChange(id, favorite);\n    setTimeout(async () => {\n      setLoading(false);\n    }, 1000);\n  };\n\n  return (\n    <>\n      <div>\n        <h2>{name}</h2>\n        <p className=\"item-date\">Added at: {date}</p>\n      </div>\n      <button\n        className=\"image-wrapper\"\n        type=\"button\"\n        onClick={() => {\n          handleLoading();\n        }}\n      >\n        {loading ? (\n          <ClipLoader color=\"#fff\" loading={loading} />\n        ) : (\n          <img\n            className=\"item-image\"\n            src={\n              favorite\n                ? 'https://image.flaticon.com/icons/svg/148/148838.svg'\n                : 'https://image.flaticon.com/icons/svg/149/149219.svg'\n            }\n            alt=\"fav\"\n          />\n        )}\n      </button>\n    </>\n  );\n};\n\nSteamItem.defaultProps = {\n  favorite: false,\n};\n\nSteamItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  favorite: PropTypes.bool,\n  handleFavChange: PropTypes.func.isRequired,\n};\n\nexport default SteamItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport SteamItem from './SteamItem';\n/* eslint-disable */\n\nconst SteamList = ({ subscribers, handleFavChange }) => (\n  <ul className=\"subs-list container\">\n    <TransitionGroup className=\"subs-list container\">\n      {subscribers.map(sub => (\n        <CSSTransition key={sub._id} timeout={500} classNames=\"bounce\">\n          <li className=\"subs-list__item\">\n            <SteamItem {...sub} handleFavChange={handleFavChange} />\n          </li>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  </ul>\n);\n\nSteamList.propTypes = {\n  subscribers: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  handleFavChange: PropTypes.func.isRequired,\n};\n\nexport default SteamList;\n","import axios from 'axios';\n\nconst URL = process.env.REACT_APP_URL;\n\nexport const getSubsApi = id =>\n  axios.get(`${URL}/subscribers/${id}`).then(response => response.data.subs);\n\nexport const postSubApi = sub =>\n  axios\n    .post(`${URL}/subscribers`, sub)\n    .then(response => response.data.addedSub);\n\nexport const updateFavApi = (id, sub) =>\n  axios\n    .patch(`${URL}/subscribers/updateSub/${id}`, sub)\n    .then(response => response.data.updatedSub);\n","export const START_PAGE = 1;\nexport const PER_PAGE_SUCBSCRIPTIONS_LIST = 20;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport { START_PAGE } from '../../helpers/constants';\n\nconst Pagination = ({ maxPage, handleChangePage, currentPage }) => (\n  <div className=\"pagination-wrapper\">\n    <IconButton\n      className=\"pagination-button\"\n      color=\"primary\"\n      name=\"prev\"\n      disabled={currentPage === START_PAGE}\n      onClick={() => handleChangePage('prev')}\n    >\n      <ArrowBackIosIcon\n        className=\"pagination-button\"\n        disabled={currentPage === START_PAGE}\n      />\n    </IconButton>\n    <h1>\n      Page {currentPage} of {maxPage()}\n    </h1>\n    <IconButton\n      className=\"pagination-button\"\n      name=\"next\"\n      disabled={currentPage === maxPage()}\n      onClick={() => handleChangePage('next')}\n    >\n      <ArrowForwardIosIcon\n        className=\"pagination-button\"\n        disabled={currentPage === START_PAGE}\n      />\n    </IconButton>\n  </div>\n);\n\nPagination.propTypes = {\n  maxPage: PropTypes.func.isRequired,\n  handleChangePage: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired,\n};\n\nexport default Pagination;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { CircularProgress } from '@material-ui/core';\n\nimport SteamForm, {\n  toastError,\n  toastSuccess,\n} from '../Components/SteamList/SteamForm';\nimport SteamList from '../Components/SteamList/SteamList';\nimport {\n  getSubs,\n  addSub,\n  updateFavSub,\n} from '../redux/operations/subscribtionsOperations';\nimport { authSelector, idSelector } from '../redux/selectors/authSelectors';\nimport {\n  subsSelector,\n  subsLoadSelector,\n  addSubLoadSelector,\n  updateFavSubLoadSelector,\n} from '../redux/selectors/subscribtionSelectors';\nimport { START_PAGE, PER_PAGE_SUCBSCRIPTIONS_LIST } from '../helpers/constants';\nimport Pagination from '../Components/SteamList/Pagination';\n\nconst filterSubs = (arr, query = '') =>\n  arr.filter(\n    el =>\n      el.name.toLowerCase().includes(query.toLowerCase()) ||\n      el.userID === query,\n  );\n\nclass Subscribers extends Component {\n  state = {\n    query: '',\n    showFavorites: false,\n    onChangeText: 'Show favourites',\n    perPage: PER_PAGE_SUCBSCRIPTIONS_LIST,\n    currentPage: START_PAGE,\n  };\n\n  componentDidMount() {\n    const { isAuth, getSubs, ownerId } = this.props;\n    if (!isAuth) return;\n    getSubs(ownerId);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { isAuth, getSubs, ownerId } = this.props;\n    const { query } = this.state;\n\n    if (prevProps.isAuth !== isAuth && isAuth) {\n      getSubs(ownerId);\n    }\n\n    if (prevState.query !== query) {\n      this.handleChangePageOnFilter();\n    }\n  }\n\n  handleChangePageOnFilter = () => {\n    const { currentPage } = this.state;\n    if (currentPage > this.maxPage()) {\n      this.setState({ currentPage: this.maxPage() });\n    }\n    if (currentPage < 1) {\n      this.setState({ currentPage: 1 });\n    }\n  };\n\n  maxPage = () => {\n    return Math.ceil(\n      this.renderSubsList().length / PER_PAGE_SUCBSCRIPTIONS_LIST,\n    );\n  };\n\n  handleSubmit = sub => {\n    const { isAuth, addSub, subs, ownerId } = this.props;\n    if (!isAuth) return;\n    console.log(ownerId);\n    const subAlreadyExists = subs.find(\n      el =>\n        el.name.toLowerCase().trim() === sub.name.toLocaleLowerCase().trim() ||\n        el.userID === sub.userID.trim(),\n    );\n\n    if (subAlreadyExists) {\n      toastError();\n    } else {\n      const subToAdd = {\n        favorite: false,\n        date: `${new Date().toLocaleDateString()} ${new Date().toLocaleTimeString()}`,\n        ...sub,\n        ownerId,\n      };\n\n      addSub(subToAdd).then(res => {\n        if (!res) return;\n\n        toastSuccess(subs.length + 1);\n      });\n    }\n  };\n\n  handleFilterSubs = e => this.setState({ query: e.target.value });\n\n  filterFavorites = () => this.props.subs.filter(el => el.favorite);\n\n  showFavorites = () =>\n    this.setState(state => ({\n      showFavorites: !state.showFavorites,\n      onChangeText: state.showFavorites ? 'Show favourites' : 'Show all',\n    }));\n\n  handleFavoriteChange = (id, favorite) => {\n    const { updateFavSub } = this.props;\n    updateFavSub(id, { favorite: !favorite });\n  };\n\n  filteredSubs = (subs, query) => filterSubs(subs, query);\n\n  showTotalAmmountOfSubs = () => {\n    const { subs } = this.props;\n    const { showFavorites, query } = this.state;\n\n    return showFavorites\n      ? this.filteredSubs(this.filterFavorites(), query).length\n      : this.filteredSubs(subs, query).length;\n  };\n\n  renderSubsList = () => {\n    const { subs } = this.props;\n    const { showFavorites, query } = this.state;\n\n    return showFavorites\n      ? this.filteredSubs(this.filterFavorites(), query)\n      : this.filteredSubs(subs, query);\n  };\n\n  handleChangePage = name => {\n    this.setState(state => ({\n      currentPage:\n        name === 'next' ? state.currentPage + 1 : state.currentPage - 1,\n    }));\n  };\n\n  renderPaginationList = () => {\n    const { currentPage, perPage } = this.state;\n    const list = [...this.renderSubsList().reverse()];\n\n    const indexOfLastSub = currentPage * perPage;\n    const indexOfFirstSub = indexOfLastSub - perPage;\n    return list.slice(indexOfFirstSub, indexOfLastSub);\n  };\n\n  render() {\n    const { query, onChangeText, currentPage } = this.state;\n    const { subsLoad } = this.props;\n\n    return (\n      <div>\n        {subsLoad && (\n          <CircularProgress\n            className=\"material-subs-loader\"\n            color=\"secondary\"\n          />\n        )}\n\n        <SteamForm\n          handleSubmit={this.handleSubmit}\n          query={query}\n          handleFilterSubs={this.handleFilterSubs}\n          showFavorites={this.showFavorites}\n          onChangeText={onChangeText}\n        />\n\n        <div className=\"subs-length-wrap\">\n          <p className=\"subs-length-text\">\n            Total length: {this.showTotalAmmountOfSubs()}\n          </p>\n        </div>\n        <SteamList\n          subscribers={this.renderPaginationList()}\n          handleFavChange={this.handleFavoriteChange}\n        />\n\n        {this.renderSubsList().length > 20 && (\n          <Pagination\n            currentPage={currentPage}\n            maxPage={this.maxPage}\n            handleChangePage={this.handleChangePage}\n          />\n        )}\n\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n\nSubscribers.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  getSubs: PropTypes.func.isRequired,\n  addSub: PropTypes.func.isRequired,\n  subs: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  updateFavSub: PropTypes.func.isRequired,\n  subsLoad: PropTypes.bool.isRequired,\n  ownerId: PropTypes.string.isRequired,\n};\n\nconst mapSTP = state => ({\n  isAuth: authSelector(state),\n  subs: subsSelector(state),\n  subsLoad: subsLoadSelector(state),\n  addSubLoad: addSubLoadSelector(state),\n  updFavSubLoad: updateFavSubLoadSelector(state),\n  ownerId: idSelector(state),\n});\n\nconst mDTP = {\n  getSubs,\n  addSub,\n  updateFavSub,\n};\n\nexport default connect(\n  mapSTP,\n  mDTP,\n)(Subscribers);\n","import setAuthToken from '../../helpers/setAuthToken';\nimport {\n  subsRequestStart,\n  subsRequestSuccess,\n  subsRequestError,\n  addSubRequest,\n  addSubSuccess,\n  addSubError,\n  updateFavSubStart,\n  updateFavSubSuccess,\n  updateFavSubError,\n} from '../actions/subscribtionActions';\nimport { getSubsApi, postSubApi, updateFavApi } from '../../services/subsApi';\nimport { tokenSelector } from '../selectors/authSelectors';\n\nexport const getSubs = id => async (dispatch, getState) => {\n  const token = tokenSelector(getState());\n  if (!token) return;\n  setAuthToken(token);\n  dispatch(subsRequestStart());\n  try {\n    const subs = await getSubsApi(id);\n    dispatch(subsRequestSuccess(subs));\n  } catch (err) {\n    console.error(`error while getting subs: ${err}`);\n    dispatch(subsRequestError(err));\n  }\n};\n\nexport const addSub = sub => async (dispatch, getState) => {\n  const token = tokenSelector(getState());\n  if (!token) return;\n  setAuthToken(token);\n  dispatch(addSubRequest());\n  try {\n    const newSub = await postSubApi(sub);\n    /* eslint-disable-next-line */\n    return dispatch(addSubSuccess(newSub));\n  } catch (err) {\n    console.error(`error while adding sub: ${err}`);\n    dispatch(addSubError(err));\n  }\n};\n\nexport const updateFavSub = (id, favorite) => async (dispatch, getState) => {\n  const token = tokenSelector(getState());\n  if (!token) return;\n  setAuthToken(token);\n  dispatch(updateFavSubStart());\n  try {\n    const sub = await updateFavApi(id, favorite);\n    dispatch(updateFavSubSuccess(sub));\n  } catch (err) {\n    dispatch(updateFavSubError(err));\n    console.error(`error while updating favorite sub: ${err}`);\n  }\n};\n"],"sourceRoot":""}