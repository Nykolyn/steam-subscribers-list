{"version":3,"sources":["Components/Buttons/JellyButton.js","redux/selectors/subscribtionSelectors.js","Components/SteamList/SteamForm.js","services/subsApi.js","Components/SteamList/SteamItem.js","redux/operations/subscribtionsOperations.js","Components/SteamList/SteamList.js","helpers/constants.js","Components/SteamList/SubsInfo.js","Pages/Subscribers.js"],"names":["JellyButton","_ref","text","onClick","type","loading","react_default","a","createElement","className","defaultProps","subsSelector","state","subscribtions","subs","subsLoadSelector","getSubs","addSubLoadSelector","addSub","isSameDaySelector","date","sameDayAdded","isSameWeekSelector","sameWeekAdded","isSameMonthSelector","sameMonthAdded","toastError","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","toastSuccess","length","success","concat","SteamForm","name","userID","warn","handleInputChange","_ref$target","target","value","_this","setState","Object","defineProperty","handleFormSubmit","e","preventDefault","_this$state","trim","includes","props","handleSubmit","_this$state2","this","_this$props","handleFilterSubs","query","showFavorites","onChangeText","onReset","onSubmit","autoComplete","onChange","placeholder","autoFocus","react_toastify","newestOnTop","rtl","pauseOnVisibilityChange","Component","connect","styled","div","_templateObject","URL","process","getSubsApi","id","axios","get","then","response","data","postSubApi","sub","post","newSub","updateSubApi","_id","objectWithoutProperties","patch","updatedSub","SteamItem","visitedAt","favorite","updateSub","_useState","useState","_useState2","slicedToArray","setLoading","_useState3","_useState4","loadingVisitedAt","setLoadingVisitedAt","handleUpdateFavSub","_ref2","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","setTimeout","stop","apply","arguments","handleUpdateVisitedAt","_ref3","_callee2","_context2","Date","toLocaleDateString","toLocaleTimeString","Fragment","timeAgo","IconButton","disabled","Refresh_default","style","color","react_spinners","src","alt","mDTP","_callee3","dispatch","getState","token","_context3","tokenSelector","abrupt","setAuthToken","subsActions","sent","t0","console","_x5","_x6","LoaderWrapper","SteamList_templateObject","StyledTable","table","_templateObject2","TableContent","_templateObject3","addSubLoading","subscribers","useEffect","CircularProgress","map","SteamList_SteamItem","assign","key","START_PAGE","PER_PAGE_SUCBSCRIPTIONS_LIST","SubsInfo","showTotalAmmountOfSubs","Content","SubsInfo_templateObject","lastYearAdded","selectors","filterSubs","arr","undefined","filter","el","toLowerCase","Subscribers","perPage","currentPage","resetFilter","handleChangePageOnFilter","maxPage","Math","ceil","renderSubsList","isAuth","ownerId","find","toLocaleLowerCase","objectSpread","res","filterFavorites","filteredSubs","handleChangePage","renderPaginationList","_this$state3","indexOfLastSub","indexOfFirstSub","toConsumableArray","reverse","slice","prevProps","prevState","_this$props2","_this$state4","subsLoad","Subscribers_Content","Form","SteamList_SteamForm","SteamList_SubsInfo","List","Components_SteamList_SteamList","PaginationBlock","pagination","showQuickJumper","defaultCurrent","Number","defaultPageSize","total","Subscribers_templateObject","Subscribers_templateObject2","Subscribers_templateObject3","_templateObject4","_x","_x2","_x3","_x4","authSelector","addSubLoad","idSelector"],"mappings":"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","file":"static/js/9.2e19c458.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst JellyButton = ({ text, onClick, type, loading }) => (\n  <button type={type} className=\"jelly-button\" onClick={onClick}>\n    {loading ? (\n      <p className=\"super-slide\">Loading...</p>\n    ) : (\n      <p className=\"super-slide\">{text}</p>\n    )}\n  </button>\n);\n\nJellyButton.defaultProps = {\n  onClick: null,\n  loading: false,\n};\n\nJellyButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n  loading: PropTypes.bool,\n};\n\nexport default JellyButton;\n","export const subsSelector = state => state.subscribtions.subs;\nexport const subsLoadSelector = state => state.subscribtions.loading.getSubs;\nexport const addSubLoadSelector = state => state.subscribtions.loading.addSub;\nexport const updateFavSubLoadSelector = state =>\n  state.subscribtions.loading.updateFavSub;\n\nexport const isSameDaySelector = state => state.subscribtions.date.sameDayAdded;\nexport const isSameWeekSelector = state =>\n  state.subscribtions.date.sameWeekAdded;\nexport const isSameMonthSelector = state =>\n  state.subscribtions.date.sameMonthAdded;\nexport const lastYearSelector = state => state.subscribtions.date.lastYearAdded;\n","/* eslint-disable */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport JellyButton from '../Buttons/JellyButton';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport IconButton from '@material-ui/core/IconButton';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { addSubLoadSelector } from '../../redux/selectors/subscribtionSelectors';\n\nexport const toastError = () =>\n  toast.error('🤪 Sub already exists', {\n    position: 'top-center',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n  });\n\nexport const toastSuccess = length =>\n  toast.success(`🤟 Sub added! Total ammout:  ${length}`, {\n    position: 'top-right',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n  });\n\nclass SteamForm extends Component {\n  static propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n    handleFilterSubs: PropTypes.func.isRequired,\n    query: PropTypes.string.isRequired,\n    showFavorites: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    userID: '',\n  };\n\n  warn = text =>\n    toast.warn(`😤😤😤 ${text ? text : 'Fill the field!!!'} `, {\n      position: 'top-left',\n      autoClose: 2000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n    });\n\n  handleInputChange = ({ target: { name, value } }) =>\n    this.setState({ [name]: value });\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n    const { name, userID } = this.state;\n    if (name.trim() === '' || userID.trim() === '') return this.warn();\n    if (userID.includes('/')) return this.warn('Forgot to remove \"/\" ');\n    this.props.handleSubmit(this.state);\n    return this.setState({ name: '', userID: '' });\n  };\n\n  render() {\n    const { name, userID } = this.state;\n    const {\n      handleFilterSubs,\n      query,\n      showFavorites,\n      onChangeText,\n      loading,\n      onReset,\n    } = this.props;\n    return (\n      <form onSubmit={this.handleFormSubmit} className=\"sub-form\">\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={name}\n          name=\"name\"\n          onChange={this.handleInputChange}\n          className=\"sub-form__input\"\n          placeholder=\"Add sub here\"\n        />\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={userID}\n          name=\"userID\"\n          onChange={this.handleInputChange}\n          className=\"sub-form__input\"\n          placeholder=\"User id\"\n        />\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={query}\n          // onBlur={() => onReset()}\n          autoFocus\n          placeholder={'filter sub here'}\n          name=\"query\"\n          onChange={handleFilterSubs}\n          className=\"sub-form__input\"\n        />\n        <div className=\"multi-button\">\n          <button type=\"submit\">{loading ? 'Loading...' : 'Add'}</button>\n          <button\n            text={onChangeText}\n            type=\"button\"\n            onClick={() => showFavorites()}\n          >\n            {onChangeText}\n          </button>\n        </div>\n        {/* <ButtonWrapper>\n          <JellyButton text=\"Add new sub\" loading={loading} type=\"submit\" />\n          <JellyButton\n            text={onChangeText}\n            type=\"button\"\n            onClick={() => showFavorites()}\n          />\n        </ButtonWrapper> */}\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={4000}\n          hideProgressBar={false}\n          newestOnTop\n          closeOnClick\n          rtl={false}\n          pauseOnVisibilityChange\n          draggable\n          pauseOnHover\n        />\n      </form>\n    );\n  }\n}\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n`;\n\nSteamForm.propTypes = {\n  loading: PropTypes.bool.isRequired,\n};\n\nconst mSTP = state => ({\n  loading: addSubLoadSelector(state),\n});\n\nexport default connect(mSTP)(SteamForm);\n","import axios from 'axios';\n\nconst URL = process.env.REACT_APP_URL;\n// const URL = 'http://localhost:5678';\n\nexport const getSubsApi = id =>\n  axios.get(`${URL}/subscribers/${id}`).then(response => response.data.subs);\n\nexport const postSubApi = sub =>\n  axios.post(`${URL}/subscribers`, sub).then(response => response.data.newSub);\n\nexport const updateSubApi = ({ _id, ...sub }) =>\n  axios\n    .patch(`${URL}/subscribers/updateSub/${_id}`, sub)\n    .then(response => response.data.updatedSub);\n","import React, { useState } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { ClipLoader } from 'react-spinners';\n\nimport { updateSub } from '../../redux/operations/subscribtionsOperations';\nimport { timeAgo } from '../../helpers/dateDiff';\n\nconst SteamItem = ({ _id, name, date, visitedAt, favorite, updateSub }) => {\n  const [loading, setLoading] = useState(false);\n  const [loadingVisitedAt, setLoadingVisitedAt] = useState(false);\n\n  const handleUpdateFavSub = async () => {\n    setLoading(true);\n\n    await updateSub({ _id, favorite: !favorite });\n\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  };\n\n  const handleUpdateVisitedAt = async () => {\n    setLoadingVisitedAt(true);\n\n    await updateSub({\n      _id,\n      visitedAt: `${new Date().toLocaleDateString()} ${new Date().toLocaleTimeString()}`,\n    });\n\n    setLoadingVisitedAt(false);\n  };\n\n  return (\n    <tr className=\"subs-row\">\n      <td className=\"subs-row__item item_name\">{name}</td>\n      <td className=\"subs-row__item item_date_visited\">\n        {visitedAt ? (\n          <>\n            {timeAgo(visitedAt)}\n            <IconButton\n              disabled={loadingVisitedAt}\n              onClick={handleUpdateVisitedAt}\n            >\n              <RefreshIcon style={{ color: 'white' }} />\n            </IconButton>\n          </>\n        ) : (\n          <>\n            - ,\n            <IconButton\n              disabled={loadingVisitedAt}\n              onClick={handleUpdateVisitedAt}\n            >\n              <RefreshIcon style={{ color: 'white' }} />\n            </IconButton>\n          </>\n        )}\n      </td>\n      <td className=\"subs-row__item item_date_added\">\n        {`${timeAgo(date)}, ${date}`}\n      </td>\n      <td className=\"subs-row__item item_favorite\">\n        <button\n          type=\"button\"\n          className=\"image-wrapper\"\n          onClick={() => handleUpdateFavSub()}\n        >\n          {loading ? (\n            <ClipLoader color=\"#fff\" loading={loading} />\n          ) : (\n            <img\n              className=\"item-image\"\n              src={\n                favorite\n                  ? 'https://image.flaticon.com/icons/svg/148/148838.svg'\n                  : 'https://image.flaticon.com/icons/svg/149/149219.svg'\n              }\n              alt=\"fav\"\n            />\n          )}\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nSteamItem.defaultProps = {\n  favorite: false,\n};\n\nSteamItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  _id: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  favorite: PropTypes.bool,\n  updateSub: PropTypes.func.isRequired,\n};\n\nconst mDTP = {\n  updateSub,\n};\n\nexport default connect(\n  null,\n  mDTP,\n)(SteamItem);\n","import setAuthToken from '../../helpers/setAuthToken';\nimport * as subsActions from '../actions/subscribtionActions';\nimport { getSubsApi, postSubApi, updateSubApi } from '../../services/subsApi';\nimport { tokenSelector } from '../selectors/authSelectors';\n\n/* eslint-disable */\nexport const getSubs = id => async (dispatch, getState) => {\n  const token = tokenSelector(getState());\n  if (!token) return;\n  setAuthToken(token);\n  dispatch(subsActions.subsRequestStart());\n  try {\n    const subs = await getSubsApi(id);\n    dispatch(subsActions.subsRequestSuccess(subs));\n  } catch (err) {\n    console.error(`error while getting subs: ${err}`);\n    dispatch(subsActions.subsRequestError(err));\n  }\n};\n\nexport const addSub = sub => async (dispatch, getState) => {\n  const token = tokenSelector(getState());\n  if (!token) return;\n  setAuthToken(token);\n  dispatch(subsActions.addSubRequest());\n\n  try {\n    const newSub = await postSubApi(sub);\n    return dispatch(subsActions.addSubSuccess(newSub));\n  } catch (err) {\n    console.error(`error while adding sub: ${err}`);\n    dispatch(subsActions.addSubError(err));\n  }\n};\n\nexport const updateSub = sub => async (dispatch, getState) => {\n  const token = tokenSelector(getState());\n  if (!token) return;\n  setAuthToken(token);\n  dispatch(subsActions.updateSubStart());\n  try {\n    const updatedSub = await updateSubApi(sub);\n    return await dispatch(subsActions.updateSubSuccess(updatedSub));\n  } catch (err) {\n    dispatch(subsActions.updateSubError(err));\n    console.error(`error while updating sub: ${err}`);\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PropTypes from 'prop-types';\nimport SteamItem from './SteamItem';\nimport { addSubLoadSelector } from '../../redux/selectors/subscribtionSelectors';\n\nconst SteamList = ({ subscribers, addSubLoading }) => {\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (addSubLoading) {\n      return setLoading(true);\n    }\n\n    return setLoading(false);\n  }, [addSubLoading]);\n\n  return (\n    subscribers.length > 0 && (\n      <div>\n        {loading && (\n          <LoaderWrapper>\n            <CircularProgress />\n          </LoaderWrapper>\n        )}\n        <StyledTable>\n          <tbody>\n            <tr className=\"subs-head\">\n              <th className=\"subs-head__item item_name\">Name</th>\n              <th className=\"subs-head__item item_date_visited\">\n                Last Visited\n              </th>\n              <th className=\"subs-head__item item_date_added\">Date Added</th>\n              <th className=\"subs-head__item item_favorite\">Favorite</th>\n            </tr>\n          </tbody>\n        </StyledTable>\n        <TableContent>\n          <StyledTable>\n            <tbody className=\"subs-body\">\n              {subscribers.map(sub => (\n                <SteamItem key={sub.userID} {...sub} />\n              ))}\n            </tbody>\n          </StyledTable>\n        </TableContent>\n      </div>\n    )\n  );\n};\n\nconst LoaderWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst StyledTable = styled.table`\n  width: 100%;\n  font-size: 20px;\n  padding: 2rem;\n  color: #fff;\n  margin: 10px auto;\n`;\n\nconst TableContent = styled.div`\n  width: 100%;\n  height: calc(100vh - 200px);\n  overflow-y: auto;\n  overflow-x: hidden;\n  margin-bottom: 10px;\n\n  /* width */\n  ::-webkit-scrollbar {\n    width: 2px;\n  }\n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    background: transparent;\n  }\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: #888;\n  }\n\n  /* Handle on hover */\n  ::-webkit-scrollbar-thumb:hover {\n    background: #555;\n  }\n`;\n\nSteamList.propTypes = {\n  subscribers: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  addSubLoading: PropTypes.bool.isRequired,\n};\n\nconst mSTP = state => ({\n  addSubLoading: addSubLoadSelector(state),\n});\n\nexport default connect(mSTP)(SteamList);\n","export const START_PAGE = 1;\nexport const PER_PAGE_SUCBSCRIPTIONS_LIST = 20;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport * as selectors from '../../redux/selectors/subscribtionSelectors';\n\nfunction SubsInfo({\n  showTotalAmmountOfSubs,\n  sameDayAdded,\n  sameWeekAdded,\n  sameMonthAdded,\n}) {\n  return (\n    <div className=\"subs-length-wrap\">\n      <Content>\n        <p className=\"subs-length-text\">Today added:</p>\n        <span className=\"subs-length-text__num\">{sameDayAdded}</span>\n      </Content>\n      <Content>\n        <p className=\"subs-length-text\">Added this week:</p>\n        <span className=\"subs-length-text__num\">{sameWeekAdded}</span>\n      </Content>\n      <Content>\n        <p className=\"subs-length-text\">Added this month:</p>\n        <span className=\"subs-length-text__num\">{sameMonthAdded}</span>\n      </Content>\n      <Content>\n        <p className=\"subs-length-text\">Total:</p>\n        <span className=\"subs-length-text__num\">{showTotalAmmountOfSubs}</span>\n      </Content>\n    </div>\n  );\n}\n\nconst Content = styled.div`\n  display: flex;\n  padding: 14px;\n  border-radius: 10px;\n  transition: all 0.4s;\n  align-items: center;\n  margin-bottom: 10px;\n  font-size: 24px;\n  justify-content: space-between;\n  width: 100%;\n  color: rgba(156, 146, 146, 0.616);\n  &:hover {\n    color: white;\n    transform: translateX(-10px) scale(1.1) rotateX(10deg);\n    box-shadow: 6px 6px 11px -2px rgba(107, 107, 107, 1);\n  }\n`;\n\nSubsInfo.defaultProps = {\n  lastYearAdded: 0,\n};\n\nSubsInfo.propTypes = {\n  showTotalAmmountOfSubs: PropTypes.number.isRequired,\n  sameDayAdded: PropTypes.number.isRequired,\n  sameWeekAdded: PropTypes.number.isRequired,\n  sameMonthAdded: PropTypes.number.isRequired,\n};\n\nconst mSTP = state => ({\n  sameDayAdded: selectors.isSameDaySelector(state),\n  sameWeekAdded: selectors.isSameWeekSelector(state),\n  sameMonthAdded: selectors.isSameMonthSelector(state),\n});\n\nexport default connect(mSTP)(SubsInfo);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport styled from 'styled-components';\nimport { Pagination } from 'antd';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport SteamForm, {\n  toastError,\n  toastSuccess,\n} from '../Components/SteamList/SteamForm';\nimport SteamList from '../Components/SteamList/SteamList';\nimport { getSubs, addSub } from '../redux/operations/subscribtionsOperations';\nimport { authSelector, idSelector } from '../redux/selectors/authSelectors';\nimport {\n  subsSelector,\n  subsLoadSelector,\n  addSubLoadSelector,\n} from '../redux/selectors/subscribtionSelectors';\nimport { START_PAGE, PER_PAGE_SUCBSCRIPTIONS_LIST } from '../helpers/constants';\nimport SubsInfo from '../Components/SteamList/SubsInfo';\n\nconst filterSubs = (arr, query = '') =>\n  arr.filter(\n    el =>\n      el.name.toLowerCase().includes(query.toLowerCase()) ||\n      el.userID === query,\n  );\n\nclass Subscribers extends Component {\n  state = {\n    query: '',\n    showFavorites: false,\n    onChangeText: 'Show favourites',\n    perPage: PER_PAGE_SUCBSCRIPTIONS_LIST,\n    currentPage: START_PAGE,\n  };\n  /* eslint-disable */\n\n  componentDidUpdate(prevProps, prevState) {\n    const { query } = this.state;\n    const { ownerId, getSubs } = this.props;\n\n    if (prevProps.ownerId !== ownerId) {\n      getSubs(ownerId);\n    }\n\n    if (prevState.query !== query) {\n      this.handleChangePageOnFilter();\n    }\n  }\n\n  resetFilter = () => this.setState({ query: '' });\n\n  handleChangePageOnFilter = () => {\n    const { currentPage } = this.state;\n    if (currentPage > this.maxPage()) {\n      this.setState({ currentPage: this.maxPage() });\n    }\n    if (currentPage < 1) {\n      this.setState({ currentPage: 1 });\n    }\n  };\n\n  maxPage = () => {\n    return Math.ceil(\n      this.renderSubsList().length / PER_PAGE_SUCBSCRIPTIONS_LIST,\n    );\n  };\n\n  handleSubmit = sub => {\n    const { isAuth, addSub, subs, ownerId } = this.props;\n    if (!isAuth) return;\n    const subAlreadyExists = subs.find(\n      el =>\n        el.name.toLowerCase().trim() === sub.name.toLocaleLowerCase().trim() ||\n        el.userID === sub.userID.trim(),\n    );\n\n    if (subAlreadyExists) {\n      toastError();\n    } else {\n      const subToAdd = {\n        favorite: false,\n        date: `${new Date().toLocaleDateString()} ${new Date().toLocaleTimeString()}`,\n        visitedAt: `${new Date().toLocaleDateString()} ${new Date().toLocaleTimeString()}`,\n        ...sub,\n        ownerId,\n      };\n\n      addSub(subToAdd).then(res => {\n        if (!res) return toastError();\n\n        return toastSuccess(subs.length + 1);\n      });\n    }\n  };\n\n  handleFilterSubs = e => this.setState({ query: e.target.value });\n\n  filterFavorites = () => this.props.subs.filter(el => el.favorite);\n\n  showFavorites = () =>\n    this.setState(state => ({\n      showFavorites: !state.showFavorites,\n      onChangeText: state.showFavorites ? 'Favorites' : 'All',\n    }));\n\n  filteredSubs = (subs, query) => filterSubs(subs, query);\n\n  showTotalAmmountOfSubs = () => {\n    const { subs } = this.props;\n    const { showFavorites, query } = this.state;\n\n    return showFavorites\n      ? this.filteredSubs(this.filterFavorites(), query).length\n      : this.filteredSubs(subs, query).length;\n  };\n\n  renderSubsList = () => {\n    const { subs } = this.props;\n    const { showFavorites, query } = this.state;\n\n    return showFavorites\n      ? this.filteredSubs(this.filterFavorites(), query)\n      : this.filteredSubs(subs, query);\n  };\n\n  handleChangePage = name => {\n    this.setState({\n      currentPage: name,\n    });\n  };\n\n  renderPaginationList = () => {\n    const { currentPage, perPage } = this.state;\n    const list = [...this.renderSubsList().reverse()];\n\n    const indexOfLastSub = currentPage * perPage;\n    const indexOfFirstSub = indexOfLastSub - perPage;\n    return list.slice(indexOfFirstSub, indexOfLastSub);\n  };\n\n  render() {\n    const { query, onChangeText, perPage, currentPage } = this.state;\n    const { subsLoad } = this.props;\n    return (\n      <Content>\n        {subsLoad && <div className=\"rainbow-marker-loader\" />}\n\n        <Form>\n          <SteamForm\n            handleSubmit={this.handleSubmit}\n            query={query}\n            handleFilterSubs={this.handleFilterSubs}\n            showFavorites={this.showFavorites}\n            onChangeText={onChangeText}\n            onReset={this.resetFilter}\n          />\n\n          <SubsInfo showTotalAmmountOfSubs={this.showTotalAmmountOfSubs()} />\n        </Form>\n        <List>\n          <SteamList subscribers={this.renderPaginationList()} />\n\n          {this.renderSubsList().length > 0 && (\n            <PaginationBlock>\n              <Pagination\n                showQuickJumper\n                defaultCurrent={Number(currentPage)}\n                defaultPageSize={Number(perPage)}\n                total={this.renderSubsList().length}\n                onChange={this.handleChangePage}\n              />\n            </PaginationBlock>\n          )}\n          <ToastContainer />\n        </List>\n      </Content>\n    );\n  }\n}\n\nconst PaginationBlock = styled.div`\n  text-align: center;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 90%;\n  margin: 0 auto;\n  justify-content: space-between;\n`;\n\nconst Form = styled.div`\n  width: 30%;\n  /* margin: 0 auto; */\n  display: flex;\n  flex-direction: column;\n`;\n\nconst List = styled.div`\n  position: relative;\n  width: 66%;\n`;\n\nSubscribers.defaultProps = {\n  ownerId: null,\n};\n\nSubscribers.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  getSubs: PropTypes.func.isRequired,\n  addSub: PropTypes.func.isRequired,\n  subs: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  subsLoad: PropTypes.bool.isRequired,\n  ownerId: PropTypes.string,\n};\n\nconst mapSTP = state => ({\n  isAuth: authSelector(state),\n  subs: subsSelector(state),\n  subsLoad: subsLoadSelector(state),\n  addSubLoad: addSubLoadSelector(state),\n  ownerId: idSelector(state),\n});\n\nconst mDTP = {\n  getSubs,\n  addSub,\n};\n\nexport default connect(\n  mapSTP,\n  mDTP,\n)(Subscribers);\n"],"sourceRoot":""}