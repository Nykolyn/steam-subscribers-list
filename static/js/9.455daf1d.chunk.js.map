{"version":3,"sources":["Components/Buttons/JellyButton.js","redux/selectors/subscribtionSelectors.js","Components/SteamList/SteamForm.js","services/subsApi.js","Components/SteamList/SteamItem.js","redux/operations/subscribtionsOperations.js","Components/SteamList/SteamList.js","helpers/constants.js","Components/SteamList/SubsInfo.js","Pages/Subscribers.js"],"names":["JellyButton","_ref","text","onClick","type","loading","react_default","a","createElement","className","defaultProps","subsSelector","state","subscribtions","subs","subsLoadSelector","getSubs","addSubLoadSelector","addSub","isSameDaySelector","date","sameDayAdded","isSameWeekSelector","sameWeekAdded","isSameMonthSelector","sameMonthAdded","lastYearSelector","lastYearAdded","toastError","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","toastSuccess","length","success","concat","SteamForm","name","userID","warn","handleInputChange","_ref$target","target","value","_this","setState","Object","defineProperty","handleFormSubmit","e","preventDefault","_this$state","trim","includes","props","handleSubmit","_this$state2","this","_this$props","handleFilterSubs","query","showFavorites","onChangeText","onReset","onSubmit","autoComplete","onChange","placeholder","onBlur","autoFocus","ButtonWrapper","Buttons_JellyButton","react_toastify","newestOnTop","rtl","pauseOnVisibilityChange","Component","styled","div","_templateObject","connect","URL","process","getSubsApi","id","axios","get","then","response","data","postSubApi","sub","post","newSub","updateFavApi","patch","updatedSub","SteamItem","_id","favorite","updateFavSub","_useState","useState","_useState2","slicedToArray","setLoading","handleUpdateFavSub","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","wrap","_context2","prev","next","setTimeout","_callee","_context","stop","apply","arguments","timeAgo","react_spinners","color","src","alt","mDTP","_ref3","_callee3","dispatch","getState","token","_context3","tokenSelector","abrupt","setAuthToken","updateFavSubStart","sent","updateFavSubSuccess","t0","updateFavSubError","console","_x5","_x6","StyledTable","table","SteamList_templateObject","TableContent","_templateObject2","addSubLoading","subscribers","useEffect","map","SteamList_SteamItem","assign","key","START_PAGE","PER_PAGE_SUCBSCRIPTIONS_LIST","SubsInfo","showTotalAmmountOfSubs","Content","SubsInfo_templateObject","selectors","filterSubs","arr","undefined","filter","el","toLowerCase","Subscribers","perPage","currentPage","resetFilter","handleChangePageOnFilter","maxPage","Math","ceil","renderSubsList","isAuth","ownerId","find","toLocaleLowerCase","objectSpread","Date","toLocaleDateString","toLocaleTimeString","res","filterFavorites","filteredSubs","handleChangePage","renderPaginationList","_this$state3","indexOfLastSub","indexOfFirstSub","toConsumableArray","reverse","slice","_this$props2","prevProps","prevState","log","_this$state4","subsLoad","Subscribers_Content","Form","SteamList_SteamForm","SteamList_SubsInfo","List","Components_SteamList_SteamList","PaginationBlock","pagination","showQuickJumper","defaultCurrent","defaultPageSize","total","Subscribers_templateObject","Subscribers_templateObject2","_templateObject3","_templateObject4","subsRequestStart","subsRequestSuccess","subsRequestError","_x","_x2","addSubRequest","addSubSuccess","addSubError","_x3","_x4","authSelector","addSubLoad","idSelector"],"mappings":"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","file":"static/js/9.455daf1d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst JellyButton = ({ text, onClick, type, loading }) => (\n  <button type={type} className=\"jelly-button\" onClick={onClick}>\n    {loading ? (\n      <p className=\"super-slide\">Loading...</p>\n    ) : (\n      <p className=\"super-slide\">{text}</p>\n    )}\n  </button>\n);\n\nJellyButton.defaultProps = {\n  onClick: null,\n  loading: false,\n};\n\nJellyButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n  loading: PropTypes.bool,\n};\n\nexport default JellyButton;\n","export const subsSelector = state => state.subscribtions.subs;\nexport const subsLoadSelector = state => state.subscribtions.loading.getSubs;\nexport const addSubLoadSelector = state => state.subscribtions.loading.addSub;\nexport const updateFavSubLoadSelector = state =>\n  state.subscribtions.loading.updateFavSub;\n\nexport const isSameDaySelector = state => state.subscribtions.date.sameDayAdded;\nexport const isSameWeekSelector = state =>\n  state.subscribtions.date.sameWeekAdded;\nexport const isSameMonthSelector = state =>\n  state.subscribtions.date.sameMonthAdded;\nexport const lastYearSelector = state => state.subscribtions.date.lastYearAdded;\n","/* eslint-disable */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport JellyButton from '../Buttons/JellyButton';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport IconButton from '@material-ui/core/IconButton';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { addSubLoadSelector } from '../../redux/selectors/subscribtionSelectors';\n\nexport const toastError = () =>\n  toast.error('🤪 Sub already exists', {\n    position: 'top-center',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n  });\n\nexport const toastSuccess = length =>\n  toast.success(`🤟 Sub added! Total ammout:  ${length}`, {\n    position: 'top-right',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n  });\n\nclass SteamForm extends Component {\n  static propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n    handleFilterSubs: PropTypes.func.isRequired,\n    query: PropTypes.string.isRequired,\n    showFavorites: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    userID: '',\n  };\n\n  warn = text =>\n    toast.warn(`😤😤😤 ${text ? text : 'Fill the field!!!'} `, {\n      position: 'top-left',\n      autoClose: 2000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n    });\n\n  handleInputChange = ({ target: { name, value } }) =>\n    this.setState({ [name]: value });\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n    const { name, userID } = this.state;\n    if (name.trim() === '' || userID.trim() === '') return this.warn();\n    if (userID.includes('/')) return this.warn('Forgot to remove \"/\" ');\n    this.props.handleSubmit(this.state);\n    return this.setState({ name: '', userID: '' });\n  };\n\n  render() {\n    const { name, userID } = this.state;\n    const {\n      handleFilterSubs,\n      query,\n      showFavorites,\n      onChangeText,\n      loading,\n      onReset,\n    } = this.props;\n    return (\n      <form onSubmit={this.handleFormSubmit} className=\"sub-form\">\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={name}\n          name=\"name\"\n          onChange={this.handleInputChange}\n          className=\"sub-form__input\"\n          placeholder=\"Add sub here\"\n        />\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={userID}\n          name=\"userID\"\n          onChange={this.handleInputChange}\n          className=\"sub-form__input\"\n          placeholder=\"User id\"\n        />\n          <input\n            type=\"text\"\n            autoComplete=\"off\"\n            value={query}\n            onBlur={() => onReset()}\n            autoFocus\n            placeholder={'filter sub here'}\n            name=\"query\"\n            onChange={handleFilterSubs}\n            className=\"sub-form__input\"\n          />\n        <ButtonWrapper>\n          <JellyButton text=\"Add new sub\" loading={loading} type=\"submit\" />\n          <JellyButton\n            text={onChangeText}\n            type=\"button\"\n            onClick={() => showFavorites()}\n          />\n        </ButtonWrapper>\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={4000}\n          hideProgressBar={false}\n          newestOnTop\n          closeOnClick\n          rtl={false}\n          pauseOnVisibilityChange\n          draggable\n          pauseOnHover\n        />\n      </form>\n    );\n  }\n}\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n`;\n\nSteamForm.propTypes = {\n  loading: PropTypes.bool.isRequired,\n};\n\nconst mSTP = state => ({\n  loading: addSubLoadSelector(state),\n});\n\nexport default connect(mSTP)(SteamForm);\n","import axios from 'axios';\n\nconst URL = process.env.REACT_APP_URL;\n// const URL = 'http://localhost:5678';\n\nexport const getSubsApi = id =>\n  axios.get(`${URL}/subscribers/${id}`).then(response => response.data.subs);\n\nexport const postSubApi = sub =>\n  axios.post(`${URL}/subscribers`, sub).then(response => response.data.newSub);\n\nexport const updateFavApi = (id, sub) =>\n  axios\n    .patch(`${URL}/subscribers/updateSub/${id}`, sub)\n    .then(response => response.data.updatedSub);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { ClipLoader } from 'react-spinners';\n\nimport { updateFavSub } from '../../redux/operations/subscribtionsOperations';\nimport { timeAgo } from '../../helpers/dateDiff';\n\nconst SteamItem = ({ _id: id, name, date, favorite, updateFavSub }) => {\n  const [loading, setLoading] = useState(false);\n\n  const handleUpdateFavSub = async () => {\n    setLoading(true);\n\n    await updateFavSub(id, { favorite: !favorite });\n\n    setTimeout(async () => {\n      setLoading(false);\n    }, 1000);\n  };\n\n  return (\n    <tr className=\"subs-row\">\n      <td className=\"subs-row__item\">{name}</td>\n      <td className=\"subs-row__item\">Added: {`${timeAgo(date)}, ${date}`}</td>\n      <td className=\"subs-row__item\">\n        <button\n          type=\"button\"\n          className=\"image-wrapper\"\n          onClick={() => handleUpdateFavSub()}\n        >\n          {loading ? (\n            <ClipLoader color=\"#fff\" loading={loading} />\n          ) : (\n            <img\n              className=\"item-image\"\n              src={\n                favorite\n                  ? 'https://image.flaticon.com/icons/svg/148/148838.svg'\n                  : 'https://image.flaticon.com/icons/svg/149/149219.svg'\n              }\n              alt=\"fav\"\n            />\n          )}\n        </button>\n      </td>\n    </tr>\n  );\n\n  // return (\n  //   <>\n  //     <div>\n  //       <h2>{name}</h2>\n  //       <p className=\"item-date\">Added: {`${timeAgo(date)}, ${date}`}</p>\n  //     </div>\n  //     <button\n  //       className=\"image-wrapper\"\n  //       type=\"button\"\n  //       onClick={() => handleUpdateFavSub()}\n  //     >\n  //       {loading ? (\n  //         <ClipLoader color=\"#fff\" loading={loading} />\n  //       ) : (\n  //         <img\n  //           className=\"item-image\"\n  //           src={\n  //             favorite\n  //               ? 'https://image.flaticon.com/icons/svg/148/148838.svg'\n  //               : 'https://image.flaticon.com/icons/svg/149/149219.svg'\n  //           }\n  //           alt=\"fav\"\n  //         />\n  //       )}\n  //     </button>\n  //   </>\n  // );\n};\n\nSteamItem.defaultProps = {\n  favorite: false,\n};\n\nSteamItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  _id: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  favorite: PropTypes.bool,\n  updateFavSub: PropTypes.func.isRequired,\n};\n\nconst mDTP = {\n  updateFavSub,\n};\n\nexport default connect(\n  null,\n  mDTP,\n)(SteamItem);\n","import setAuthToken from '../../helpers/setAuthToken';\nimport {\n  subsRequestStart,\n  subsRequestSuccess,\n  subsRequestError,\n  addSubRequest,\n  addSubSuccess,\n  addSubError,\n  updateFavSubStart,\n  updateFavSubSuccess,\n  updateFavSubError,\n} from '../actions/subscribtionActions';\nimport { getSubsApi, postSubApi, updateFavApi } from '../../services/subsApi';\nimport { tokenSelector } from '../selectors/authSelectors';\n\n/* eslint-disable */\nexport const getSubs = id => async (dispatch, getState) => {\n  const token = tokenSelector(getState());\n  if (!token) return;\n  setAuthToken(token);\n  dispatch(subsRequestStart());\n  try {\n    const subs = await getSubsApi(id);\n    dispatch(subsRequestSuccess(subs));\n  } catch (err) {\n    console.error(`error while getting subs: ${err}`);\n    dispatch(subsRequestError(err));\n  }\n};\n\nexport const addSub = sub => async (dispatch, getState) => {\n  const token = tokenSelector(getState());\n  if (!token) return;\n  setAuthToken(token);\n  dispatch(addSubRequest());\n\n  try {\n    const newSub = await postSubApi(sub);\n    return dispatch(addSubSuccess(newSub));\n  } catch (err) {\n    console.error(`error while adding sub: ${err}`);\n    dispatch(addSubError(err));\n  }\n};\n\nexport const updateFavSub = (id, favorite) => async (dispatch, getState) => {\n  const token = tokenSelector(getState());\n  if (!token) return;\n  setAuthToken(token);\n  dispatch(updateFavSubStart());\n  try {\n    const sub = await updateFavApi(id, favorite);\n    return await dispatch(updateFavSubSuccess(sub));\n  } catch (err) {\n    dispatch(updateFavSubError(err));\n    console.error(`error while updating favorite sub: ${err}`);\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PropTypes from 'prop-types';\nimport SteamItem from './SteamItem';\nimport { addSubLoadSelector } from '../../redux/selectors/subscribtionSelectors';\n\nconst SteamList = ({ subscribers, addSubLoading }) => {\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (addSubLoading) {\n      return setLoading(true);\n    }\n\n    return setLoading(false);\n  }, [addSubLoading]);\n\n  return (\n    subscribers.length > 0 && (\n      <div>\n        <StyledTable>\n          <tbody>\n            <tr className=\"subs-head\">\n              <th className=\"subs-head__item\">Name</th>\n              <th className=\"subs-head__item\">Date Added</th>\n              <th className=\"subs-head__item\">Favorite</th>\n            </tr>\n          </tbody>\n        </StyledTable>\n        <TableContent>\n          <StyledTable>\n            <tbody className=\"subs-body\">\n              {subscribers.map(sub => (\n                <SteamItem key={sub.userID} {...sub} />\n              ))}\n            </tbody>\n          </StyledTable>\n        </TableContent>\n      </div>\n    )\n  );\n};\n\nconst StyledTable = styled.table`\n  width: 100%;\n  font-size: 20px;\n  padding: 2rem;\n  color: #fff;\n  margin: 10px auto;\n`;\n\nconst TableContent = styled.div`\n  width: 100%;\n  max-height: calc(100vh - 200px);\n  overflow-y: auto;\n  overflow-x: hidden;\n  margin-bottom: 10px;\n\n  /* width */\n  ::-webkit-scrollbar {\n    width: 2px;\n  }\n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    background: transparent;\n  }\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: #888;\n  }\n\n  /* Handle on hover */\n  ::-webkit-scrollbar-thumb:hover {\n    background: #555;\n  }\n`;\n\n// const SteamList = ({ subscribers, addSubLoading }) => {\n//   const [loading, setLoading] = useState(false);\n\n//   useEffect(() => {\n//     if (addSubLoading) {\n//       return setLoading(true);\n//     }\n\n//     return setLoading(false);\n//   }, [addSubLoading]);\n\n//   return (\n//     <ul className=\"subs-list\">\n//       {loading && (\n//         <li className=\"subs-list__item--loader\">\n//           <CircularProgress />\n//         </li>\n//       )}\n//       {subscribers.map(sub => (\n//         <li key={sub.userID} className=\"subs-list__item\">\n//           <SteamItem {...sub} />\n//         </li>\n//       ))}\n//     </ul>\n//   );\n// };\n\nSteamList.propTypes = {\n  subscribers: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  addSubLoading: PropTypes.bool.isRequired,\n};\n\nconst mSTP = state => ({\n  addSubLoading: addSubLoadSelector(state),\n});\n\nexport default connect(mSTP)(SteamList);\n","export const START_PAGE = 1;\nexport const PER_PAGE_SUCBSCRIPTIONS_LIST = 20;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport * as selectors from '../../redux/selectors/subscribtionSelectors';\n\nfunction SubsInfo({\n  showTotalAmmountOfSubs,\n  sameDayAdded,\n  sameWeekAdded,\n  sameMonthAdded,\n  lastYearAdded,\n}) {\n  return (\n    <Content className=\"subs-length-wrap\">\n      <p className=\"subs-length-text\">\n        Today added:\n        <span className=\"subs-length-text__num\">{sameDayAdded}</span>\n      </p>\n      <p className=\"subs-length-text\">\n        Added this week:\n        <span className=\"subs-length-text__num\">{sameWeekAdded}</span>\n      </p>\n      <p className=\"subs-length-text\">\n        Added this month:\n        <span className=\"subs-length-text__num\">{sameMonthAdded}</span>\n      </p>\n      <p className=\"subs-length-text\">\n        Added last year:\n        <span className=\"subs-length-text__num\">{lastYearAdded}</span>\n      </p>\n      <p className=\"subs-length-text\">\n        Total:\n        <span className=\"subs-length-text__num\">{showTotalAmmountOfSubs}</span>\n      </p>\n    </Content>\n  );\n}\n\nconst Content = styled.div``;\n\nSubsInfo.defaultProps = {\n  lastYearAdded: 0,\n};\n\nSubsInfo.propTypes = {\n  showTotalAmmountOfSubs: PropTypes.number.isRequired,\n  sameDayAdded: PropTypes.number.isRequired,\n  sameWeekAdded: PropTypes.number.isRequired,\n  sameMonthAdded: PropTypes.number.isRequired,\n  lastYearAdded: PropTypes.number,\n};\n\nconst mSTP = state => ({\n  sameDayAdded: selectors.isSameDaySelector(state),\n  sameWeekAdded: selectors.isSameWeekSelector(state),\n  sameMonthAdded: selectors.isSameMonthSelector(state),\n  lastYearAdded: selectors.lastYearSelector(state),\n});\n\nexport default connect(mSTP)(SubsInfo);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport styled from 'styled-components';\nimport { Pagination } from 'antd';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport SteamForm, {\n  toastError,\n  toastSuccess,\n} from '../Components/SteamList/SteamForm';\nimport SteamList from '../Components/SteamList/SteamList';\nimport { getSubs, addSub } from '../redux/operations/subscribtionsOperations';\nimport { authSelector, idSelector } from '../redux/selectors/authSelectors';\nimport {\n  subsSelector,\n  subsLoadSelector,\n  addSubLoadSelector,\n} from '../redux/selectors/subscribtionSelectors';\nimport { START_PAGE, PER_PAGE_SUCBSCRIPTIONS_LIST } from '../helpers/constants';\n// import Pagination from '../Components/SteamList/Pagination';\nimport SubsInfo from '../Components/SteamList/SubsInfo';\n\nconst filterSubs = (arr, query = '') =>\n  arr.filter(\n    el =>\n      el.name.toLowerCase().includes(query.toLowerCase()) ||\n      el.userID === query,\n  );\n\nclass Subscribers extends Component {\n  state = {\n    query: '',\n    showFavorites: false,\n    onChangeText: 'Show favourites',\n    perPage: PER_PAGE_SUCBSCRIPTIONS_LIST,\n    currentPage: START_PAGE,\n  };\n\n  componentDidMount() {\n    const { isAuth, getSubs, ownerId } = this.props;\n    if (!isAuth) return;\n    getSubs(ownerId);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { query } = this.state;\n    const { subs } = this.props;\n\n    if (prevProps.subs !== subs && query) {\n      console.log('works');\n    }\n\n    if (prevState.query !== query) {\n      this.handleChangePageOnFilter();\n    }\n  }\n\n  resetFilter = () => this.setState({ query: '' });\n\n  handleChangePageOnFilter = () => {\n    const { currentPage } = this.state;\n    if (currentPage > this.maxPage()) {\n      this.setState({ currentPage: this.maxPage() });\n    }\n    if (currentPage < 1) {\n      this.setState({ currentPage: 1 });\n    }\n  };\n\n  maxPage = () => {\n    return Math.ceil(\n      this.renderSubsList().length / PER_PAGE_SUCBSCRIPTIONS_LIST,\n    );\n  };\n\n  handleSubmit = sub => {\n    const { isAuth, addSub, subs, ownerId } = this.props;\n    if (!isAuth) return;\n    const subAlreadyExists = subs.find(\n      el =>\n        el.name.toLowerCase().trim() === sub.name.toLocaleLowerCase().trim() ||\n        el.userID === sub.userID.trim(),\n    );\n\n    if (subAlreadyExists) {\n      toastError();\n    } else {\n      const subToAdd = {\n        favorite: false,\n        date: `${new Date().toLocaleDateString()} ${new Date().toLocaleTimeString()}`,\n        ...sub,\n        ownerId,\n      };\n\n      addSub(subToAdd).then(res => {\n        if (!res) return toastError();\n\n        return toastSuccess(subs.length + 1);\n      });\n    }\n  };\n\n  handleFilterSubs = e => this.setState({ query: e.target.value });\n\n  filterFavorites = () => this.props.subs.filter(el => el.favorite);\n\n  showFavorites = () =>\n    this.setState(state => ({\n      showFavorites: !state.showFavorites,\n      onChangeText: state.showFavorites ? 'Show favourites' : 'Show all',\n    }));\n\n  filteredSubs = (subs, query) => filterSubs(subs, query);\n\n  showTotalAmmountOfSubs = () => {\n    const { subs } = this.props;\n    const { showFavorites, query } = this.state;\n\n    return showFavorites\n      ? this.filteredSubs(this.filterFavorites(), query).length\n      : this.filteredSubs(subs, query).length;\n  };\n\n  renderSubsList = () => {\n    const { subs } = this.props;\n    const { showFavorites, query } = this.state;\n\n    return showFavorites\n      ? this.filteredSubs(this.filterFavorites(), query)\n      : this.filteredSubs(subs, query);\n  };\n\n  handleChangePage = name => {\n    this.setState({\n      currentPage: name,\n    });\n  };\n\n  renderPaginationList = () => {\n    const { currentPage, perPage } = this.state;\n    const list = [...this.renderSubsList().reverse()];\n\n    const indexOfLastSub = currentPage * perPage;\n    const indexOfFirstSub = indexOfLastSub - perPage;\n    return list.slice(indexOfFirstSub, indexOfLastSub);\n  };\n\n  render() {\n    const { query, onChangeText, perPage } = this.state;\n    const { subsLoad } = this.props;\n    return (\n      <Content>\n        {subsLoad && <div className=\"rainbow-marker-loader\" />}\n\n        <Form>\n          <SteamForm\n            handleSubmit={this.handleSubmit}\n            query={query}\n            handleFilterSubs={this.handleFilterSubs}\n            showFavorites={this.showFavorites}\n            onChangeText={onChangeText}\n            onReset={this.resetFilter}\n          />\n\n          <SubsInfo showTotalAmmountOfSubs={this.showTotalAmmountOfSubs()} />\n        </Form>\n        <List>\n          <SteamList subscribers={this.renderPaginationList()} />\n\n          {this.renderSubsList().length > 0 && (\n            <PaginationBlock>\n              <Pagination\n                showQuickJumper\n                defaultCurrent={1}\n                defaultPageSize={perPage}\n                total={this.renderSubsList().length}\n                onChange={this.handleChangePage}\n              />\n            </PaginationBlock>\n          )}\n          <ToastContainer />\n        </List>\n      </Content>\n    );\n  }\n}\n\nconst PaginationBlock = styled.div`\n  text-align: center;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 90%;\n  margin: 0 auto;\n  justify-content: space-between;\n`;\n\nconst Form = styled.div`\n  width: 20%;\n  /* margin: 0 auto; */\n  display: flex;\n  flex-direction: column;\n`;\n\nconst List = styled.div`\n  width: 60%;\n`;\n\nSubscribers.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  getSubs: PropTypes.func.isRequired,\n  addSub: PropTypes.func.isRequired,\n  subs: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  subsLoad: PropTypes.bool.isRequired,\n  ownerId: PropTypes.string.isRequired,\n};\n\nconst mapSTP = state => ({\n  isAuth: authSelector(state),\n  subs: subsSelector(state),\n  subsLoad: subsLoadSelector(state),\n  addSubLoad: addSubLoadSelector(state),\n  ownerId: idSelector(state),\n});\n\nconst mDTP = {\n  getSubs,\n  addSub,\n};\n\nexport default connect(\n  mapSTP,\n  mDTP,\n)(Subscribers);\n"],"sourceRoot":""}