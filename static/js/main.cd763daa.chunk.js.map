{"version":3,"sources":["Components/MouseTrail.js","Components/FormDialog/FormDialog.js","services/subsApi.js","Components/JellyButton.js","Components/SteamList/SteamForm.js","Components/SteamList/SteamItem.js","Components/SteamList/SteamList.js","Pages/Subscribers.js","Components/App.js","index.js"],"names":["Point","x","y","Object","classCallCheck","this","lifetime","MouseTrail","state","cHeight","cWidth","canvas","React","createRef","componentDidMount","_this","setState","document","body","clientWidth","window","addEventListener","clientHeight","matchMedia","matches","startAnimation","current","ctx","getContext","points","_ref","clientX","clientY","point","push","addPoint","offsetLeft","offsetTop","animatePoints","clearRect","width","height","i","length","lastPoint","undefined","shift","lifePercent","spreadRate","lineJoin","lineWidth","red","Math","floor","blue","strokeStyle","concat","beginPath","moveTo","lineTo","stroke","closePath","requestAnimationFrame","render","_this$state","react_default","a","createElement","ref","className","Component","FormDialog","submitPassword","_useState","useState","_useState2","slicedToArray","input","setInput","Dialog","open","aria-labelledby","DialogTitle","id","onSubmit","e","preventDefault","trim","DialogContent","DialogContentText","TextField","autoFocus","value","margin","label","type","onChange","_ref2","target","fullWidth","DialogActions","Button","color","URL","getSubs","axios","get","then","response","data","subs","postSub","sub","post","addedSub","updateFav","patch","updatedSub","JellyButton","text","onClick","defaultProps","SteamForm","name","userID","success","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","warn","error","handleInputChange","_ref$target","defineProperty","handleFormSubmit","find","el","toLowerCase","toLocaleLowerCase","props","handleSubmit","_this$state2","_this$props","handleFilterSubs","query","showFavorites","onChangeText","autoComplete","placeholder","Components_JellyButton","react_toastify","newestOnTop","rtl","pauseOnVisibilityChange","SteamItem","_id","date","favorite","handleFavChange","Fragment","src","alt","SteamList","subscribers","map","key","SteamList_SteamItem","assign","Subscribers","loadingSubs","isAuth","subToAdd","objectSpread","Date","toLocaleDateString","toLocaleTimeString","addedTask","toConsumableArray","filterFavorites","filter","handleFavoriteChange","updatedFav","_this2","prevProps","_this3","filteredSubs","arr","arguments","includes","filterSubs","SteamList_SteamForm","CircularProgress","Components_SteamList_SteamList","reverse","slice","App","setIsAuth","Components_MouseTrail","Pages_Subscribers","password","process","ReactDOM","Components_App","getElementById"],"mappings":"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","file":"static/js/main.cd763daa.chunk.js","sourcesContent":["import React from 'react';\n\n/* Mouse trail adapted from a jQuery Codepen by Bryan C https://codepen.io/bryjch/pen/QEoXwA */\n\nclass Point {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.lifetime = 0;\n  }\n}\n\nclass MouseTrail extends React.Component {\n  state = {\n    cHeight: 0,\n    cWidth: 0,\n  };\n\n  canvas = React.createRef();\n\n  componentDidMount = () => {\n    // Set height and width on load because if set in state body isn't defined yet.\n    this.setState({\n      cHeight: 2000,\n      cWidth: document.body.clientWidth,\n    });\n\n    window.addEventListener(\n      'resize',\n      () => {\n        this.setState({\n          cHeight: document.body.clientHeight,\n          cWidth: document.body.clientWidth,\n        });\n      },\n      false,\n    );\n\n    // If the device supports cursors, start animation.\n    if (matchMedia('(pointer:fine)').matches) {\n      this.startAnimation();\n    }\n  };\n\n  startAnimation = () => {\n    const canvas = this.canvas.current;\n    const ctx = canvas.getContext('2d');\n\n    const points = [];\n\n    const addPoint = (x, y) => {\n      const point = new Point(x, y);\n      points.push(point);\n    };\n\n    document.addEventListener(\n      'mousemove',\n      ({ clientX, clientY }) => {\n        addPoint(clientX - canvas.offsetLeft, clientY - canvas.offsetTop);\n      },\n      false,\n    );\n\n    const animatePoints = () => {\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      const duration = (0.7 * (1 * 1000)) / 60; // Last 80% of a frame per point\n\n      for (let i = 0; i < points.length; ++i) {\n        const point = points[i];\n        let lastPoint;\n\n        if (points[i - 1] !== undefined) {\n          lastPoint = points[i - 1];\n        } else lastPoint = point;\n\n        point.lifetime += 1;\n\n        if (point.lifetime > duration) {\n          // If the point dies, remove it.\n          points.shift();\n        } else {\n          // Otherwise animate it:\n\n          // As the lifetime goes on, lifePercent goes from 0 to 1.\n          const lifePercent = point.lifetime / duration;\n          const spreadRate = 7 * (1 - lifePercent);\n\n          ctx.lineJoin = 'round';\n          ctx.lineWidth = spreadRate;\n\n          // As time increases decrease r and b, increase g to go from purple to green.\n          const red = Math.floor(190 - 190 * lifePercent);\n          const green = 0;\n          const blue = Math.floor(210 + 210 * lifePercent);\n          ctx.strokeStyle = `rgb(${red},${green},${blue}`;\n\n          ctx.beginPath();\n\n          ctx.moveTo(lastPoint.x, lastPoint.y);\n          ctx.lineTo(point.x, point.y);\n\n          ctx.stroke();\n          ctx.closePath();\n        }\n      }\n      requestAnimationFrame(animatePoints);\n    };\n\n    animatePoints();\n  };\n\n  render = () => {\n    const { cHeight, cWidth } = this.state;\n    return (\n      <canvas\n        ref={this.canvas}\n        className=\"mouse-trail\"\n        width={cWidth}\n        height={cHeight}\n      />\n    );\n  };\n}\n\nexport default MouseTrail;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core';\n\nexport default function FormDialog({ submitPassword }) {\n  const [input, setInput] = useState('');\n\n  const handleChange = ({ target: { value } }) => setInput(value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const password = input.trim();\n    if (password === '') return;\n    submitPassword(input);\n  };\n  return (\n    <Dialog open aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Sign in</DialogTitle>\n      <form onSubmit={handleSubmit}>\n        <DialogContent>\n          <DialogContentText>\n            To proceed please enter a valid password\n          </DialogContentText>\n          <TextField\n            autoFocus\n            value={input}\n            margin=\"dense\"\n            label=\"Password\"\n            type=\"pasword\"\n            onChange={handleChange}\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button type=\"submit\" color=\"primary\">\n            Jump\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n\nFormDialog.propTypes = {\n  submitPassword: PropTypes.func.isRequired,\n};\n","import axios from 'axios';\n\nconst URL = 'https://steam-subscribtions.herokuapp.com/subscribers';\n\nexport const getSubs = () =>\n  axios.get(URL).then(response => response.data.subs);\n\nexport const postSub = sub =>\n  axios.post(URL, sub).then(response => response.data.addedSub);\n\nexport const updateFav = (id, sub) =>\n  axios\n    .patch(`${URL}/updateSub/${id}`, sub)\n    .then(response => response.data.updatedSub);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst JellyButton = ({ text, onClick, type }) => (\n  <button type={type} className=\"jelly-button\" onClick={onClick}>\n    <p className=\"super-slide\">{text}</p>\n  </button>\n);\n\nJellyButton.defaultProps = {\n  onClick: null,\n};\n\nJellyButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n};\n\nexport default JellyButton;\n","/* eslint-disable */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { getSubs } from '../../services/subsApi';\nimport JellyButton from '../JellyButton';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Toogle from './Toogle';\n\nclass SteamForm extends Component {\n  static propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n    handleFilterSubs: PropTypes.func.isRequired,\n    query: PropTypes.string.isRequired,\n    showFavorites: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    userID: '',\n  };\n\n  success = length =>\n    toast.success(`🤟 Sub added! Total ammout:  ${length}`, {\n      position: 'top-right',\n      autoClose: 4000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n    });\n\n  warn = () =>\n    toast.warn('😤😤😤 Fill the field!!!', {\n      position: 'top-left',\n      autoClose: 2000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n    });\n\n  error = () =>\n    toast.error('🤪 Sub already exists', {\n      position: 'top-center',\n      autoClose: 2000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n    });\n\n  handleInputChange = ({ target: { name, value } }) =>\n    this.setState({ [name]: value });\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n    const { name, userID } = this.state;\n    getSubs().then(data => {\n      if (name === '') return this.warn();\n      const subAlreadyExists = data.find(\n        el =>\n          el.name.toLowerCase().trim() === name.toLocaleLowerCase().trim() ||\n          el.userID === userID,\n      );\n      if (subAlreadyExists) return this.error();\n      this.success(data.length + 1);\n      this.props.handleSubmit(this.state);\n      return this.setState({ name: '', userID: '' });\n    });\n  };\n\n  render() {\n    const { name, userID } = this.state;\n    const { handleFilterSubs, query, showFavorites, onChangeText } = this.props;\n    return (\n      <form onSubmit={this.handleFormSubmit} className=\"sub-form\">\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={name}\n          name=\"name\"\n          onChange={this.handleInputChange}\n          className=\"sub-form__input\"\n          placeholder=\"Add sub here\"\n        />\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={userID}\n          name=\"userID\"\n          onChange={this.handleInputChange}\n          className=\"sub-form__input\"\n          placeholder=\"User id (optional)\"\n        />\n        <JellyButton text=\"Add new sub\" type=\"submit\" />\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={query}\n          placeholder={'filter sub here'}\n          name=\"query\"\n          onChange={handleFilterSubs}\n          className=\"sub-form__input\"\n        />\n        {/* <button type=\"button\" onClick={() => showFavorites()}>\n          {onChangeText}\n        </button> */}\n        <JellyButton\n          text={onChangeText}\n          type=\"button\"\n          onClick={() => showFavorites()}\n        />\n        {/* <Toogle handleFav={() => showFavorites()} /> */}\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={4000}\n          hideProgressBar={false}\n          newestOnTop\n          closeOnClick\n          rtl={false}\n          pauseOnVisibilityChange\n          draggable\n          pauseOnHover\n        />\n      </form>\n    );\n  }\n}\n\nexport default SteamForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/* eslint-disable */\nconst SteamItem = ({ _id: id, name, date, favorite, handleFavChange }) => (\n  <>\n    <div>\n      <h2>{name}</h2>\n      <p className=\"item-date\">Added at: {date}</p>\n    </div>\n    <button\n      className=\"image-wrapper\"\n      type=\"button\"\n      onClick={() => handleFavChange(id, favorite)}\n    >\n      <img\n        className=\"item-image\"\n        src={\n          favorite\n            ? 'https://image.flaticon.com/icons/svg/148/148838.svg'\n            : 'https://image.flaticon.com/icons/svg/149/149219.svg'\n        }\n        alt=\"fav\"\n      />\n    </button>\n  </>\n);\n\nSteamItem.defaultProps = {\n  favorite: false,\n};\n\nSteamItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  favorite: PropTypes.bool,\n  handleFavChange: PropTypes.func.isRequired,\n};\n\nexport default SteamItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport SteamItem from './SteamItem';\n/* eslint-disable */\n\nconst SteamList = ({ subscribers, handleFavChange }) => (\n  <ul className=\"subs-list container\">\n    {subscribers.map(sub => (\n      <li key={sub._id} className=\"subs-list__item\">\n        <SteamItem {...sub} handleFavChange={handleFavChange} />\n      </li>\n    ))}\n  </ul>\n);\n\nSteamList.propTypes = {\n  subscribers: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  handleFavChange: PropTypes.func.isRequired,\n};\n\nexport default SteamList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { CircularProgress } from '@material-ui/core';\n\nimport SteamForm from '../Components/SteamList/SteamForm';\nimport SteamList from '../Components/SteamList/SteamList';\nimport { getSubs, postSub, updateFav } from '../services/subsApi';\n/* eslint-disable */\n\nconst filterSubs = (arr, query = '') =>\n  arr.filter(\n    el =>\n      el.name.toLowerCase().includes(query.toLowerCase()) ||\n      el.userID === query,\n  );\n\nclass Subscribers extends Component {\n  state = {\n    subs: [],\n    query: '',\n    showFavorites: false,\n    onChangeText: 'Show favourites',\n    loadingSubs: false,\n  };\n\n  componentDidMount() {\n    const { isAuth } = this.props;\n\n    if (!isAuth) return;\n    getSubs().then(data => this.setState({ subs: data }));\n  }\n\n  async componentDidUpdate(prevProps) {\n    const { isAuth } = this.props;\n\n    if (prevProps.isAuth !== isAuth && isAuth) {\n      await this.setState({ loadingSubs: true });\n      getSubs().then(data => {\n        this.setState({ subs: data, loadingSubs: false });\n      });\n    }\n  }\n\n  handleSubmit = sub => {\n    const { isAuth } = this.props;\n    if (!isAuth) return;\n\n    const subToAdd = {\n      favorite: false,\n      date: `${new Date().toLocaleDateString()} ${new Date().toLocaleTimeString()}`,\n      ...sub,\n    };\n\n    postSub(subToAdd).then(addedTask =>\n      this.setState(state => ({ subs: [...state.subs, addedTask] })),\n    );\n  };\n\n  handleFilterSubs = e => this.setState({ query: e.target.value });\n\n  filterFavorites = () => this.state.subs.filter(el => el.favorite);\n\n  showFavorites = () =>\n    this.setState(state => ({\n      showFavorites: !state.showFavorites,\n      onChangeText: state.showFavorites ? 'Show favourites' : 'Show all',\n    }));\n\n  handleFavoriteChange = (id, favorite) => {\n    updateFav(id, { favorite: !favorite }).then(updatedFav => {\n      this.setState(\n        state => ({\n          subs: state.subs.map(sub => (sub._id === id ? updatedFav : sub)),\n        }),\n        () => {\n          if (favorite === false) toast.success('Added to favorites');\n          if (favorite === true) toast.success('Removed from favorites');\n        },\n      );\n    });\n  };\n\n  render() {\n    const {\n      subs,\n      query,\n      showFavorites,\n      onChangeText,\n      loadingSubs,\n    } = this.state;\n    const filteredSubs = filterSubs(subs, query);\n\n    return (\n      <div className=\"stars-back\">\n        <div id=\"stars\" />\n        <div id=\"stars2\" />\n        <div id=\"stars3\" />\n        <SteamForm\n          handleSubmit={this.handleSubmit}\n          query={query}\n          handleFilterSubs={this.handleFilterSubs}\n          showFavorites={this.showFavorites}\n          onChangeText={onChangeText}\n        />\n        {loadingSubs ? (\n          <CircularProgress className=\"material-loader\" color=\"secondary\" />\n        ) : showFavorites ? (\n          <>\n            <div className=\"subs-length-wrap\">\n              <p className=\"subs-length-text\">\n                Total length: {this.filterFavorites().length}\n              </p>\n            </div>\n            <SteamList\n              subscribers={this.filterFavorites()}\n              handleFavChange={this.handleFavoriteChange}\n            />\n          </>\n        ) : (\n          <>\n            <div className=\"subs-length-wrap\">\n              <p className=\"subs-length-text\">\n                Total length: {filteredSubs.length}\n              </p>\n            </div>\n            <SteamList\n              subscribers={filteredSubs.reverse().slice(0, 20)}\n              handleFavChange={this.handleFavoriteChange}\n            />\n          </>\n        )}\n\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n\nSubscribers.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n};\n\nexport default Subscribers;\n","import React, { useState } from 'react';\nimport MouseTrail from './MouseTrail';\n\nimport FormDialog from './FormDialog/FormDialog';\nimport Subscribers from '../Pages/Subscribers';\n\nconst App = () => {\n  const [isAuth, setIsAuth] = useState(true);\n\n  const handleAuth = password => {\n    return password === process.env.REACT_APP_PASSWORD ? setIsAuth(true) : null;\n  };\n\n  return (\n    <>\n      <MouseTrail />\n      <Subscribers isAuth={isAuth} />\n      {!isAuth && <FormDialog submitPassword={handleAuth} />}\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport './scss/main.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}