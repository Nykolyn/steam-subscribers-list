{"version":3,"sources":["helpers/ValidationHelper.js","Components/Copyright/Copyright.js","Components/AuthForm/AuthForm.js","Pages/Auth/Login.js"],"names":["ValidationHelper","value","type","this","REQUIRED_INPUT_ERR_MSG","length","SHORT_PASS_ERR_MSG","LONG_PASS_ERR_MSG","emailRegex","test","INVALID_EMAIL_ERR_MSG","Copyright","react_default","a","createElement","Typography","variant","color","align","Date","getFullYear","validate","check","toString","trim","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","AuthForm","_ref","errorMsg","loading","clearAuthErrorMsg","submitFunc","redirectToPath","redirectToText","typeOfAuth","useEffect","classes","_useState","useState","_useState2","Object","slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","rememberMe","setRememberMe","_useState7","_useState8","errors","setErrors","handleInputChange","_ref2","_ref2$target","target","name","checked","handleBlur","_ref3","_ref3$target","objectSpread","defineProperty","Container","component","maxWidth","CssBaseline","className","Avatar","LockOutlined_default","onSubmit","e","preventDefault","validation","keys","find","el","TextField","error","Boolean","helperText","fullWidth","onBlur","onChange","label","autoComplete","autoFocus","FormControlLabel","control","Checkbox","Button","disabled","Grid","container","item","xs","react_router_dom","to","Box","mt","mb","defaultProps","mDTP","connect","state","authErrorSelector","authLoadingSelector","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","_redux_operations_authOperations__WEBPACK_IMPORTED_MODULE_2__","_Components_AuthForm_AuthForm__WEBPACK_IMPORTED_MODULE_3__","signIn"],"mappings":"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","file":"static/js/8.ef33db66.chunk.js","sourcesContent":["export default class ValidationHelper {\n  /* eslint-disable no-useless-escape */\n  static emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  static REQUIRED_INPUT_ERR_MSG = 'This field is required';\n\n  static SHORT_PASS_ERR_MSG = 'Password is too short!';\n\n  static LONG_PASS_ERR_MSG = 'Password is too long!';\n\n  static INVALID_EMAIL_ERR_MSG = \"Email your've entered is invalid\";\n\n  static check(value, type) {\n    switch (type) {\n      case 'username': {\n        if (!value) {\n          return this.REQUIRED_INPUT_ERR_MSG;\n        }\n        return '';\n      }\n      case 'password': {\n        if (!value) return this.REQUIRED_INPUT_ERR_MSG;\n        if (value.length < 6) return this.SHORT_PASS_ERR_MSG;\n        if (value.length > 16) return this.LONG_PASS_ERR_MSG;\n\n        return '';\n      }\n\n      case 'email': {\n        if (!value) return this.REQUIRED_INPUT_ERR_MSG;\n        if (!this.emailRegex.test(value)) return this.INVALID_EMAIL_ERR_MSG;\n\n        return '';\n      }\n\n      default:\n        return '';\n    }\n  }\n\n  static validate = (type, value) => {\n    return this.check(value.toString().trim(), type);\n  };\n}\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nexport default function Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      Copyright Â© Nykolyn Andrii 2019-{new Date().getFullYear()}.\n    </Typography>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  FormControlLabel,\n  Checkbox,\n  Grid,\n  Box,\n  Typography,\n  Container,\n} from '@material-ui/core';\nimport { Link as RouteLink } from 'react-router-dom';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ValidationHelper from '../../helpers/ValidationHelper';\nimport Copyright from '../Copyright/Copyright';\nimport { clearAuthErrorMsg } from '../../redux/actions/authActions';\nimport {\n  authErrorSelector,\n  authLoadingSelector,\n} from '../../redux/selectors/authSelectors';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst AuthForm = ({\n  errorMsg,\n  loading,\n  clearAuthErrorMsg,\n  submitFunc,\n  redirectToPath,\n  redirectToText,\n  typeOfAuth,\n}) => {\n  useEffect(() => {\n    if (errorMsg) {\n      clearAuthErrorMsg();\n    }\n    /* eslint-disable-next-line */\n  }, []);\n  const classes = useStyles();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [rememberMe, setRememberMe] = useState(false);\n  const [errors, setErrors] = useState({});\n\n  const handleInputChange = ({ target: { name, value, checked } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      case 'rememberMe':\n        return setRememberMe(checked);\n\n      default:\n        return '';\n    }\n  };\n\n  const handleBlur = ({ target: { name, value } }) => {\n    if (!value) return;\n    setErrors({ ...errors, [name]: ValidationHelper.validate(name, value) });\n  };\n\n  const validate = () => {\n    const validation = {\n      email: ValidationHelper.validate('email', email),\n      password: ValidationHelper.validate('password', password),\n    };\n\n    setErrors(validation);\n\n    return Object.keys(validation).find(el => validation[el]);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) return;\n\n    submitFunc({ password, email, rememberMe });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          {typeOfAuth}\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Typography component=\"h1\" variant=\"h5\" color=\"error\" align=\"center\">\n            {errorMsg}\n          </Typography>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            error={Boolean(errors.email)}\n            helperText={errors.email}\n            fullWidth\n            value={email}\n            onBlur={handleBlur}\n            onChange={handleInputChange}\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            onBlur={handleBlur}\n            helperText={errors.password}\n            error={Boolean(errors.password)}\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={password}\n            onChange={handleInputChange}\n            autoComplete=\"current-password\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                value={rememberMe}\n                name=\"rememberMe\"\n                onChange={handleInputChange}\n                color=\"primary\"\n              />\n            }\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            disabled={loading}\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            {loading ? 'Loading...' : 'Sign In'}\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              {/* <Link href=\"#\" variant=\"body2\">\n              Forgot password?\n            </Link> */}\n            </Grid>\n            <Grid item>\n              <RouteLink to={redirectToPath} className=\"auth-switch\">\n                {/* eslint-disable-next-line */}\n                {redirectToText}\n              </RouteLink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8} mb={4}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n};\n\nAuthForm.defaultProps = {\n  errorMsg: '',\n};\n\nAuthForm.propTypes = {\n  errorMsg: PropTypes.string,\n  clearAuthErrorMsg: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  submitFunc: PropTypes.func.isRequired,\n  redirectToPath: PropTypes.string.isRequired,\n  typeOfAuth: PropTypes.string.isRequired,\n  redirectToText: PropTypes.string.isRequired,\n};\n\nconst mSTP = state => ({\n  errorMsg: authErrorSelector(state),\n  loading: authLoadingSelector(state),\n});\n\nconst mDTP = {\n  clearAuthErrorMsg,\n};\n\nexport default connect(\n  mSTP,\n  mDTP,\n)(AuthForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { signIn } from '../../redux/operations/authOperations';\nimport AuthForm from '../../Components/AuthForm/AuthForm';\n\nfunction Login({ signIn }) {\n  return (\n    <AuthForm\n      submitFunc={signIn}\n      redirectToText=\"Don't have an account? Sign up\"\n      redirectToPath=\"/auth/register\"\n      typeOfAuth=\"Sign In\"\n    />\n  );\n}\n\nLogin.propTypes = {\n  signIn: PropTypes.func.isRequired,\n};\n\nconst mDTP = {\n  signIn,\n};\n\nexport default connect(\n  null,\n  mDTP,\n)(Login);\n"],"sourceRoot":""}